; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	k:\Progs to install\My Documents\Visual Studio 2008\Projects\Intro 3D Game\Mine\Pick\Mob.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??8D3DXVECTOR3@@QBEHABU0@@Z			; D3DXVECTOR3::operator==
PUBLIC	??XD3DXVECTOR3@@QAEAAU0@M@Z			; D3DXVECTOR3::operator*=
PUBLIC	_sqrtf
PUBLIC	?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z		; D3DXVec3Length
PUBLIC	_acosf
EXTRN	_D3DXVec3Project@24:PROC
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
PUBLIC	?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z		; Mob::InitaliseLinked
; Function compile flags: /Ogtpy
;	COMDAT ?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z
_TEXT	SEGMENT
?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z PROC		; Mob::InitaliseLinked, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\mob.cpp
; Line 345
	mov	edx, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
; Line 349
	cmp	edx, 1
	mov	DWORD PTR ?Bird@@3PAVMob@@A+184, 0
	mov	DWORD PTR ?Bird@@3PAVMob@@A+180, OFFSET ?Bird@@3PAVMob@@A+192
	jl	SHORT $LN1@InitaliseL
; Line 351
	mov	eax, OFFSET ?Bird@@3PAVMob@@A+184
	mov	ecx, edx
	push	edi
	npad	9
$LL3@InitaliseL:
	add	eax, 192				; 000000c0H
	sub	ecx, 1
; Line 352
	lea	edi, DWORD PTR [eax-376]
	mov	DWORD PTR [eax], edi
; Line 353
	lea	edi, DWORD PTR [eax+8]
	mov	DWORD PTR [eax-4], edi
	jne	SHORT $LL3@InitaliseL
	pop	edi
$LN1@InitaliseL:
; Line 356
	lea	eax, DWORD PTR [edx+edx*2]
	shl	eax, 6
	lea	eax, DWORD PTR ?Bird@@3PAVMob@@A[eax]
	lea	ecx, DWORD PTR [eax-192]
	mov	DWORD PTR [eax+184], ecx
; Line 357
	mov	DWORD PTR [eax+180], 0
; Line 359
	ret	0
?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z ENDP		; Mob::InitaliseLinked
_TEXT	ENDS
PUBLIC	?SwapLL@Mob@@AAE_NPAV1@0@Z			; Mob::SwapLL
; Function compile flags: /Ogtpy
;	COMDAT ?SwapLL@Mob@@AAE_NPAV1@0@Z
_TEXT	SEGMENT
?SwapLL@Mob@@AAE_NPAV1@0@Z PROC				; Mob::SwapLL, COMDAT
; _A$ = ecx
; _B$ = eax
; Line 326
	mov	edx, DWORD PTR [ecx+184]
	push	ebx
	push	ebp
	push	esi
; Line 330
	mov	esi, DWORD PTR [eax+180]
; Line 331
	mov	ebx, DWORD PTR [esi+184]
	push	edi
	mov	edi, DWORD PTR [edx+180]
; Line 333
	mov	DWORD PTR [edx+180], eax
; Line 334
	mov	ebp, DWORD PTR [eax+180]
	mov	DWORD PTR [ebp+184], ecx
; Line 335
	mov	DWORD PTR [ecx+180], esi
; Line 336
	mov	DWORD PTR [eax+180], edi
	pop	edi
	pop	esi
; Line 337
	mov	DWORD PTR [eax+184], edx
	pop	ebp
; Line 338
	mov	DWORD PTR [ecx+184], ebx
; Line 339
	mov	al, 1
	pop	ebx
; Line 340
	ret	0
?SwapLL@Mob@@AAE_NPAV1@0@Z ENDP				; Mob::SwapLL
_TEXT	ENDS
PUBLIC	?Sort@Mob@@SAPAV1@PAV1@H@Z			; Mob::Sort
; Function compile flags: /Ogtpy
;	COMDAT ?Sort@Mob@@SAPAV1@PAV1@H@Z
_TEXT	SEGMENT
?Sort@Mob@@SAPAV1@PAV1@H@Z PROC				; Mob::Sort, COMDAT
; Line 174
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	push	esi
; Line 180
	mov	ebx, ebp
; Line 181
	test	ebp, ebp
	jle	$LN35@Sort
	push	edi
$LL10@Sort:
; Line 190
	cmp	ebx, 4
	mov	ecx, DWORD PTR ?Bird@@3PAVMob@@A+180
	mov	edi, ebx
	mov	esi, OFFSET ?Bird@@3PAVMob@@A		; Bird
	jl	$LC20@Sort
	npad	6
$LL36@Sort:
; Line 193
	mov	edx, DWORD PTR [ecx+180]
; Line 194
	test	edx, edx
	je	$LN38@Sort
; Line 196
	fld	DWORD PTR [ecx+24]
	fld	DWORD PTR [edx+24]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN21@Sort
; Line 198
	mov	DWORD PTR [esi+180], edx
; Line 199
	mov	eax, DWORD PTR [edx+180]
	mov	DWORD PTR [ecx+180], eax
; Line 200
	mov	DWORD PTR [edx+180], ecx
; Line 202
	mov	esi, edx
; Line 204
	jmp	SHORT $LN22@Sort
$LN21@Sort:
; Line 206
	mov	esi, ecx
; Line 207
	mov	ecx, edx
$LN22@Sort:
	mov	edx, DWORD PTR [ecx+180]
	test	edx, edx
	je	$LN38@Sort
	fld	DWORD PTR [ecx+24]
	fld	DWORD PTR [edx+24]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN23@Sort
	mov	DWORD PTR [esi+180], edx
	mov	eax, DWORD PTR [edx+180]
	mov	DWORD PTR [ecx+180], eax
	mov	DWORD PTR [edx+180], ecx
	mov	esi, edx
	jmp	SHORT $LN24@Sort
$LN23@Sort:
; Line 206
	mov	esi, ecx
; Line 207
	mov	ecx, edx
$LN24@Sort:
	mov	edx, DWORD PTR [ecx+180]
	test	edx, edx
	je	$LN38@Sort
	fld	DWORD PTR [ecx+24]
	fld	DWORD PTR [edx+24]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN26@Sort
	mov	DWORD PTR [esi+180], edx
	mov	eax, DWORD PTR [edx+180]
	mov	DWORD PTR [ecx+180], eax
	mov	DWORD PTR [edx+180], ecx
	mov	esi, edx
	jmp	SHORT $LN27@Sort
$LN26@Sort:
; Line 206
	mov	esi, ecx
; Line 207
	mov	ecx, edx
$LN27@Sort:
	mov	edx, DWORD PTR [ecx+180]
	test	edx, edx
	je	SHORT $LN38@Sort
	fld	DWORD PTR [ecx+24]
	fld	DWORD PTR [edx+24]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN29@Sort
	mov	DWORD PTR [esi+180], edx
	mov	eax, DWORD PTR [edx+180]
	mov	DWORD PTR [ecx+180], eax
	mov	DWORD PTR [edx+180], ecx
	mov	esi, edx
	jmp	SHORT $LN30@Sort
$LN29@Sort:
; Line 206
	mov	esi, ecx
; Line 207
	mov	ecx, edx
$LN30@Sort:
	sub	edi, 4
	cmp	edi, 3
	jg	$LL36@Sort
$LC20@Sort:
; Line 190
	test	edi, edi
	jle	SHORT $LN38@Sort
$LC8@Sort:
; Line 193
	mov	edx, DWORD PTR [ecx+180]
; Line 194
	test	edx, edx
	je	SHORT $LN38@Sort
; Line 196
	fld	DWORD PTR [ecx+24]
	fld	DWORD PTR [edx+24]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN5@Sort
; Line 198
	mov	DWORD PTR [esi+180], edx
; Line 199
	mov	eax, DWORD PTR [edx+180]
	mov	DWORD PTR [ecx+180], eax
; Line 200
	mov	DWORD PTR [edx+180], ecx
; Line 202
	mov	esi, edx
; Line 204
	jmp	SHORT $LN4@Sort
$LN5@Sort:
; Line 206
	mov	esi, ecx
; Line 207
	mov	ecx, edx
$LN4@Sort:
; Line 209
	dec	edi
	test	edi, edi
	jg	SHORT $LC8@Sort
$LN38@Sort:
; Line 211
	dec	ebx
	test	ebx, ebx
	jg	$LL10@Sort
	pop	edi
$LN35@Sort:
; Line 215
	mov	ecx, DWORD PTR ?Bird@@3PAVMob@@A+180
	mov	eax, OFFSET ?Bird@@3PAVMob@@A		; Bird
	mov	DWORD PTR [ecx+184], eax
; Line 217
	test	ebp, ebp
	jle	SHORT $LN2@Sort
	mov	ecx, OFFSET ?Bird@@3PAVMob@@A+180
	mov	esi, ebp
	npad	12
$LL3@Sort:
; Line 219
	mov	eax, DWORD PTR [ecx]
; Line 220
	mov	edx, DWORD PTR [eax+180]
	lea	ecx, DWORD PTR [eax+180]
	test	edx, edx
	je	SHORT $LN1@Sort
; Line 221
	mov	DWORD PTR [edx+184], eax
$LN1@Sort:
; Line 217
	sub	esi, 1
	jne	SHORT $LL3@Sort
$LN2@Sort:
	pop	esi
	pop	ebp
	pop	ebx
; Line 225
	ret	0
?Sort@Mob@@SAPAV1@PAV1@H@Z ENDP				; Mob::Sort
_TEXT	ENDS
PUBLIC	??1Mob@@QAE@XZ					; Mob::~Mob
; Function compile flags: /Ogtpy
;	COMDAT ??1Mob@@QAE@XZ
_TEXT	SEGMENT
??1Mob@@QAE@XZ PROC					; Mob::~Mob, COMDAT
; _this$ = ecx
; Line 65
	xor	eax, eax
	mov	DWORD PTR [ecx+180], eax
; Line 66
	mov	DWORD PTR [ecx+184], eax
; Line 67
	ret	0
??1Mob@@QAE@XZ ENDP					; Mob::~Mob
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??8D3DXVECTOR3@@QBEHABU0@@Z
_TEXT	SEGMENT
??8D3DXVECTOR3@@QBEHABU0@@Z PROC			; D3DXVECTOR3::operator==, COMDAT
; _this$ = edx
; _v$ = ecx
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
; Line 414
	fld	DWORD PTR [edx]
	fld	DWORD PTR [ecx]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator@3
	fld	DWORD PTR [edx+4]
	fld	DWORD PTR [ecx+4]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator@3
	fld	DWORD PTR [edx+8]
	fld	DWORD PTR [ecx+8]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator@3
	mov	eax, 1
; Line 415
	ret	0
$LN3@operator@3:
; Line 414
	xor	eax, eax
; Line 415
	ret	0
??8D3DXVECTOR3@@QBEHABU0@@Z ENDP			; D3DXVECTOR3::operator==
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??XD3DXVECTOR3@@QAEAAU0@M@Z
_TEXT	SEGMENT
_f$ = 8							; size = 4
??XD3DXVECTOR3@@QAEAAU0@M@Z PROC			; D3DXVECTOR3::operator*=, COMDAT
; _this$ = eax
; Line 346
	fld	DWORD PTR [eax]
	fld	DWORD PTR _f$[esp-4]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [eax]
; Line 347
	fld	DWORD PTR [eax+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
; Line 348
	fmul	DWORD PTR [eax+8]
	fstp	DWORD PTR [eax+8]
; Line 350
	ret	4
??XD3DXVECTOR3@@QAEAAU0@M@Z ENDP			; D3DXVECTOR3::operator*=
_TEXT	ENDS
EXTRN	__CIsqrt:PROC
; Function compile flags: /Ogtpy
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; File g:\program files\microsoft visual studio 9.0\vc\include\math.h
; Line 423
	fld	DWORD PTR __X$[esp-4]
	call	__CIsqrt
	fstp	DWORD PTR tv69[esp-4]
	fld	DWORD PTR tv69[esp-4]
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
EXTRN	__CIacos:PROC
; Function compile flags: /Ogtpy
;	COMDAT _acosf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT
; Line 389
	fld	DWORD PTR __X$[esp-4]
	call	__CIacos
	fstp	DWORD PTR tv69[esp-4]
	fld	DWORD PTR tv69[esp-4]
	ret	0
_acosf	ENDP
PUBLIC	?SwapNext@Mob@@QAE_NXZ				; Mob::SwapNext
; Function compile flags: /Ogtpy
;	COMDAT ?SwapNext@Mob@@QAE_NXZ
_TEXT	SEGMENT
_TNext$87863 = -388					; size = 192
_Tthis$87864 = -196					; size = 192
?SwapNext@Mob@@QAE_NXZ PROC				; Mob::SwapNext, COMDAT
; _this$ = edx
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\mob.cpp
; Line 298
	mov	eax, DWORD PTR [edx+180]
	sub	esp, 388				; 00000184H
	push	esi
	push	edi
	test	eax, eax
	jne	SHORT $LN4@SwapNext
; Line 301
	xor	al, al
; Line 321
	pop	edi
	pop	esi
	add	esp, 388				; 00000184H
	ret	0
$LN4@SwapNext:
; Line 303
	cmp	DWORD PTR [eax+180], 0
	je	SHORT $LN2@SwapNext
	cmp	DWORD PTR [edx+184], 0
	je	SHORT $LN2@SwapNext
; Line 318
	mov	ecx, edx
	call	?SwapLL@Mob@@AAE_NPAV1@0@Z		; Mob::SwapLL
	test	al, al
	setne	al
; Line 321
	pop	edi
	pop	esi
	add	esp, 388				; 00000184H
	ret	0
$LN2@SwapNext:
; Line 307
	mov	esi, eax
	mov	ecx, 48					; 00000030H
	lea	edi, DWORD PTR _TNext$87863[esp+396]
	rep movsd
; Line 308
	mov	esi, edx
	mov	ecx, 48					; 00000030H
	lea	edi, DWORD PTR _Tthis$87864[esp+396]
	rep movsd
; Line 309
	mov	edi, eax
; Line 311
	mov	eax, DWORD PTR _Tthis$87864[esp+576]
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _Tthis$87864[esp+396]
	rep movsd
	mov	edi, edx
; Line 314
	mov	edx, DWORD PTR _Tthis$87864[esp+580]
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _TNext$87863[esp+396]
	rep movsd
	mov	ecx, DWORD PTR _TNext$87863[esp+576]
	mov	DWORD PTR [eax+180], ecx
	mov	ecx, DWORD PTR _TNext$87863[esp+580]
	mov	DWORD PTR [eax+184], ecx
; Line 321
	pop	edi
	mov	DWORD PTR [ecx+180], eax
	mov	DWORD PTR [ecx+184], edx
	mov	al, 1
	pop	esi
	add	esp, 388				; 00000184H
	ret	0
?SwapNext@Mob@@QAE_NXZ ENDP				; Mob::SwapNext
_TEXT	ENDS
PUBLIC	?SwapPrev@Mob@@QAE_NXZ				; Mob::SwapPrev
; Function compile flags: /Ogtpy
;	COMDAT ?SwapPrev@Mob@@QAE_NXZ
_TEXT	SEGMENT
_TPrev$87852 = -388					; size = 192
_Tthis$87853 = -196					; size = 192
?SwapPrev@Mob@@QAE_NXZ PROC				; Mob::SwapPrev, COMDAT
; _this$ = eax
; Line 267
	mov	edx, DWORD PTR [eax+184]
	sub	esp, 388				; 00000184H
	push	esi
	push	edi
	test	edx, edx
	jne	SHORT $LN3@SwapPrev
; Line 270
	xor	al, al
; Line 292
	pop	edi
	pop	esi
	add	esp, 388				; 00000184H
	ret	0
$LN3@SwapPrev:
; Line 272
	cmp	DWORD PTR [edx+184], 0
	jne	SHORT $LN2@SwapPrev
; Line 278
	mov	esi, edx
	mov	ecx, 48					; 00000030H
	lea	edi, DWORD PTR _TPrev$87852[esp+396]
	rep movsd
; Line 279
	mov	esi, eax
	mov	ecx, 48					; 00000030H
	lea	edi, DWORD PTR _Tthis$87853[esp+396]
	rep movsd
; Line 280
	mov	edi, edx
; Line 283
	mov	edx, DWORD PTR _TPrev$87852[esp+580]
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _Tthis$87853[esp+396]
	rep movsd
	mov	edi, eax
	mov	eax, DWORD PTR _TPrev$87852[esp+576]
	mov	ecx, 48					; 00000030H
	lea	esi, DWORD PTR _TPrev$87852[esp+396]
	rep movsd
	mov	ecx, DWORD PTR _Tthis$87853[esp+580]
	mov	DWORD PTR [ecx+184], edx
; Line 284
	mov	edx, DWORD PTR _Tthis$87853[esp+576]
	mov	DWORD PTR [ecx+180], eax
	mov	DWORD PTR [eax+180], edx
; Line 285
	mov	DWORD PTR [eax+184], ecx
; Line 286
	mov	al, 1
; Line 292
	pop	edi
	pop	esi
	add	esp, 388				; 00000184H
	ret	0
$LN2@SwapPrev:
; Line 289
	call	?SwapNext@Mob@@QAE_NXZ			; Mob::SwapNext
	test	al, al
; Line 292
	pop	edi
	setne	al
	pop	esi
	add	esp, 388				; 00000184H
	ret	0
?SwapPrev@Mob@@QAE_NXZ ENDP				; Mob::SwapPrev
_TEXT	ENDS
PUBLIC	?DynamicSort@Mob@@SAPAV1@PAV1@H@Z		; Mob::DynamicSort
; Function compile flags: /Ogtpy
;	COMDAT ?DynamicSort@Mob@@SAPAV1@PAV1@H@Z
_TEXT	SEGMENT
?DynamicSort@Mob@@SAPAV1@PAV1@H@Z PROC			; Mob::DynamicSort, COMDAT
; _Start$ = ecx
; Line 230
	mov	eax, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	push	ebx
	push	esi
; Line 233
	xor	ebx, ebx
	push	edi
	mov	esi, ecx
; Line 234
	test	eax, eax
	jle	SHORT $LN2@DynamicSor
	mov	edi, eax
$LL10@DynamicSor:
; Line 236
	mov	eax, DWORD PTR [esi+180]
	test	eax, eax
	jne	SHORT $LN8@DynamicSor
; Line 237
	mov	ebx, esi
; Line 238
	jmp	SHORT $LN3@DynamicSor
$LN8@DynamicSor:
; Line 240
	fld	DWORD PTR [esi+24]
	fld	DWORD PTR [eax+24]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN6@DynamicSor
; Line 242
	mov	edx, esi
	call	?SwapNext@Mob@@QAE_NXZ			; Mob::SwapNext
; Line 244
	jmp	SHORT $LN3@DynamicSor
$LN6@DynamicSor:
; Line 246
	mov	eax, DWORD PTR [esi+184]
	test	eax, eax
	je	SHORT $LN3@DynamicSor
; Line 248
	fld	DWORD PTR [esi+24]
	fld	DWORD PTR [eax+24]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN3@DynamicSor
; Line 250
	mov	eax, esi
	call	?SwapPrev@Mob@@QAE_NXZ			; Mob::SwapPrev
$LN3@DynamicSor:
; Line 256
	add	esi, 192				; 000000c0H
	sub	edi, 1
	jne	SHORT $LL10@DynamicSor
; Line 259
	mov	eax, ebx
	test	ebx, ebx
	jne	SHORT $LN1@DynamicSor
$LN2@DynamicSor:
; Line 261
	mov	eax, esi
$LN1@DynamicSor:
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	ret	0
?DynamicSort@Mob@@SAPAV1@PAV1@H@Z ENDP			; Mob::DynamicSort
_TEXT	ENDS
PUBLIC	?CalcScrXY@Mob@@QAEXPBU_D3DVIEWPORT9@@PBUD3DXMATRIX@@1@Z ; Mob::CalcScrXY
; Function compile flags: /Ogtpy
;	COMDAT ?CalcScrXY@Mob@@QAEXPBU_D3DVIEWPORT9@@PBUD3DXMATRIX@@1@Z
_TEXT	SEGMENT
$T94552 = -12						; size = 12
?CalcScrXY@Mob@@QAEXPBU_D3DVIEWPORT9@@PBUD3DXMATRIX@@1@Z PROC ; Mob::CalcScrXY, COMDAT
; _this$ = eax
; Line 168
	sub	esp, 12					; 0000000cH
; Line 169
	fldz
	lea	ecx, DWORD PTR [eax+36]
	push	ecx
	fst	DWORD PTR $T94552[esp+16]
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	fst	DWORD PTR $T94552[esp+24]
	push	OFFSET ?proj@@3UD3DXMATRIX@@A		; proj
	fstp	DWORD PTR $T94552[esp+32]
	push	OFFSET ?vp@@3U_D3DVIEWPORT9@@A		; vp
	lea	edx, DWORD PTR $T94552[esp+28]
	push	edx
	add	eax, 100				; 00000064H
	push	eax
	call	_D3DXVec3Project@24
; Line 170
	add	esp, 12					; 0000000cH
	ret	0
?CalcScrXY@Mob@@QAEXPBU_D3DVIEWPORT9@@PBUD3DXMATRIX@@1@Z ENDP ; Mob::CalcScrXY
_TEXT	ENDS
PUBLIC	__real@bf800000
PUBLIC	?NormVel@Mob@@QAE?AUD3DXVECTOR3@@XZ		; Mob::NormVel
;	COMDAT __real@bf800000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.h
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?NormVel@Mob@@QAE?AUD3DXVECTOR3@@XZ
_TEXT	SEGMENT
_Temp$87773 = -12					; size = 12
?NormVel@Mob@@QAE?AUD3DXVECTOR3@@XZ PROC		; Mob::NormVel, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = esi
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\mob.cpp
; Line 72
	fldz
	add	ecx, 12					; 0000000cH
	fcom	DWORD PTR [ecx]
	sub	esp, 12					; 0000000cH
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN23@NormVel
	fcom	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN23@NormVel
	fcom	DWORD PTR [ecx+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN23@NormVel
; Line 74
	fst	DWORD PTR [esi]
; Line 80
	mov	eax, esi
	fstp	DWORD PTR [esi+4]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR [esi+8]
; Line 82
	add	esp, 12					; 0000000cH
	ret	0
$LN23@NormVel:
; Line 79
	push	ecx
	fstp	ST(0)
	lea	eax, DWORD PTR _Temp$87773[esp+16]
	push	eax
	call	_D3DXVec3Normalize@8
; Line 80
	mov	ecx, DWORD PTR _Temp$87773[esp+12]
	mov	edx, DWORD PTR _Temp$87773[esp+16]
	mov	eax, DWORD PTR _Temp$87773[esp+20]
	mov	DWORD PTR [esi], ecx
	mov	DWORD PTR [esi+4], edx
	mov	DWORD PTR [esi+8], eax
	mov	eax, esi
; Line 82
	add	esp, 12					; 0000000cH
	ret	0
?NormVel@Mob@@QAE?AUD3DXVECTOR3@@XZ ENDP		; Mob::NormVel
_TEXT	ENDS
PUBLIC	??0Mob@@QAE@MMMM@Z				; Mob::Mob
; Function compile flags: /Ogtpy
;	COMDAT ??0Mob@@QAE@MMMM@Z
_TEXT	SEGMENT
tv267 = 8						; size = 4
tv263 = 8						; size = 4
tv258 = 8						; size = 4
tv256 = 8						; size = 4
tv251 = 8						; size = 4
tv249 = 8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_z$ = 16						; size = 4
_maxvel$ = 20						; size = 4
??0Mob@@QAE@MMMM@Z PROC					; Mob::Mob, COMDAT
; _this$ = esi
; Line 47
	fld	DWORD PTR _x$[esp-4]
	fstp	DWORD PTR [esi+24]
; Line 48
	fld	DWORD PTR _y$[esp-4]
	fstp	DWORD PTR [esi+28]
; Line 49
	fld	DWORD PTR _z$[esp-4]
	fstp	DWORD PTR [esi+32]
; Line 51
	call	_rand
	mov	DWORD PTR tv267[esp-4], eax
	fild	DWORD PTR tv267[esp-4]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv263[esp-4]
	fld	DWORD PTR tv263[esp-4]
	fsub	QWORD PTR __real@3fe0000000000000
	fmul	DWORD PTR _maxvel$[esp-4]
	fadd	ST(0), ST(0)
	fstp	DWORD PTR [esi+12]
; Line 52
	call	_rand
	mov	DWORD PTR tv258[esp-4], eax
	fild	DWORD PTR tv258[esp-4]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv256[esp-4]
	fld	DWORD PTR tv256[esp-4]
	fsub	QWORD PTR __real@3fe0000000000000
	fmul	DWORD PTR _maxvel$[esp-4]
	fadd	ST(0), ST(0)
	fstp	DWORD PTR [esi+16]
; Line 53
	call	_rand
	mov	DWORD PTR tv251[esp-4], eax
	fild	DWORD PTR tv251[esp-4]
; Line 59
	xor	eax, eax
	mov	DWORD PTR [esi+180], eax
; Line 60
	mov	DWORD PTR [esi+184], eax
	fdiv	QWORD PTR __real@40dfffc000000000
; Line 61
	mov	eax, esi
	fstp	DWORD PTR tv249[esp-4]
	fld	DWORD PTR tv249[esp-4]
	fsub	QWORD PTR __real@3fe0000000000000
	fmul	DWORD PTR _maxvel$[esp-4]
	fadd	ST(0), ST(0)
	fstp	DWORD PTR [esi+20]
	fldz
	fst	DWORD PTR [esi]
	fst	DWORD PTR [esi+4]
	fstp	DWORD PTR [esi+8]
	ret	16					; 00000010H
??0Mob@@QAE@MMMM@Z ENDP					; Mob::Mob
_TEXT	ENDS
PUBLIC	__real@b8d1b717
PUBLIC	__real@38d1b717
PUBLIC	__real@41800000
PUBLIC	??0Mob@@QAE@XZ					; Mob::Mob
;	COMDAT __real@b8d1b717
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.h
CONST	SEGMENT
__real@b8d1b717 DD 0b8d1b717r			; -0.0001
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0Mob@@QAE@XZ
_TEXT	SEGMENT
??0Mob@@QAE@XZ PROC					; Mob::Mob, COMDAT
; _this$ = ecx
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\mob.cpp
; Line 11
	fldz
	mov	eax, ecx
	fst	DWORD PTR [eax+24]
; Line 23
	xor	ecx, ecx
	fst	DWORD PTR [eax+28]
	mov	DWORD PTR [eax+180], ecx
	fld	DWORD PTR __real@41800000
; Line 24
	mov	DWORD PTR [eax+184], ecx
	fstp	DWORD PTR [eax+32]
	fld	DWORD PTR __real@38d1b717
	fst	DWORD PTR [eax+12]
	fstp	DWORD PTR [eax+16]
	fld	DWORD PTR __real@b8d1b717
	fstp	DWORD PTR [eax+20]
	fst	DWORD PTR [eax]
	fst	DWORD PTR [eax+4]
	fstp	DWORD PTR [eax+8]
; Line 25
	ret	0
??0Mob@@QAE@XZ ENDP					; Mob::Mob
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z
_TEXT	SEGMENT
tv169 = -4						; size = 4
tv160 = -4						; size = 4
?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z PROC		; D3DXVec3Length, COMDAT
; _pV$ = eax
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
; Line 1710
	push	ecx
; Line 1717
	fld	DWORD PTR [eax+4]
	fld	DWORD PTR [eax]
	fld	DWORD PTR [eax+8]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv169[esp+4]
	fld	DWORD PTR tv169[esp+4]
	call	__CIsqrt
	fstp	DWORD PTR tv160[esp+4]
	fld	DWORD PTR tv160[esp+4]
; Line 1721
	pop	ecx
	ret	0
?D3DXVec3Length@@YAMPBUD3DXVECTOR3@@@Z ENDP		; D3DXVec3Length
PUBLIC	?GetTransform@Mob@@QAEPAUD3DXMATRIX@@XZ		; Mob::GetTransform
; Function compile flags: /Ogtpy
;	COMDAT ?GetTransform@Mob@@QAEPAUD3DXMATRIX@@XZ
_TEXT	SEGMENT
tv341 = -108						; size = 4
$T94848 = -104						; size = 12
_Temp$94893 = -92					; size = 12
$T94849 = -92						; size = 12
_RotAxis$ = -80						; size = 12
_Rot$ = -68						; size = 64
?GetTransform@Mob@@QAEPAUD3DXMATRIX@@XZ PROC		; Mob::GetTransform, COMDAT
; _this$ = edi
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\mob.cpp
; Line 121
	fldz
	lea	ecx, DWORD PTR [edi+12]
	fcom	DWORD PTR [ecx]
	sub	esp, 112				; 00000070H
	push	esi
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN35@GetTransfo
	fcom	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN35@GetTransfo
	fcom	DWORD PTR [ecx+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN35@GetTransfo
	fst	DWORD PTR $T94848[esp+116]
	fst	DWORD PTR $T94848[esp+120]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR $T94848[esp+124]
	jmp	SHORT $LN9@GetTransfo
$LN35@GetTransfo:
	push	ecx
	fstp	ST(0)
	lea	eax, DWORD PTR _Temp$94893[esp+120]
	push	eax
	call	_D3DXVec3Normalize@8
	fldz
	mov	ecx, DWORD PTR _Temp$94893[esp+116]
	mov	edx, DWORD PTR _Temp$94893[esp+120]
	mov	eax, DWORD PTR _Temp$94893[esp+124]
	mov	DWORD PTR $T94848[esp+116], ecx
	mov	DWORD PTR $T94848[esp+120], edx
	mov	DWORD PTR $T94848[esp+124], eax
$LN9@GetTransfo:
; Line 156
	fld	DWORD PTR $T94848[esp+120]
; Line 159
	lea	esi, DWORD PTR [edi+36]
	fstp	DWORD PTR $T94849[esp+116]
	mov	ecx, DWORD PTR $T94849[esp+116]
	fld	DWORD PTR $T94848[esp+116]
	mov	DWORD PTR _RotAxis$[esp+116], ecx
	fchs
	fstp	DWORD PTR $T94849[esp+120]
	mov	edx, DWORD PTR $T94849[esp+120]
	mov	DWORD PTR _RotAxis$[esp+120], edx
	fstp	DWORD PTR $T94849[esp+124]
	mov	eax, DWORD PTR $T94849[esp+124]
	fld	DWORD PTR $T94848[esp+124]
	mov	DWORD PTR _RotAxis$[esp+124], eax
	fchs
	call	__CIacos
	fstp	DWORD PTR tv341[esp+116]
	fld	DWORD PTR tv341[esp+116]
	push	ecx
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR _RotAxis$[esp+120]
	push	ecx
	push	esi
	call	_D3DXMatrixRotationAxis@12
; Line 161
	fld	DWORD PTR [edi+32]
	sub	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp+8]
	lea	edx, DWORD PTR _Rot$[esp+128]
	fld	DWORD PTR [edi+28]
	fstp	DWORD PTR [esp+4]
	fld	DWORD PTR [edi+24]
	fstp	DWORD PTR [esp]
	push	edx
	call	_D3DXMatrixTranslation@16
; Line 162
	lea	eax, DWORD PTR _Rot$[esp+116]
	push	eax
	push	esi
	push	esi
	call	_D3DXMatrixMultiply@12
; Line 163
	mov	eax, esi
; Line 164
	pop	esi
	add	esp, 112				; 00000070H
	ret	0
?GetTransform@Mob@@QAEPAUD3DXMATRIX@@XZ ENDP		; Mob::GetTransform
_TEXT	ENDS
PUBLIC	?CollarVel@Mob@@QAEXM@Z				; Mob::CollarVel
; Function compile flags: /Ogtpy
;	COMDAT ?CollarVel@Mob@@QAEXM@Z
_TEXT	SEGMENT
_BirdMinV$ = -8						; size = 4
tv249 = -4						; size = 4
tv242 = -4						; size = 4
?CollarVel@Mob@@QAEXM@Z PROC				; Mob::CollarVel, COMDAT
; _this$ = eax
; Line 99
	sub	esp, 8
	fld	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
	push	esi
	fstp	DWORD PTR _BirdMinV$[esp+12]
; Line 100
	mov	esi, eax
	fld	DWORD PTR [esi+16]
	add	esi, 12					; 0000000cH
	fld	DWORD PTR [esi]
	fld	DWORD PTR [esi+8]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv249[esp+12]
	fld	DWORD PTR tv249[esp+12]
	call	__CIsqrt
	fstp	DWORD PTR tv242[esp+12]
	fld	DWORD PTR tv242[esp+12]
	fld	DWORD PTR _BirdMinV$[esp+12]
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN8@CollarVel
; Line 102
	push	esi
	push	esi
	call	_D3DXVec3Normalize@8
; Line 103
	fld	DWORD PTR [esi]
	fld	DWORD PTR _BirdMinV$[esp+12]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [esi]
	fld	DWORD PTR [esi+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [esi+4]
	fmul	DWORD PTR [esi+8]
	fstp	DWORD PTR [esi+8]
$LN8@CollarVel:
; Line 105
	pop	esi
	add	esp, 8
	ret	0
?CollarVel@Mob@@QAEXM@Z ENDP				; Mob::CollarVel
_TEXT	ENDS
PUBLIC	?CapVel@Mob@@QAEXM@Z				; Mob::CapVel
; Function compile flags: /Ogtpy
;	COMDAT ?CapVel@Mob@@QAEXM@Z
_TEXT	SEGMENT
_BirdMaxV$ = -8						; size = 4
tv249 = -4						; size = 4
tv242 = -4						; size = 4
?CapVel@Mob@@QAEXM@Z PROC				; Mob::CapVel, COMDAT
; _this$ = eax
; Line 90
	sub	esp, 8
	fld	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
	push	esi
	fstp	DWORD PTR _BirdMaxV$[esp+12]
; Line 91
	mov	esi, eax
	fld	DWORD PTR [esi+16]
	add	esi, 12					; 0000000cH
	fld	DWORD PTR [esi]
	fld	DWORD PTR [esi+8]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv249[esp+12]
	fld	DWORD PTR tv249[esp+12]
	call	__CIsqrt
	fstp	DWORD PTR tv242[esp+12]
	fld	DWORD PTR tv242[esp+12]
	fld	DWORD PTR _BirdMaxV$[esp+12]
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN8@CapVel
; Line 93
	push	esi
	push	esi
	call	_D3DXVec3Normalize@8
; Line 94
	fld	DWORD PTR [esi]
	fld	DWORD PTR _BirdMaxV$[esp+12]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [esi]
	fld	DWORD PTR [esi+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [esi+4]
	fmul	DWORD PTR [esi+8]
	fstp	DWORD PTR [esi+8]
$LN8@CapVel:
; Line 96
	pop	esi
	add	esp, 8
	ret	0
?CapVel@Mob@@QAEXM@Z ENDP				; Mob::CapVel
_TEXT	ENDS
PUBLIC	?Animate@Mob@@QAEXM@Z				; Mob::Animate
; Function compile flags: /Ogtpy
;	COMDAT ?Animate@Mob@@QAEXM@Z
_TEXT	SEGMENT
_timedelta$ = -16					; size = 4
$T94952 = -12						; size = 12
?Animate@Mob@@QAEXM@Z PROC				; Mob::Animate, COMDAT
; _this$ = eax
; Line 84
	sub	esp, 16					; 00000010H
	fld	DWORD PTR ?timeDelta@@3MA		; timeDelta
	fstp	DWORD PTR _timedelta$[esp+16]
; Line 85
	fld	DWORD PTR [eax+12]
	fadd	DWORD PTR [eax]
	fstp	DWORD PTR [eax+12]
	fld	DWORD PTR [eax+4]
	fadd	DWORD PTR [eax+16]
	fstp	DWORD PTR [eax+16]
	fld	DWORD PTR [eax+8]
	fadd	DWORD PTR [eax+20]
	fstp	DWORD PTR [eax+20]
; Line 86
	fld	DWORD PTR [eax+12]
	fld	DWORD PTR _timedelta$[esp+16]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T94952[esp+16]
	fld	DWORD PTR [eax+16]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T94952[esp+20]
	fmul	DWORD PTR [eax+20]
	fstp	DWORD PTR $T94952[esp+24]
	fld	DWORD PTR [eax+24]
	fadd	DWORD PTR $T94952[esp+16]
	fstp	DWORD PTR [eax+24]
	fld	DWORD PTR [eax+28]
	fadd	DWORD PTR $T94952[esp+20]
	fstp	DWORD PTR [eax+28]
	fld	DWORD PTR [eax+32]
	fadd	DWORD PTR $T94952[esp+24]
	fstp	DWORD PTR [eax+32]
; Line 87
	add	esp, 16					; 00000010H
	ret	0
?Animate@Mob@@QAEXM@Z ENDP				; Mob::Animate
PUBLIC	__real@4000000000000000
;	COMDAT __real@4000000000000000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
_WHITE	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
_BLACK	DB	0cH DUP (?)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EBLACK@d3d@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EBLACK@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'BLACK'', COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\d3dutility.h
; Line 64
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _BLACK
	fst	DWORD PTR _BLACK+4
	fstp	DWORD PTR _BLACK+8
	pop	ecx
	ret	0
??__EBLACK@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'BLACK''
_RED	DD	03f800000r			; 1
	DB	8 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__ERED@d3d@@YAXXZ
text$yc	SEGMENT
tv176 = -4						; size = 4
??__ERED@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'RED'', COMDAT
; Line 65
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv176[esp+4]
	fld	DWORD PTR tv176[esp+4]
	fst	DWORD PTR _RED+4
	fstp	DWORD PTR _RED+8
	pop	ecx
	ret	0
??__ERED@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'RED''
_GREEN	DB	04H DUP (?)
	DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EGREEN@d3d@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EGREEN@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'GREEN'', COMDAT
; Line 66
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _GREEN
	fstp	DWORD PTR _GREEN+8
	pop	ecx
	ret	0
??__EGREEN@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'GREEN''
_BLUE	DB	08H DUP (?)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EBLUE@d3d@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EBLUE@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'BLUE'', COMDAT
; Line 67
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _BLUE
	fstp	DWORD PTR _BLUE+4
	pop	ecx
	ret	0
??__EBLUE@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'BLUE''
_YELLOW	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EYELLOW@d3d@@YAXXZ
text$yc	SEGMENT
??__EYELLOW@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'YELLOW'', COMDAT
; Line 68
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _YELLOW+8
	ret	0
??__EYELLOW@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'YELLOW''
_CYAN	DB	04H DUP (?)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__ECYAN@d3d@@YAXXZ
text$yc	SEGMENT
??__ECYAN@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'CYAN'', COMDAT
; Line 69
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _CYAN
	ret	0
??__ECYAN@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'CYAN''
_MAGENTA DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EMAGENTA@d3d@@YAXXZ
text$yc	SEGMENT
??__EMAGENTA@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'MAGENTA'', COMDAT
; Line 70
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _MAGENTA+4
	ret	0
??__EMAGENTA@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'MAGENTA''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EWHITE_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96849 = -68						; size = 68
??__EWHITE_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'WHITE_MTRL'', COMDAT
; Line 87
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _WHITE+8
	push	edi
	mov	edi, DWORD PTR _WHITE+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _WHITE
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _WHITE+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96849[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _WHITE_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EWHITE_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'WHITE_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__ERED_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96854 = -68						; size = 68
??__ERED_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'RED_MTRL'', COMDAT
; Line 88
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _RED+8
	push	edi
	mov	edi, DWORD PTR _RED+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _RED
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _RED+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96854[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _RED_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__ERED_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'RED_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EGREEN_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96859 = -68						; size = 68
??__EGREEN_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'GREEN_MTRL'', COMDAT
; Line 89
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _GREEN+8
	push	edi
	mov	edi, DWORD PTR _GREEN+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _GREEN
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _GREEN+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96859[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _GREEN_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EGREEN_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'GREEN_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EBLUE_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96864 = -68						; size = 68
??__EBLUE_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'BLUE_MTRL'', COMDAT
; Line 90
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _BLUE+8
	push	edi
	mov	edi, DWORD PTR _BLUE+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _BLUE
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _BLUE+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96864[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _BLUE_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EBLUE_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'BLUE_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EYELLOW_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96869 = -68						; size = 68
??__EYELLOW_MTRL@d3d@@YAXXZ PROC			; d3d::`dynamic initializer for 'YELLOW_MTRL'', COMDAT
; Line 91
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _YELLOW+8
	push	edi
	mov	edi, DWORD PTR _YELLOW+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _YELLOW
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _YELLOW+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96869[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _YELLOW_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EYELLOW_MTRL@d3d@@YAXXZ ENDP			; d3d::`dynamic initializer for 'YELLOW_MTRL''
_WHITE_MTRL DB	044H DUP (?)
_YELLOW_MTRL DB	044H DUP (?)
_RED_MTRL DB	044H DUP (?)
_GREEN_MTRL DB	044H DUP (?)
_BLUE_MTRL DB	044H DUP (?)
_BLACK$initializer$ DD FLAT:??__EBLACK@d3d@@YAXXZ
_RED$initializer$ DD FLAT:??__ERED@d3d@@YAXXZ
_GREEN$initializer$ DD FLAT:??__EGREEN@d3d@@YAXXZ
_BLUE$initializer$ DD FLAT:??__EBLUE@d3d@@YAXXZ
_YELLOW$initializer$ DD FLAT:??__EYELLOW@d3d@@YAXXZ
_CYAN$initializer$ DD FLAT:??__ECYAN@d3d@@YAXXZ
_MAGENTA$initializer$ DD FLAT:??__EMAGENTA@d3d@@YAXXZ
_WHITE_MTRL$initializer$ DD FLAT:??__EWHITE_MTRL@d3d@@YAXXZ
_RED_MTRL$initializer$ DD FLAT:??__ERED_MTRL@d3d@@YAXXZ
_GREEN_MTRL$initializer$ DD FLAT:??__EGREEN_MTRL@d3d@@YAXXZ
_BLUE_MTRL$initializer$ DD FLAT:??__EBLUE_MTRL@d3d@@YAXXZ
_YELLOW_MTRL$initializer$ DD FLAT:??__EYELLOW_MTRL@d3d@@YAXXZ
END
