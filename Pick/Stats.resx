<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>