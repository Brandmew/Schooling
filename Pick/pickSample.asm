; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	k:\Progs to install\My Documents\Visual Studio 2008\Projects\Intro 3D Game\Mine\Pick\pickSample.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??$sprintf_s@$0PP@@@YAHAAY0PP@DPBDZZ		; sprintf_s<255>
PUBLIC	??$strcpy_s@$0CA@@@YAHAAY0CA@DPBD@Z		; strcpy_s<32>
PUBLIC	??$Release@PAUID3DXFont@@@d3d@@YAXPAUID3DXFont@@@Z ; d3d::Release<ID3DXFont *>
PUBLIC	??$Release@PAUID3DXLine@@@d3d@@YAXPAUID3DXLine@@@Z ; d3d::Release<ID3DXLine *>
PUBLIC	_cosf
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	_sinf
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
PUBLIC	??$sprintf_s@$08@@YAHAAY08DPBDZZ		; sprintf_s<9>
PUBLIC	??$sprintf_s@$0BE@@@YAHAAY0BE@DPBDZZ		; sprintf_s<20>
PUBLIC	_fabsf
PUBLIC	?abs@@YAMM@Z					; abs
PUBLIC	??ZD3DXVECTOR3@@QAEAAU0@ABU0@@Z			; D3DXVECTOR3::operator-=
PUBLIC	??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator-
PUBLIC	??KD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator/
PUBLIC	??BD3DXCOLOR@@QBEKXZ				; D3DXCOLOR::operator unsigned long
PUBLIC	??9D3DXCOLOR@@QBEHABU0@@Z			; D3DXCOLOR::operator!=
PUBLIC	??0D3DXVECTOR2@@QAE@XZ				; D3DXVECTOR2::D3DXVECTOR2
PUBLIC	?FPSString@@3PADA				; FPSString
PUBLIC	?MobString@@3PADA				; MobString
PUBLIC	?vp@@3U_D3DVIEWPORT9@@A				; vp
PUBLIC	?DisplayMde@@3U_D3DDISPLAYMODE@@A		; DisplayMde
PUBLIC	?Device@@3PAUIDirect3DDevice9@@A		; Device
PUBLIC	?pvp@@3PAU_D3DVIEWPORT9@@A			; pvp
PUBLIC	?BirdsCount@@3HA				; BirdsCount
PUBLIC	?VisualAngle@@3MA				; VisualAngle
PUBLIC	?AttractDist@@3MA				; AttractDist
PUBLIC	?CollDist@@3MA					; CollDist
PUBLIC	?RoostInf@@3MA					; RoostInf
PUBLIC	?AttractInf@@3MA				; AttractInf
PUBLIC	?CollInf@@3MA					; CollInf
PUBLIC	?HeadOnEvation@@3MA				; HeadOnEvation
PUBLIC	?BirdTopVel@@3MA				; BirdTopVel
PUBLIC	?BirdBottomVel@@3MA				; BirdBottomVel
PUBLIC	?NumberTog@@3TshareCB@@A			; NumberTog
PUBLIC	?PauseTog@@3TshareCB@@A				; PauseTog
PUBLIC	?EnvTog@@3TshareCB@@A				; EnvTog
PUBLIC	?EnvNumTog@@3TshareCB@@A			; EnvNumTog
PUBLIC	?HelpTog@@3TshareCB@@A				; HelpTog
PUBLIC	?BeABirdTog@@3TshareCB@@A			; BeABirdTog
PUBLIC	?CameraCircleTog@@3TshareCB@@A			; CameraCircleTog
PUBLIC	?Snapshot@@3TshareCB@@A				; Snapshot
PUBLIC	?FPSTog@@3TshareCB@@A				; FPSTog
PUBLIC	?Cylinder@@3PAUID3DXMesh@@A			; Cylinder
PUBLIC	?BirdsLLTail@@3PAVMob@@A			; BirdsLLTail
PUBLIC	?Font@@3PAUID3DXFont@@A				; Font
PUBLIC	?Line@@3PAUID3DXLine@@A				; Line
PUBLIC	?FrameCnt@@3KA					; FrameCnt
PUBLIC	?TotalFrameCnt@@3KA				; TotalFrameCnt
PUBLIC	?TimeElapsed@@3MA				; TimeElapsed
PUBLIC	?lastTime@@3MA					; lastTime
PUBLIC	?timeDelta@@3MA					; timeDelta
PUBLIC	?timetotal@@3MA					; timetotal
PUBLIC	?FPS@@3MA					; FPS
PUBLIC	?AvgFPS@@3MA					; AvgFPS
PUBLIC	??_C@_0BA@EHGKECDK@Bird?5Count?51?$CG2?3?$AA@	; `string'
PUBLIC	??_C@_0BD@FCKDLHIE@?6Visual?5Angle?53?$CG4?3?$AA@ ; `string'
PUBLIC	??_C@_0BB@IJFCMFHM@?6Roost?5Size?55?$CG6?3?$AA@	; `string'
PUBLIC	??_C@_0BD@HPHLHCJE@?6Attract?5Dist?57?$CG8?3?$AA@ ; `string'
PUBLIC	??_C@_0BF@BNMDMHLP@?6Collision?5Dist?59?$CG0?3?$AA@ ; `string'
PUBLIC	??_C@_0BI@GACOMIC@?6Roost?5Influence?5F5?$CGF6?3?$AA@ ; `string'
PUBLIC	??_C@_0BK@FBPGCOFP@?6Attract?5Influence?5F7?$CGF8?3?$AA@ ; `string'
PUBLIC	??_C@_0BM@PLOJFDK@?6Collision?5Influence?5F3?$CGF4?3?$AA@ ; `string'
PUBLIC	??_C@_0BK@BKGPJLGO@?6Head?9on?5evade?5angle?5Z?$CGX?3?$AA@ ; `string'
PUBLIC	??_C@_0BD@BFECMMKB@?6Top?5Velocity?5I?$CGO?3?$AA@ ; `string'
PUBLIC	??_C@_0BG@KNPPDGEF@?6Bottom?5Velocity?5J?$CGK?3?$AA@ ; `string'
PUBLIC	??_C@_04MINEGENM@?$CF?58X?$AA@			; `string'
PUBLIC	??_C@_05FHMJPCKA@Start?$AA@			; `string'
PUBLIC	??_C@_05MGADEINF@?$CF?510X?$AA@			; `string'
PUBLIC	??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@		; `string'
PUBLIC	??_C@_06IADIOFCB@?$CF?56?41f?$AA@		; `string'
PUBLIC	??_C@_07INPHFMHP@Courier?$AA@			; `string'
PUBLIC	??_C@_02GMHACPFF@?$CFu?$AA@			; `string'
PUBLIC	??_C@_04GODAOEDJ@FPS?3?$AA@			; `string'
PUBLIC	??_C@_04GGBPDDBN@?$CF?41f?$AA@			; `string'
PUBLIC	??_C@_05KGHNGAP@?5Avg?3?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0BB@FDHNOHHM@Flocking?5Off?4ini?$AA@	; `string'
PUBLIC	??_C@_0BO@JAGJHIBP@?$CFi?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?$AA@ ; `string'
PUBLIC	??_C@_0BD@FIELIAJN@?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0M@KMIOBEFL@err?5?9?5what?$CB?$AA@	; `string'
PUBLIC	??_C@_0BK@GEHNBPNM@Write?5failed?5All?5bets?5off?$AA@ ; `string'
EXTRN	_sprintf_s:PROC
EXTRN	_D3DXSaveSurfaceToFileA@20:PROC
EXTRN	_strncpy_s:PROC
EXTRN	_D3DXMatrixPerspectiveFovLH@20:PROC
EXTRN	_D3DXCreateFontIndirectA@12:PROC
EXTRN	_D3DXCreateLine@8:PROC
EXTRN	_strcpy_s:PROC
EXTRN	__imp__lstrcatA@8:PROC
EXTRN	__imp__timeGetTime@0:PROC
EXTRN	_D3DXMatrixLookAtLH@16:PROC
EXTRN	_vsprintf_s:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__SetTimer@16:PROC
EXTRN	__imp__KillTimer@8:PROC
EXTRN	_DefScreenSaverProc@16:PROC
EXTRN	_fscanf_s:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen_s:PROC
EXTRN	_fprintf_s:PROC
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	_atexit:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
?FPSString@@3PADA DB 032H DUP (?)			; FPSString
	ALIGN	4

?MobString@@3PADA DB 09H DUP (?)			; MobString
	ALIGN	4

?vp@@3U_D3DVIEWPORT9@@A DB 018H DUP (?)			; vp
?DisplayMde@@3U_D3DDISPLAYMODE@@A DB 010H DUP (?)	; DisplayMde
?Device@@3PAUIDirect3DDevice9@@A DD 01H DUP (?)		; Device
?NumberTog@@3TshareCB@@A DB 01H DUP (?)			; NumberTog
	ALIGN	4

?PauseTog@@3TshareCB@@A DB 01H DUP (?)			; PauseTog
	ALIGN	4

?EnvTog@@3TshareCB@@A DB 01H DUP (?)			; EnvTog
	ALIGN	4

?EnvNumTog@@3TshareCB@@A DB 01H DUP (?)			; EnvNumTog
	ALIGN	4

?HelpTog@@3TshareCB@@A DB 01H DUP (?)			; HelpTog
	ALIGN	4

?BeABirdTog@@3TshareCB@@A DB 01H DUP (?)		; BeABirdTog
	ALIGN	4

?CameraCircleTog@@3TshareCB@@A DB 01H DUP (?)		; CameraCircleTog
	ALIGN	4

?Snapshot@@3TshareCB@@A DB 01H DUP (?)			; Snapshot
	ALIGN	4

?FPSTog@@3TshareCB@@A DB 01H DUP (?)			; FPSTog
	ALIGN	4

?Cylinder@@3PAUID3DXMesh@@A DD 01H DUP (?)		; Cylinder
?BirdsLLTail@@3PAVMob@@A DD 01H DUP (?)			; BirdsLLTail
?Font@@3PAUID3DXFont@@A DD 01H DUP (?)			; Font
?Line@@3PAUID3DXLine@@A DD 01H DUP (?)			; Line
?FrameCnt@@3KA DD 01H DUP (?)				; FrameCnt
?TotalFrameCnt@@3KA DD 01H DUP (?)			; TotalFrameCnt
?TimeElapsed@@3MA DD 01H DUP (?)			; TimeElapsed
?lastTime@@3MA DD 01H DUP (?)				; lastTime
?timeDelta@@3MA DD 01H DUP (?)				; timeDelta
?timetotal@@3MA DD 01H DUP (?)				; timetotal
?FPS@@3MA DD	01H DUP (?)				; FPS
?AvgFPS@@3MA DD	01H DUP (?)				; AvgFPS
;	COMDAT ?CameraCircle@?4??Display@@YA_NM@Z@4MA
_BSS	SEGMENT
?CameraCircle@?4??Display@@YA_NM@Z@4MA DD 01H DUP (?)	; `Display'::`5'::CameraCircle
_BSS	ENDS
;	COMDAT ?uTimer@?1??ScreenSaverProc@@9@16@4IA
_BSS	SEGMENT
?uTimer@?1??ScreenSaverProc@@9@16@4IA DD 01H DUP (?)	; `ScreenSaverProc'::`2'::uTimer
;	COMDAT ??_C@_0BK@GEHNBPNM@Write?5failed?5All?5bets?5off?$AA@
CONST	SEGMENT
??_C@_0BK@GEHNBPNM@Write?5failed?5All?5bets?5off?$AA@ DB 'Write failed Al'
	DB	'l bets off', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KMIOBEFL@err?5?9?5what?$CB?$AA@
CONST	SEGMENT
??_C@_0M@KMIOBEFL@err?5?9?5what?$CB?$AA@ DB 'err - what!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FIELIAJN@?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$AA@
CONST	SEGMENT
??_C@_0BD@FIELIAJN@?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$AA@ DB '%'
	DB	'c%c%c%c%c%c%c%c%c', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JAGJHIBP@?$CFi?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?$AA@
CONST	SEGMENT
??_C@_0BO@JAGJHIBP@?$CFi?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?$AA@ DB '%'
	DB	'i %f %f %f %f %f %f %f %f %f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FDHNOHHM@Flocking?5Off?4ini?$AA@
CONST	SEGMENT
??_C@_0BB@FDHNOHHM@Flocking?5Off?4ini?$AA@ DB 'Flocking Off.ini', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05KGHNGAP@?5Avg?3?$AA@
CONST	SEGMENT
??_C@_05KGHNGAP@?5Avg?3?$AA@ DB ' Avg:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGBPDDBN@?$CF?41f?$AA@
CONST	SEGMENT
??_C@_04GGBPDDBN@?$CF?41f?$AA@ DB '%.1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GODAOEDJ@FPS?3?$AA@
CONST	SEGMENT
??_C@_04GODAOEDJ@FPS?3?$AA@ DB 'FPS:', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
CONST	SEGMENT
??_C@_02GMHACPFF@?$CFu?$AA@ DB '%u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07INPHFMHP@Courier?$AA@
CONST	SEGMENT
??_C@_07INPHFMHP@Courier?$AA@ DB 'Courier', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IADIOFCB@?$CF?56?41f?$AA@
CONST	SEGMENT
??_C@_06IADIOFCB@?$CF?56?41f?$AA@ DB '% 6.1f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@
CONST	SEGMENT
??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@ DB 'Pickture.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGADEINF@?$CF?510X?$AA@
CONST	SEGMENT
??_C@_05MGADEINF@?$CF?510X?$AA@ DB '% 10X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FHMJPCKA@Start?$AA@
CONST	SEGMENT
??_C@_05FHMJPCKA@Start?$AA@ DB 'Start', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MINEGENM@?$CF?58X?$AA@
CONST	SEGMENT
??_C@_04MINEGENM@?$CF?58X?$AA@ DB '% 8X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KNPPDGEF@?6Bottom?5Velocity?5J?$CGK?3?$AA@
CONST	SEGMENT
??_C@_0BG@KNPPDGEF@?6Bottom?5Velocity?5J?$CGK?3?$AA@ DB 0aH, 'Bottom Velo'
	DB	'city J&K:', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BFECMMKB@?6Top?5Velocity?5I?$CGO?3?$AA@
CONST	SEGMENT
??_C@_0BD@BFECMMKB@?6Top?5Velocity?5I?$CGO?3?$AA@ DB 0aH, 'Top Velocity I'
	DB	'&O:', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@BKGPJLGO@?6Head?9on?5evade?5angle?5Z?$CGX?3?$AA@
CONST	SEGMENT
??_C@_0BK@BKGPJLGO@?6Head?9on?5evade?5angle?5Z?$CGX?3?$AA@ DB 0aH, 'Head-'
	DB	'on evade angle Z&X:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PLOJFDK@?6Collision?5Influence?5F3?$CGF4?3?$AA@
CONST	SEGMENT
??_C@_0BM@PLOJFDK@?6Collision?5Influence?5F3?$CGF4?3?$AA@ DB 0aH, 'Collis'
	DB	'ion Influence F3&F4:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FBPGCOFP@?6Attract?5Influence?5F7?$CGF8?3?$AA@
CONST	SEGMENT
??_C@_0BK@FBPGCOFP@?6Attract?5Influence?5F7?$CGF8?3?$AA@ DB 0aH, 'Attract'
	DB	' Influence F7&F8:', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GACOMIC@?6Roost?5Influence?5F5?$CGF6?3?$AA@
CONST	SEGMENT
??_C@_0BI@GACOMIC@?6Roost?5Influence?5F5?$CGF6?3?$AA@ DB 0aH, 'Roost Infl'
	DB	'uence F5&F6:', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BNMDMHLP@?6Collision?5Dist?59?$CG0?3?$AA@
CONST	SEGMENT
??_C@_0BF@BNMDMHLP@?6Collision?5Dist?59?$CG0?3?$AA@ DB 0aH, 'Collision Di'
	DB	'st 9&0:', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HPHLHCJE@?6Attract?5Dist?57?$CG8?3?$AA@
CONST	SEGMENT
??_C@_0BD@HPHLHCJE@?6Attract?5Dist?57?$CG8?3?$AA@ DB 0aH, 'Attract Dist 7'
	DB	'&8:', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IJFCMFHM@?6Roost?5Size?55?$CG6?3?$AA@
CONST	SEGMENT
??_C@_0BB@IJFCMFHM@?6Roost?5Size?55?$CG6?3?$AA@ DB 0aH, 'Roost Size 5&6:', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FCKDLHIE@?6Visual?5Angle?53?$CG4?3?$AA@
CONST	SEGMENT
??_C@_0BD@FCKDLHIE@?6Visual?5Angle?53?$CG4?3?$AA@ DB 0aH, 'Visual Angle 3'
	DB	'&4:', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EHGKECDK@Bird?5Count?51?$CG2?3?$AA@
CONST	SEGMENT
??_C@_0BA@EHGKECDK@Bird?5Count?51?$CG2?3?$AA@ DB 'Bird Count 1&2:', 00H ; `string'
_BirdMaxVel DD	042c80000r			; 100
_BirdMinVel DD	040a00000r			; 5
_AttractDistMax DD 043480000r			; 200
_HelpStr1 DB	'Birds V0.20 Beta - Help', 0aH, 0aH, 'n Toggle bird (N)um'
	DB	'bers   e Toggle show (E)nvironment(slow)', 0aH, 'p Toggle (P)'
	DB	'ause          h Toggle this (H)elp', 0aH, 't (T)oggle Frames/'
	DB	'Sec     v Toggle en(v)ronment Numbers ', 0aH, 'q Snap shot to'
	DB	' Pickture.bmp', 0aH, 0aH, 'Environment Controls:', 0aH, 00H
	ORG $+7
_HelpStr2 DB	'Reduce              Increase | Reduce Influence Increase'
	DB	0aH, '1  Bird  Count (2000 max) 2  | N/A              N/A', 0aH
	DB	'3      Visual Angle       4  | N/A              N/A', 0aH, '5'
	DB	'      Roost Sphere       6  | F5               F6', 0aH, '7  '
	DB	'  Attract Distance     8  | F7               F8', 0aH, '9   C'
	DB	'ollision Distance    0  | F3               F4', 0aH, 'z  Head'
	DB	'-on evade angle    x  |', 0aH, 'i     Top Velocity        o  '
	DB	'|', 0aH, 'j   Bottom Velocity       k  |', 00H
	ORG $+1
_HelpStr3 DB	'Camera control keys: (Not the screen!)', 0aH, 'a Left (x'
	DB	'-)               d Right (x+)', 0aH, 'r Up (y+)              '
	DB	'   f Down (y-)', 0aH, 'w In (z+)                 s Out (z-)', 0aH
	DB	'Left Rotate left          Right Rotate Right', 0aH, 'Up Rotat'
	DB	'e up              Down Rotate Down', 0aH, '< , Rotate Anticlo'
	DB	'ckwise  > . Rotate Clockwise', 0aH, 'b Be a (B)ird', 0aH, 'c '
	DB	'Circle around centre', 00H
	ORG $+3
_Nag	DB	'Flocking Off ', 0a9H, ' 2011 ', 0aH, 'Press H for Help &'
	DB	' keys.', 0aH, 'Hiring, bugs & suggestions to: bradders12345@g'
	DB	'mail.com', 0aH, '(This message will self destruct)', 00H
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
?pvp@@3PAU_D3DVIEWPORT9@@A DD FLAT:?vp@@3U_D3DVIEWPORT9@@A ; pvp
?BirdsCount@@3HA DD 06H					; BirdsCount
?VisualAngle@@3MA DD 03fc90fdbr			; 1.5708 ; VisualAngle
?AttractDist@@3MA DD 043160000r			; 150	; AttractDist
?CollDist@@3MA DD 042700000r			; 60	; CollDist
?RoostInf@@3MA DD 041a00000r			; 20	; RoostInf
?AttractInf@@3MA DD 03fc00000r			; 1.5	; AttractInf
?CollInf@@3MA DD 0404ccccdr			; 3.2	; CollInf
?HeadOnEvation@@3MA DD 03fc90fdbr		; 1.5708 ; HeadOnEvation
?BirdTopVel@@3MA DD 042480000r			; 50	; BirdTopVel
?BirdBottomVel@@3MA DD 041a00000r		; 20	; BirdBottomVel
; Function compile flags: /Ogtpy
;	COMDAT ??$sprintf_s@$0BE@@@YAHAAY0BE@DPBDZZ
_TEXT	SEGMENT
__Format$ = 8						; size = 4
??$sprintf_s@$0BE@@@YAHAAY0BE@DPBDZZ PROC		; sprintf_s<20>, COMDAT
; __Dest$ = edx
; File g:\program files\microsoft visual studio 9.0\vc\include\stdio.h
; Line 322
	mov	ecx, DWORD PTR __Format$[esp-4]
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	ecx
	push	20					; 00000014H
	push	edx
	call	_vsprintf_s
	add	esp, 16					; 00000010H
	ret	0
??$sprintf_s@$0BE@@@YAHAAY0BE@DPBDZZ ENDP		; sprintf_s<20>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$sprintf_s@$08@@YAHAAY08DPBDZZ
_TEXT	SEGMENT
__Format$ = 8						; size = 4
??$sprintf_s@$08@@YAHAAY08DPBDZZ PROC			; sprintf_s<9>, COMDAT
; __Dest$ = edx
; Line 322
	mov	ecx, DWORD PTR __Format$[esp-4]
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	ecx
	push	9
	push	edx
	call	_vsprintf_s
	add	esp, 16					; 00000010H
	ret	0
??$sprintf_s@$08@@YAHAAY08DPBDZZ ENDP			; sprintf_s<9>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$Release@PAUID3DXLine@@@d3d@@YAXPAUID3DXLine@@@Z
_TEXT	SEGMENT
??$Release@PAUID3DXLine@@@d3d@@YAXPAUID3DXLine@@@Z PROC	; d3d::Release<ID3DXLine *>, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\d3dutility.h
; Line 40
	mov	eax, DWORD PTR ?Line@@3PAUID3DXLine@@A	; Line
; Line 41
	test	eax, eax
	je	SHORT $LN1@Release
; Line 43
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN1@Release:
; Line 46
	ret	0
??$Release@PAUID3DXLine@@@d3d@@YAXPAUID3DXLine@@@Z ENDP	; d3d::Release<ID3DXLine *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$Release@PAUID3DXFont@@@d3d@@YAXPAUID3DXFont@@@Z
_TEXT	SEGMENT
??$Release@PAUID3DXFont@@@d3d@@YAXPAUID3DXFont@@@Z PROC	; d3d::Release<ID3DXFont *>, COMDAT
; Line 40
	mov	eax, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
; Line 41
	test	eax, eax
	je	SHORT $LN1@Release@2
; Line 43
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN1@Release@2:
; Line 46
	ret	0
??$Release@PAUID3DXFont@@@d3d@@YAXPAUID3DXFont@@@Z ENDP	; d3d::Release<ID3DXFont *>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$strcpy_s@$0CA@@@YAHAAY0CA@DPBD@Z
_TEXT	SEGMENT
??$strcpy_s@$0CA@@@YAHAAY0CA@DPBD@Z PROC		; strcpy_s<32>, COMDAT
; __Dest$ = eax
; File g:\program files\microsoft visual studio 9.0\vc\include\string.h
; Line 73
	push	OFFSET ??_C@_07INPHFMHP@Courier?$AA@
	push	32					; 00000020H
	push	eax
	call	_strcpy_s
	add	esp, 12					; 0000000cH
	ret	0
??$strcpy_s@$0CA@@@YAHAAY0CA@DPBD@Z ENDP		; strcpy_s<32>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??$sprintf_s@$0PP@@@YAHAAY0PP@DPBDZZ
_TEXT	SEGMENT
__Format$ = 8						; size = 4
??$sprintf_s@$0PP@@@YAHAAY0PP@DPBDZZ PROC		; sprintf_s<255>, COMDAT
; __Dest$ = edx
; File g:\program files\microsoft visual studio 9.0\vc\include\stdio.h
; Line 322
	mov	ecx, DWORD PTR __Format$[esp-4]
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	ecx
	push	255					; 000000ffH
	push	edx
	call	_vsprintf_s
	add	esp, 16					; 00000010H
	ret	0
??$sprintf_s@$0PP@@@YAHAAY0PP@DPBDZZ ENDP		; sprintf_s<255>
_TEXT	ENDS
PUBLIC	_RegisterDialogClasses@4
; Function compile flags: /Ogtpy
;	COMDAT _RegisterDialogClasses@4
_TEXT	SEGMENT
_hmodule$ = 8						; size = 4
_RegisterDialogClasses@4 PROC				; COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 726
	mov	eax, 1
; Line 727
	ret	4
_RegisterDialogClasses@4 ENDP
_TEXT	ENDS
PUBLIC	_ScreenSaverConfigureDialog@16
; Function compile flags: /Ogtpy
;	COMDAT _ScreenSaverConfigureDialog@16
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wparam$ = 16						; size = 4
_lparam$ = 20						; size = 4
_ScreenSaverConfigureDialog@16 PROC			; COMDAT
; Line 722
	xor	eax, eax
; Line 723
	ret	16					; 00000010H
_ScreenSaverConfigureDialog@16 ENDP
_TEXT	ENDS
PUBLIC	?WriteVars@@YA_NXZ				; WriteVars
EXTRN	__fltused:DWORD
; Function compile flags: /Ogtpy
;	COMDAT ?WriteVars@@YA_NXZ
_TEXT	SEGMENT
_fileVars$ = -4						; size = 4
?WriteVars@@YA_NXZ PROC					; WriteVars, COMDAT
; Line 661
	push	ecx
; Line 664
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _fileVars$[esp+8]
	push	OFFSET ??_C@_0BB@FDHNOHHM@Flocking?5Off?4ini?$AA@
	push	eax
	call	_fopen_s
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@WriteVars
; Line 666
	push	0
	push	OFFSET ??_C@_0M@KMIOBEFL@err?5?9?5what?$CB?$AA@
	push	OFFSET ??_C@_0BK@GEHNBPNM@Write?5failed?5All?5bets?5off?$AA@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
; Line 667
	xor	al, al
; Line 679
	pop	ecx
	ret	0
$LN1@WriteVars:
; Line 673
	fld	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
	sub	esp, 72					; 00000048H
	fstp	QWORD PTR [esp+64]
	mov	ecx, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	fld	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
	mov	edx, DWORD PTR _fileVars$[esp+76]
	fstp	QWORD PTR [esp+56]
	fld	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
	fstp	QWORD PTR [esp+48]
	fld	DWORD PTR ?CollInf@@3MA			; CollInf
	fstp	QWORD PTR [esp+40]
	fld	DWORD PTR ?AttractInf@@3MA		; AttractInf
	fstp	QWORD PTR [esp+32]
	fld	DWORD PTR ?RoostInf@@3MA		; RoostInf
	fstp	QWORD PTR [esp+24]
	fld	DWORD PTR ?CollDist@@3MA		; CollDist
	fstp	QWORD PTR [esp+16]
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fstp	QWORD PTR [esp+8]
	fld	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
	fstp	QWORD PTR [esp]
	push	ecx
	push	OFFSET ??_C@_0BO@JAGJHIBP@?$CFi?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?$AA@
	push	edx
	call	_fprintf_s
; Line 676
	movsx	eax, BYTE PTR ?FPSTog@@3TshareCB@@A	; FPSTog
	movsx	ecx, BYTE PTR ?Snapshot@@3TshareCB@@A	; Snapshot
	movsx	edx, BYTE PTR ?CameraCircleTog@@3TshareCB@@A ; CameraCircleTog
	push	eax
	movsx	eax, BYTE PTR ?BeABirdTog@@3TshareCB@@A	; BeABirdTog
	push	ecx
	movsx	ecx, BYTE PTR ?HelpTog@@3TshareCB@@A	; HelpTog
	push	edx
	movsx	edx, BYTE PTR ?EnvNumTog@@3TshareCB@@A	; EnvNumTog
	push	eax
	movsx	eax, BYTE PTR ?EnvTog@@3TshareCB@@A	; EnvTog
	push	ecx
	movsx	ecx, BYTE PTR ?PauseTog@@3TshareCB@@A	; PauseTog
	push	edx
	movsx	edx, BYTE PTR ?NumberTog@@3TshareCB@@A	; NumberTog
	push	eax
	mov	eax, DWORD PTR _fileVars$[esp+116]
	push	ecx
	push	edx
	push	OFFSET ??_C@_0BD@FIELIAJN@?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$AA@
	push	eax
	call	_fprintf_s
; Line 677
	mov	ecx, DWORD PTR _fileVars$[esp+132]
	add	esp, 128				; 00000080H
	push	ecx
	call	_fclose
	add	esp, 4
; Line 678
	mov	al, 1
; Line 679
	pop	ecx
	ret	0
?WriteVars@@YA_NXZ ENDP					; WriteVars
_TEXT	ENDS
PUBLIC	?ReadVars@@YA_NXZ				; ReadVars
; Function compile flags: /Ogtpy
;	COMDAT ?ReadVars@@YA_NXZ
_TEXT	SEGMENT
_fileVars$ = -4						; size = 4
?ReadVars@@YA_NXZ PROC					; ReadVars, COMDAT
; Line 636
	push	ecx
; Line 640
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	lea	eax, DWORD PTR _fileVars$[esp+8]
	push	OFFSET ??_C@_0BB@FDHNOHHM@Flocking?5Off?4ini?$AA@
	push	eax
	call	_fopen_s
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@ReadVars
; Line 642
	call	?WriteVars@@YA_NXZ			; WriteVars
; Line 643
	xor	al, al
; Line 658
	pop	ecx
	ret	0
$LN2@ReadVars:
; Line 650
	mov	ecx, DWORD PTR _fileVars$[esp+4]
	push	OFFSET ?BirdBottomVel@@3MA		; BirdBottomVel
	push	OFFSET ?BirdTopVel@@3MA			; BirdTopVel
	push	OFFSET ?HeadOnEvation@@3MA		; HeadOnEvation
	push	OFFSET ?CollInf@@3MA			; CollInf
	push	OFFSET ?AttractInf@@3MA			; AttractInf
	push	OFFSET ?RoostInf@@3MA			; RoostInf
	push	OFFSET ?CollDist@@3MA			; CollDist
	push	OFFSET ?AttractDist@@3MA		; AttractDist
	push	OFFSET ?VisualAngle@@3MA		; VisualAngle
	push	OFFSET ?BirdsCount@@3HA			; BirdsCount
	push	OFFSET ??_C@_0BO@JAGJHIBP@?$CFi?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?5?$CFf?$AA@
	push	ecx
	call	_fscanf_s
; Line 654
	push	1
	push	OFFSET ?FPSTog@@3TshareCB@@A		; FPSTog
	push	1
	push	OFFSET ?Snapshot@@3TshareCB@@A		; Snapshot
	push	1
	push	OFFSET ?CameraCircleTog@@3TshareCB@@A	; CameraCircleTog
	push	1
	push	OFFSET ?BeABirdTog@@3TshareCB@@A	; BeABirdTog
	mov	edx, DWORD PTR _fileVars$[esp+84]
	push	1
	push	OFFSET ?HelpTog@@3TshareCB@@A		; HelpTog
	push	1
	push	OFFSET ?EnvNumTog@@3TshareCB@@A		; EnvNumTog
	push	1
	push	OFFSET ?EnvTog@@3TshareCB@@A		; EnvTog
	push	1
	push	OFFSET ?PauseTog@@3TshareCB@@A		; PauseTog
	push	1
	push	OFFSET ?NumberTog@@3TshareCB@@A		; NumberTog
	push	OFFSET ??_C@_0BD@FIELIAJN@?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$CFc?$AA@
	push	edx
	call	_fscanf_s
; Line 655
	mov	eax, DWORD PTR _fileVars$[esp+132]
	add	esp, 128				; 00000080H
	push	eax
	call	_fclose
	add	esp, 4
; Line 656
	mov	al, 1
; Line 658
	pop	ecx
	ret	0
?ReadVars@@YA_NXZ ENDP					; ReadVars
_TEXT	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
; Function compile flags: /Ogtpy
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	ret	0
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?VarStr@@YAXPAD0M@Z				; VarStr
EXTRN	___security_cookie:DWORD
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?VarStr@@YAXPAD0M@Z
_TEXT	SEGMENT
_szT$ = -264						; size = 255
__$ArrayPad$ = -4					; size = 4
_szInStr$ = 8						; size = 4
_var$ = 12						; size = 4
?VarStr@@YAXPAD0M@Z PROC				; VarStr, COMDAT
; _szOutStr$ = esi
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\flockheaders.h
; Line 215
	sub	esp, 264				; 00000108H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+264], eax
	mov	eax, DWORD PTR _szInStr$[esp+260]
	push	edi
; Line 217
	push	50					; 00000032H
	push	eax
	lea	eax, DWORD PTR _szT$[esp+276]
	push	254					; 000000feH
	push	eax
	call	_strncpy_s
; Line 218
	mov	edi, DWORD PTR __imp__lstrcatA@8
	add	esp, 16					; 00000010H
	lea	ecx, DWORD PTR _szT$[esp+268]
	push	ecx
	push	esi
	call	edi
; Line 219
	push	255					; 000000ffH
	lea	edx, DWORD PTR _szT$[esp+272]
	push	0
	push	edx
	call	_memset
; Line 220
	fld	DWORD PTR _var$[esp+276]
	add	esp, 4
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_06IADIOFCB@?$CF?56?41f?$AA@
	lea	edx, DWORD PTR _szT$[esp+280]
	call	??$sprintf_s@$0PP@@@YAHAAY0PP@DPBDZZ	; sprintf_s<255>
	add	esp, 12					; 0000000cH
; Line 221
	lea	eax, DWORD PTR _szT$[esp+268]
	push	eax
	push	esi
	call	edi
; Line 222
	mov	ecx, DWORD PTR __$ArrayPad$[esp+268]
	pop	edi
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	ret	0
?VarStr@@YAXPAD0M@Z ENDP				; VarStr
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?dump_buffer@@YAXXZ				; dump_buffer
; Function compile flags: /Ogtpy
;	COMDAT ?dump_buffer@@YAXXZ
_TEXT	SEGMENT
_pDestTarget$ = -28					; size = 4
_pRenderTarget$ = -24					; size = 4
_file$ = -20						; size = 13
__$ArrayPad$ = -4					; size = 4
?dump_buffer@@YAXXZ PROC				; dump_buffer, COMDAT
; Line 176
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+28], eax
; Line 180
	mov	eax, DWORD PTR ??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@
	mov	ecx, DWORD PTR ??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@+4
	mov	edx, DWORD PTR ??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@+8
	mov	DWORD PTR _file$[esp+28], eax
	mov	al, BYTE PTR ??_C@_0N@EGBEAKIF@Pickture?4bmp?$AA@+12
	mov	BYTE PTR _file$[esp+40], al
; Line 182
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	DWORD PTR _pRenderTarget$[esp+28], 0
	mov	DWORD PTR _pDestTarget$[esp+28], 0
	mov	DWORD PTR _file$[esp+32], ecx
	mov	DWORD PTR _file$[esp+36], edx
	test	eax, eax
	je	$LN2@dump_buffe
; Line 186
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR _pRenderTarget$[esp+28]
	push	edx
	push	0
	push	eax
	mov	eax, DWORD PTR [ecx+152]
	call	eax
; Line 196
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	push	0
	lea	edx, DWORD PTR _pDestTarget$[esp+32]
	push	edx
	mov	edx, DWORD PTR ?DisplayMde@@3U_D3DDISPLAYMODE@@A+12
	push	2
	push	edx
	mov	edx, DWORD PTR ?DisplayMde@@3U_D3DDISPLAYMODE@@A+4
	push	edx
	mov	edx, DWORD PTR ?DisplayMde@@3U_D3DDISPLAYMODE@@A
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+144]
	call	eax
; Line 198
	mov	edx, DWORD PTR _pDestTarget$[esp+28]
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	push	edx
	mov	edx, DWORD PTR _pRenderTarget$[esp+32]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+128]
	call	eax
; Line 205
	mov	ecx, DWORD PTR _pDestTarget$[esp+28]
	push	0
	push	0
	push	ecx
	push	0
	lea	edx, DWORD PTR _file$[esp+44]
	push	edx
	call	_D3DXSaveSurfaceToFileA@20
; Line 208
	mov	eax, DWORD PTR _pRenderTarget$[esp+28]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
; Line 209
	mov	eax, DWORD PTR _pDestTarget$[esp+28]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN2@dump_buffe:
; Line 210
	mov	ecx, DWORD PTR __$ArrayPad$[esp+28]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	ret	0
?dump_buffer@@YAXXZ ENDP				; dump_buffer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??9D3DXCOLOR@@QBEHABU0@@Z
_TEXT	SEGMENT
??9D3DXCOLOR@@QBEHABU0@@Z PROC				; D3DXCOLOR::operator!=, COMDAT
; _this$ = ecx
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
; Line 1557
	fld	DWORD PTR [ecx]
	fld	DWORD PTR _CYAN
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	fld	DWORD PTR [ecx+4]
	fld	DWORD PTR _CYAN+4
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	fld	DWORD PTR [ecx+8]
	fld	DWORD PTR _CYAN+8
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	fld	DWORD PTR [ecx+12]
	fld	DWORD PTR _CYAN+12
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN3@operator
	xor	eax, eax
; Line 1558
	ret	0
$LN3@operator:
; Line 1557
	mov	eax, 1
; Line 1558
	ret	0
??9D3DXCOLOR@@QBEHABU0@@Z ENDP				; D3DXCOLOR::operator!=
_TEXT	ENDS
PUBLIC	__real@00000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@406fe00000000000
PUBLIC	__real@3f800000
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??BD3DXCOLOR@@QBEKXZ
_TEXT	SEGMENT
tv243 = -10						; size = 2
tv228 = -10						; size = 2
tv212 = -10						; size = 2
tv195 = -10						; size = 2
tv240 = -8						; size = 4
tv238 = -8						; size = 8
tv225 = -8						; size = 4
tv223 = -8						; size = 8
tv208 = -8						; size = 4
tv206 = -8						; size = 8
tv192 = -8						; size = 4
tv152 = -8						; size = 8
??BD3DXCOLOR@@QBEKXZ PROC				; D3DXCOLOR::operator unsigned long, COMDAT
; _this$ = ecx
; Line 1409
	fld1
	sub	esp, 12					; 0000000cH
	fcom	DWORD PTR [ecx]
	push	esi
	push	edi
	fnstsw	ax
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	fldz
	test	ah, 65					; 00000041H
	jp	SHORT $LN5@operator@2
	mov	edi, 255				; 000000ffH
	jmp	SHORT $LN4@operator@2
$LN5@operator@2:
	fcom	DWORD PTR [ecx]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN3@operator@2
	xor	edi, edi
	jmp	SHORT $LN4@operator@2
$LN3@operator@2:
	fld	DWORD PTR [ecx]
	fnstcw	WORD PTR tv243[esp+20]
	movzx	eax, WORD PTR tv243[esp+20]
	fmul	ST(0), ST(3)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv240[esp+20], eax
	fadd	ST(0), ST(2)
	fldcw	WORD PTR tv240[esp+20]
	fistp	QWORD PTR tv238[esp+20]
	mov	edi, DWORD PTR tv238[esp+20]
	fldcw	WORD PTR tv243[esp+20]
$LN4@operator@2:
; Line 1410
	fxch	ST(3)
	fcom	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN9@operator@2
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN8@operator@2
$LN9@operator@2:
	fxch	ST(3)
	fcom	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN7@operator@2
	xor	esi, esi
	jmp	SHORT $LN46@operator@2
$LN7@operator@2:
	fld	DWORD PTR [ecx+4]
	fnstcw	WORD PTR tv228[esp+20]
	movzx	eax, WORD PTR tv228[esp+20]
	fmul	ST(0), ST(3)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv225[esp+20], eax
	fadd	ST(0), ST(2)
	fldcw	WORD PTR tv225[esp+20]
	fistp	QWORD PTR tv223[esp+20]
	mov	esi, DWORD PTR tv223[esp+20]
	fldcw	WORD PTR tv228[esp+20]
$LN46@operator@2:
	fxch	ST(3)
$LN8@operator@2:
; Line 1411
	fcom	DWORD PTR [ecx+8]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN13@operator@2
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN12@operator@2
$LN13@operator@2:
	fxch	ST(3)
	fcom	DWORD PTR [ecx+8]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN11@operator@2
	xor	edx, edx
	jmp	SHORT $LN41@operator@2
$LN11@operator@2:
	fld	DWORD PTR [ecx+8]
	fnstcw	WORD PTR tv212[esp+20]
	movzx	eax, WORD PTR tv212[esp+20]
	fmul	ST(0), ST(3)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv208[esp+20], eax
	fadd	ST(0), ST(2)
	fldcw	WORD PTR tv208[esp+20]
	fistp	QWORD PTR tv206[esp+20]
	mov	edx, DWORD PTR tv206[esp+20]
	fldcw	WORD PTR tv212[esp+20]
$LN41@operator@2:
	fxch	ST(3)
$LN12@operator@2:
; Line 1412
	fcomp	DWORD PTR [ecx+12]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN17@operator@2
	fstp	ST(1)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(0)
	jmp	SHORT $LN16@operator@2
$LN17@operator@2:
	fxch	ST(2)
	fcomp	DWORD PTR [ecx+12]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN15@operator@2
	fstp	ST(0)
	xor	eax, eax
	fstp	ST(0)
	jmp	SHORT $LN16@operator@2
$LN15@operator@2:
	fmul	DWORD PTR [ecx+12]
	fnstcw	WORD PTR tv195[esp+20]
	movzx	eax, WORD PTR tv195[esp+20]
	faddp	ST(1), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv192[esp+20], eax
	fldcw	WORD PTR tv192[esp+20]
	fistp	QWORD PTR tv152[esp+20]
	mov	eax, DWORD PTR tv152[esp+20]
	fldcw	WORD PTR tv195[esp+20]
$LN16@operator@2:
; Line 1414
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	pop	edi
	or	eax, edx
	pop	esi
; Line 1415
	add	esp, 12					; 0000000cH
	ret	0
??BD3DXCOLOR@@QBEKXZ ENDP				; D3DXCOLOR::operator unsigned long
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??ZD3DXVECTOR3@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
??ZD3DXVECTOR3@@QAEAAU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-=, COMDAT
; _this$ = eax
; _v$ = ecx
; Line 337
	fld	DWORD PTR [eax]
	fsub	DWORD PTR [ecx]
	fstp	DWORD PTR [eax]
; Line 338
	fld	DWORD PTR [eax+4]
	fsub	DWORD PTR [ecx+4]
	fstp	DWORD PTR [eax+4]
; Line 339
	fld	DWORD PTR [eax+8]
	fsub	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 341
	ret	0
??ZD3DXVECTOR3@@QAEAAU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-=
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0D3DXVECTOR2@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR2@@QAE@XZ PROC				; D3DXVECTOR2::D3DXVECTOR2, COMDAT
; _this$ = ecx
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.h
; Line 91
	mov	eax, ecx
	ret	0
??0D3DXVECTOR2@@QAE@XZ ENDP				; D3DXVECTOR2::D3DXVECTOR2
_TEXT	ENDS
EXTRN	__CIsin:PROC
; Function compile flags: /Ogtpy
;	COMDAT _sinf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT
; File g:\program files\microsoft visual studio 9.0\vc\include\math.h
; Line 419
	fld	DWORD PTR __X$[esp-4]
	call	__CIsin
	fstp	DWORD PTR tv69[esp-4]
	fld	DWORD PTR tv69[esp-4]
	ret	0
_sinf	ENDP
_TEXT	ENDS
EXTRN	__CIcos:PROC
; Function compile flags: /Ogtpy
;	COMDAT _cosf
_TEXT	SEGMENT
tv69 = 8						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT
; Line 399
	fld	DWORD PTR __X$[esp-4]
	call	__CIcos
	fstp	DWORD PTR tv69[esp-4]
	fld	DWORD PTR tv69[esp-4]
	ret	0
_cosf	ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT _fabsf
_TEXT	SEGMENT
tv129 = 8						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT
; Line 384
	fld	DWORD PTR __X$[esp-4]
	fabs
	fstp	DWORD PTR tv129[esp-4]
	fld	DWORD PTR tv129[esp-4]
	ret	0
_fabsf	ENDP
PUBLIC	?DrawHalfLine@@YA_NMMMMK@Z			; DrawHalfLine
; Function compile flags: /Ogtpy
;	COMDAT ?DrawHalfLine@@YA_NMMMMK@Z
_TEXT	SEGMENT
_L$ = -16						; size = 16
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_Col$ = 24						; size = 4
?DrawHalfLine@@YA_NMMMMK@Z PROC				; DrawHalfLine, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 521
	sub	esp, 16					; 00000010H
; Line 523
	fld	DWORD PTR _x1$[esp+12]
; Line 527
	mov	eax, DWORD PTR ?Line@@3PAUID3DXLine@@A	; Line
	fst	DWORD PTR _L$[esp+16]
	fld	DWORD PTR _y1$[esp+12]
	fst	DWORD PTR _L$[esp+20]
	fld	DWORD PTR _x2$[esp+12]
	fsub	ST(0), ST(2)
	fld	QWORD PTR __real@3fe0000000000000
	fmul	ST(1), ST(0)
	fxch	ST(1)
	faddp	ST(3), ST(0)
	fxch	ST(2)
	fstp	DWORD PTR _L$[esp+24]
	fld	DWORD PTR _y2$[esp+12]
	fsub	ST(0), ST(1)
	fmulp	ST(2), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR _L$[esp+28]
	mov	ecx, DWORD PTR [eax]
	fld1
	mov	edx, DWORD PTR [ecx+44]
	push	ecx
	fstp	DWORD PTR [esp]
	push	eax
	call	edx
; Line 528
	mov	edx, DWORD PTR _Col$[esp+12]
	mov	eax, DWORD PTR ?Line@@3PAUID3DXLine@@A	; Line
	mov	ecx, DWORD PTR [eax]
	push	edx
	push	2
	lea	edx, DWORD PTR _L$[esp+24]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	test	eax, eax
	setge	al
; Line 531
	add	esp, 16					; 00000010H
	ret	0
?DrawHalfLine@@YA_NMMMMK@Z ENDP				; DrawHalfLine
_TEXT	ENDS
PUBLIC	__real@4076800000000000
PUBLIC	__real@400921fb60000000
PUBLIC	__$ArrayPad$
PUBLIC	?ShowEvVars@@YAXXZ				; ShowEvVars
;	COMDAT __real@4076800000000000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
CONST	SEGMENT
__real@4076800000000000 DQ 04076800000000000r	; 360
CONST	ENDS
;	COMDAT __real@400921fb60000000
CONST	SEGMENT
__real@400921fb60000000 DQ 0400921fb60000000r	; 3.14159
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?ShowEvVars@@YAXXZ
_TEXT	SEGMENT
tv386 = -296						; size = 4
tv365 = -296						; size = 2
tv350 = -296						; size = 2
tv335 = -296						; size = 2
tv320 = -296						; size = 2
tv260 = -296						; size = 2
tv230 = -296						; size = 2
tv202 = -296						; size = 2
tv172 = -296						; size = 2
tv362 = -292						; size = 4
tv360 = -292						; size = 8
tv347 = -292						; size = 4
tv345 = -292						; size = 8
tv332 = -292						; size = 4
tv330 = -292						; size = 8
tv291 = -292						; size = 4
tv289 = -292						; size = 8
tv279 = -292						; size = 4
tv252 = -292						; size = 4
tv249 = -292						; size = 8
tv222 = -292						; size = 4
tv220 = -292						; size = 8
tv194 = -292						; size = 4
tv191 = -292						; size = 8
tv146 = -292						; size = 4
tv144 = -292						; size = 8
_rect$ = -284						; size = 16
_szOut$ = -268						; size = 254
__$ArrayPad$ = -8					; size = 4
?ShowEvVars@@YAXXZ PROC					; ShowEvVars, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\flockheaders.h
; Line 118
	sub	esp, 296				; 00000128H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+296], eax
	push	ebx
	push	esi
	push	edi
; Line 120
	push	254					; 000000feH
	lea	eax, DWORD PTR _szOut$[esp+312]
	push	0
	push	eax
	call	_memset
; Line 121
	fild	DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	add	esp, 8
	lea	esi, DWORD PTR _szOut$[esp+312]
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BA@EHGKECDK@Bird?5Count?51?$CG2?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 122
	fld	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
	fdiv	QWORD PTR __real@400921fb60000000
	add	esp, 4
	fmul	QWORD PTR __real@4076800000000000
	fstp	DWORD PTR tv386[esp+312]
	fld	DWORD PTR tv386[esp+312]
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BD@FCKDLHIE@?6Visual?5Angle?53?$CG4?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 123
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BB@IJFCMFHM@?6Roost?5Size?55?$CG6?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 124
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BD@HPHLHCJE@?6Attract?5Dist?57?$CG8?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 125
	fld	DWORD PTR ?CollDist@@3MA		; CollDist
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BF@BNMDMHLP@?6Collision?5Dist?59?$CG0?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 126
	fld	DWORD PTR ?RoostInf@@3MA		; RoostInf
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BI@GACOMIC@?6Roost?5Influence?5F5?$CGF6?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 127
	fld	DWORD PTR ?AttractInf@@3MA		; AttractInf
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BK@FBPGCOFP@?6Attract?5Influence?5F7?$CGF8?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 129
	fld1
	fld	DWORD PTR _RED
	mov	eax, 1
	fcom	ST(1)
	mov	DWORD PTR _rect$[esp+316], eax
	mov	DWORD PTR _rect$[esp+320], eax
	add	esp, 8
	mov	DWORD PTR _rect$[esp+316], 1024		; 00000400H
	mov	DWORD PTR _rect$[esp+320], 768		; 00000300H
	fnstsw	ax
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	fldz
	test	ah, 1
	jne	SHORT $LN7@ShowEvVars
	fstp	ST(3)
	mov	edi, 255				; 000000ffH
	jmp	SHORT $LN6@ShowEvVars
$LN7@ShowEvVars:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN5@ShowEvVars
	fstp	ST(3)
	xor	edi, edi
	jmp	SHORT $LN6@ShowEvVars
$LN5@ShowEvVars:
	fnstcw	WORD PTR tv365[esp+308]
	movzx	eax, WORD PTR tv365[esp+308]
	fxch	ST(3)
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv362[esp+308], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv362[esp+308]
	fistp	QWORD PTR tv360[esp+308]
	mov	edi, DWORD PTR tv360[esp+308]
	fldcw	WORD PTR tv365[esp+308]
$LN6@ShowEvVars:
	fld	DWORD PTR _RED+4
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN11@ShowEvVars
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN10@ShowEvVars
$LN11@ShowEvVars:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN9@ShowEvVars
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN10@ShowEvVars
$LN9@ShowEvVars:
	fnstcw	WORD PTR tv350[esp+308]
	movzx	eax, WORD PTR tv350[esp+308]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv347[esp+308], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv347[esp+308]
	fistp	QWORD PTR tv345[esp+308]
	mov	esi, DWORD PTR tv345[esp+308]
	fldcw	WORD PTR tv350[esp+308]
$LN10@ShowEvVars:
	fld	DWORD PTR _RED+8
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN15@ShowEvVars
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN14@ShowEvVars
$LN15@ShowEvVars:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN13@ShowEvVars
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN14@ShowEvVars
$LN13@ShowEvVars:
	fnstcw	WORD PTR tv335[esp+308]
	movzx	eax, WORD PTR tv335[esp+308]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv332[esp+308], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv332[esp+308]
	fistp	QWORD PTR tv330[esp+308]
	mov	edx, DWORD PTR tv330[esp+308]
	fldcw	WORD PTR tv335[esp+308]
$LN14@ShowEvVars:
	fld	DWORD PTR _RED+12
	fcom	ST(4)
	fnstsw	ax
	fstp	ST(4)
	test	ah, 1
	jne	SHORT $LN19@ShowEvVars
	fstp	ST(3)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN18@ShowEvVars
$LN19@ShowEvVars:
	fxch	ST(2)
	fcomp	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN17@ShowEvVars
	fstp	ST(2)
	xor	eax, eax
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN18@ShowEvVars
$LN17@ShowEvVars:
	fnstcw	WORD PTR tv320[esp+308]
	movzx	eax, WORD PTR tv320[esp+308]
	fmulp	ST(2), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv291[esp+308], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv291[esp+308]
	fistp	QWORD PTR tv289[esp+308]
	mov	eax, DWORD PTR tv289[esp+308]
	fldcw	WORD PTR tv320[esp+308]
$LN18@ShowEvVars:
	mov	ecx, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ebx, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	or	eax, edx
	push	eax
	push	2
	lea	edx, DWORD PTR _rect$[esp+316]
	push	edx
	push	-1
	lea	eax, DWORD PTR _szOut$[esp+324]
	push	eax
	push	0
	push	ecx
	mov	ecx, DWORD PTR [ebx+56]
	call	ecx
; Line 130
	push	254					; 000000feH
	lea	edx, DWORD PTR _szOut$[esp+312]
	push	0
	push	edx
	call	_memset
; Line 131
	fld	DWORD PTR ?CollInf@@3MA			; CollInf
	add	esp, 8
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BM@PLOJFDK@?6Collision?5Influence?5F3?$CGF4?3?$AA@
	lea	esi, DWORD PTR _szOut$[esp+316]
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 132
	fld	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
	fdiv	QWORD PTR __real@400921fb60000000
	add	esp, 4
	fmul	QWORD PTR __real@4076800000000000
	fstp	DWORD PTR tv279[esp+312]
	fld	DWORD PTR tv279[esp+312]
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BK@BKGPJLGO@?6Head?9on?5evade?5angle?5Z?$CGX?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 133
	fld	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BD@BFECMMKB@?6Top?5Velocity?5I?$CGO?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 134
	fld	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
	add	esp, 4
	fstp	DWORD PTR [esp]
	push	OFFSET ??_C@_0BG@KNPPDGEF@?6Bottom?5Velocity?5J?$CGK?3?$AA@
	call	?VarStr@@YAXPAD0M@Z			; VarStr
; Line 137
	fld1
	fld	DWORD PTR _RED
	add	esp, 8
	fcom	ST(1)
	mov	DWORD PTR _rect$[esp+312], 80		; 00000050H
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN25@ShowEvVars
	fstp	ST(0)
	mov	edi, 255				; 000000ffH
	fldz
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN24@ShowEvVars
$LN25@ShowEvVars:
	fldz
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN23@ShowEvVars
	fstp	ST(1)
	xor	edi, edi
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN24@ShowEvVars
$LN23@ShowEvVars:
	fld	QWORD PTR __real@406fe00000000000
	fnstcw	WORD PTR tv260[esp+308]
	movzx	eax, WORD PTR tv260[esp+308]
	fmul	ST(2), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv252[esp+308], eax
	fadd	ST(3), ST(0)
	fldcw	WORD PTR tv252[esp+308]
	fxch	ST(3)
	fistp	QWORD PTR tv249[esp+308]
	mov	edi, DWORD PTR tv249[esp+308]
	fldcw	WORD PTR tv260[esp+308]
	fxch	ST(1)
	fxch	ST(2)
$LN24@ShowEvVars:
	fld	DWORD PTR _RED+4
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN29@ShowEvVars
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN28@ShowEvVars
$LN29@ShowEvVars:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN27@ShowEvVars
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN28@ShowEvVars
$LN27@ShowEvVars:
	fnstcw	WORD PTR tv230[esp+308]
	movzx	eax, WORD PTR tv230[esp+308]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv222[esp+308], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv222[esp+308]
	fistp	QWORD PTR tv220[esp+308]
	mov	esi, DWORD PTR tv220[esp+308]
	fldcw	WORD PTR tv230[esp+308]
$LN28@ShowEvVars:
	fld	DWORD PTR _RED+8
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN33@ShowEvVars
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN32@ShowEvVars
$LN33@ShowEvVars:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN31@ShowEvVars
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN32@ShowEvVars
$LN31@ShowEvVars:
	fnstcw	WORD PTR tv202[esp+308]
	movzx	eax, WORD PTR tv202[esp+308]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv194[esp+308], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv194[esp+308]
	fistp	QWORD PTR tv191[esp+308]
	mov	edx, DWORD PTR tv191[esp+308]
	fldcw	WORD PTR tv202[esp+308]
$LN32@ShowEvVars:
	fld	DWORD PTR _RED+12
	fcom	ST(4)
	fnstsw	ax
	fstp	ST(4)
	test	ah, 1
	jne	SHORT $LN37@ShowEvVars
	fstp	ST(3)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN36@ShowEvVars
$LN37@ShowEvVars:
	fxch	ST(2)
	fcomp	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN35@ShowEvVars
	fstp	ST(2)
	xor	eax, eax
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN36@ShowEvVars
$LN35@ShowEvVars:
	fnstcw	WORD PTR tv172[esp+308]
	movzx	eax, WORD PTR tv172[esp+308]
	fmulp	ST(2), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv146[esp+308], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv146[esp+308]
	fistp	QWORD PTR tv144[esp+308]
	mov	eax, DWORD PTR tv144[esp+308]
	fldcw	WORD PTR tv172[esp+308]
$LN36@ShowEvVars:
	mov	ecx, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ebx, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	or	eax, edx
	push	eax
	push	2
	lea	eax, DWORD PTR _rect$[esp+316]
	push	eax
	mov	eax, DWORD PTR [ebx+56]
	push	-1
	lea	edx, DWORD PTR _szOut$[esp+324]
	push	edx
	push	0
	push	ecx
	call	eax
; Line 138
	mov	ecx, DWORD PTR __$ArrayPad$[esp+308]
	pop	edi
	pop	esi
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	ret	0
?ShowEvVars@@YAXXZ ENDP					; ShowEvVars
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
;	COMDAT __real@3ff0000000000000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??KD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
_fInv$ = 8						; size = 4
_f$ = 8							; size = 4
??KD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator/, COMDAT
; _this$ = ecx
; ___$ReturnUdt$ = eax
; Line 399
	fld	DWORD PTR _f$[esp-4]
	fld1
	fdivrp	ST(1), ST(0)
	fstp	DWORD PTR _fInv$[esp-4]
; Line 400
	fld	DWORD PTR [ecx]
	fld	DWORD PTR _fInv$[esp-4]
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [ecx+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [eax+4]
	fmul	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 401
	ret	4
??KD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator/
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator-, COMDAT
; _this$ = edx
; ___$ReturnUdt$ = eax
; _v$ = ecx
; Line 387
	fld	DWORD PTR [edx]
	fsub	DWORD PTR [ecx]
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [edx+4]
	fsub	DWORD PTR [ecx+4]
	fstp	DWORD PTR [eax+4]
	fld	DWORD PTR [edx+8]
	fsub	DWORD PTR [ecx+8]
	fstp	DWORD PTR [eax+8]
; Line 388
	ret	0
??GD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator-
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = edx
; ___$ReturnUdt$ = eax
; _v$ = ecx
; Line 381
	fld	DWORD PTR [ecx]
	fadd	DWORD PTR [edx]
	fstp	DWORD PTR [eax]
	fld	DWORD PTR [ecx+4]
	fadd	DWORD PTR [edx+4]
	fstp	DWORD PTR [eax+4]
	fld	DWORD PTR [ecx+8]
	fadd	DWORD PTR [edx+8]
	fstp	DWORD PTR [eax+8]
; Line 382
	ret	0
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
tv74 = -4						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT
; File g:\program files\microsoft visual studio 9.0\vc\include\math.h
; Line 530
	push	ecx
	fld	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	call	__CIsin
	fstp	DWORD PTR tv74[esp+4]
	fld	DWORD PTR tv74[esp+4]
	pop	ecx
	ret	0
?sin@@YAMM@Z ENDP					; sin
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
tv74 = -4						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT
; Line 504
	push	ecx
	fld	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	call	__CIcos
	fstp	DWORD PTR tv74[esp+4]
	fld	DWORD PTR tv74[esp+4]
	pop	ecx
	ret	0
?cos@@YAMM@Z ENDP					; cos
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?abs@@YAMM@Z
_TEXT	SEGMENT
tv131 = 8						; size = 4
__X$ = 8						; size = 4
?abs@@YAMM@Z PROC					; abs, COMDAT
; Line 492
	fld	DWORD PTR __X$[esp-4]
	fabs
	fstp	DWORD PTR tv131[esp-4]
	fld	DWORD PTR tv131[esp-4]
	ret	0
?abs@@YAMM@Z ENDP					; abs
PUBLIC	?Cleanup@@YAXXZ					; Cleanup
; Function compile flags: /Ogtpy
;	COMDAT ?Cleanup@@YAXXZ
_TEXT	SEGMENT
?Cleanup@@YAXXZ PROC					; Cleanup, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 141
	push	ecx
; Line 142
	mov	eax, DWORD PTR ?Cylinder@@3PAUID3DXMesh@@A ; Cylinder
	test	eax, eax
	je	SHORT $LN3@Cleanup
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN3@Cleanup:
; Line 143
	mov	eax, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	test	eax, eax
	je	SHORT $LN6@Cleanup
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN6@Cleanup:
; Line 144
	mov	eax, DWORD PTR ?Line@@3PAUID3DXLine@@A	; Line
	test	eax, eax
	je	SHORT $LN9@Cleanup
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN9@Cleanup:
; Line 145
	mov	eax, DWORD PTR ?SphereMesh@?1??DrawSphere@d3d@@YA_NPAUIDirect3DDevice9@@UD3DXVECTOR3@@MMU_D3DMATERIAL9@@@Z@4PAUID3DXMesh@@A
	test	eax, eax
	je	SHORT $LN27@Cleanup
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN27@Cleanup:
	pop	ecx
; Line 148
	ret	0
?Cleanup@@YAXXZ ENDP					; Cleanup
PUBLIC	__real@40000000
PUBLIC	__real@3fb99999a0000000
PUBLIC	?InitBird@@YAXPAVMob@@@Z			; InitBird
;	COMDAT __real@40000000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fb99999a0000000
CONST	SEGMENT
__real@3fb99999a0000000 DQ 03fb99999a0000000r	; 0.1
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?InitBird@@YAXPAVMob@@@Z
_TEXT	SEGMENT
tv283 = -364						; size = 4
tv281 = -364						; size = 4
tv266 = -364						; size = 4
tv262 = -364						; size = 4
tv258 = -364						; size = 4
tv256 = -364						; size = 4
$T95227 = -364						; size = 4
tv303 = -360						; size = 4
tv293 = -360						; size = 4
tv289 = -360						; size = 4
$T95238 = -360						; size = 4
$T95231 = -360						; size = 4
tv285 = -356						; size = 4
$T95242 = -356						; size = 4
$T95223 = -356						; size = 4
_TempCol$ = -352					; size = 16
$T95218 = -336						; size = 68
$T95219 = -268						; size = 68
$T95217 = -196						; size = 192
?InitBird@@YAXPAVMob@@@Z PROC				; InitBird, COMDAT
; _pB$ = ebx
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 496
	sub	esp, 364				; 0000016cH
	push	esi
	push	edi
; Line 500
	call	_rand
	mov	DWORD PTR tv303[esp+372], eax
	fild	DWORD PTR tv303[esp+372]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR $T95223[esp+372]
	call	_rand
	mov	DWORD PTR tv293[esp+372], eax
	fild	DWORD PTR tv293[esp+372]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR $T95227[esp+372]
	call	_rand
	mov	DWORD PTR tv289[esp+372], eax
	fild	DWORD PTR tv289[esp+372]
	sub	esp, 16					; 00000010H
	lea	esi, DWORD PTR $T95217[esp+388]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR $T95231[esp+388]
	fld	DWORD PTR _BirdMaxVel
	fstp	DWORD PTR [esp+12]
	fld	DWORD PTR $T95223[esp+388]
	fld	QWORD PTR __real@3fe0000000000000
	fsub	ST(1), ST(0)
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	fld	ST(0)
	fmulp	ST(3), ST(0)
	fld	QWORD PTR __real@4000000000000000
	fmul	ST(3), ST(0)
	fxch	ST(3)
	fstp	DWORD PTR tv285[esp+388]
	fld	DWORD PTR tv285[esp+388]
	fstp	DWORD PTR [esp+8]
	fld	DWORD PTR $T95227[esp+388]
	fsub	ST(0), ST(2)
	fmul	ST(0), ST(1)
	fmul	ST(0), ST(3)
	fstp	DWORD PTR tv283[esp+388]
	fld	DWORD PTR tv283[esp+388]
	fstp	DWORD PTR [esp+4]
	fld	DWORD PTR $T95231[esp+388]
	fsubrp	ST(2), ST(0)
	fmulp	ST(1), ST(0)
	fmulp	ST(1), ST(0)
	fstp	DWORD PTR tv281[esp+388]
	fld	DWORD PTR tv281[esp+388]
	fstp	DWORD PTR [esp]
	call	??0Mob@@QAE@MMMM@Z			; Mob::Mob
	mov	esi, eax
	mov	ecx, 48					; 00000030H
	mov	edi, ebx
	rep movsd
; Line 501
	call	_rand
	mov	DWORD PTR tv266[esp+372], eax
	fild	DWORD PTR tv266[esp+372]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR $T95238[esp+372]
	call	_rand
	mov	DWORD PTR tv262[esp+372], eax
	fild	DWORD PTR tv262[esp+372]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR $T95242[esp+372]
	call	_rand
	mov	DWORD PTR tv258[esp+372], eax
	fild	DWORD PTR tv258[esp+372]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv256[esp+372]
	fld	DWORD PTR tv256[esp+372]
	fld	QWORD PTR __real@3fe0000000000000
	fmul	ST(1), ST(0)
	fld	QWORD PTR __real@3fb99999a0000000
	fadd	ST(2), ST(0)
	fxch	ST(2)
	fstp	DWORD PTR _TempCol$[esp+372]
	fld	DWORD PTR $T95242[esp+372]
	fmul	ST(0), ST(1)
	fadd	ST(0), ST(2)
	fstp	DWORD PTR _TempCol$[esp+376]
	fmul	DWORD PTR $T95238[esp+372]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR _TempCol$[esp+380]
	fld1
; Line 502
	mov	ecx, DWORD PTR _TempCol$[esp+372]
	mov	edx, DWORD PTR _TempCol$[esp+376]
	fstp	DWORD PTR _TempCol$[esp+384]
	fld	DWORD PTR __real@40000000
	mov	esi, DWORD PTR _TempCol$[esp+380]
	mov	edi, DWORD PTR _TempCol$[esp+384]
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T95219[esp+440]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	mov	esi, eax
	mov	ecx, 17					; 00000011H
	lea	edi, DWORD PTR $T95218[esp+440]
	rep movsd
	lea	edi, DWORD PTR [ebx+112]
	mov	ecx, 17					; 00000011H
	lea	esi, DWORD PTR $T95218[esp+440]
	rep movsd
	add	esp, 68					; 00000044H
; Line 503
	mov	edi, ebx
	call	?GetTransform@Mob@@QAEPAUD3DXMATRIX@@XZ	; Mob::GetTransform
; Line 504
	pop	edi
	pop	esi
	add	esp, 364				; 0000016cH
	ret	0
?InitBird@@YAXPAVMob@@@Z ENDP				; InitBird
_TEXT	ENDS
PUBLIC	?SetUpBirds@@YAXXZ				; SetUpBirds
; Function compile flags: /Ogtpy
;	COMDAT ?SetUpBirds@@YAXXZ
_TEXT	SEGMENT
?SetUpBirds@@YAXXZ PROC					; SetUpBirds, COMDAT
; Line 487
	push	ecx
	push	ebx
	push	esi
; Line 488
	xor	esi, esi
	cmp	DWORD PTR ?BirdsCount@@3HA, esi		; BirdsCount
	jl	SHORT $LN1@SetUpBirds
	mov	ebx, OFFSET ?Bird@@3PAVMob@@A		; Bird
$LL3@SetUpBirds:
; Line 490
	call	?InitBird@@YAXPAVMob@@@Z		; InitBird
	inc	esi
	add	ebx, 192				; 000000c0H
	cmp	esi, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	jle	SHORT $LL3@SetUpBirds
$LN1@SetUpBirds:
; Line 492
	call	?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z	; Mob::InitaliseLinked
; Line 493
	pop	esi
	pop	ebx
	pop	ecx
	ret	0
?SetUpBirds@@YAXXZ ENDP					; SetUpBirds
_TEXT	ENDS
PUBLIC	__real@3ff921fb60000000
PUBLIC	__real@3fc5555560000000
PUBLIC	__real@4024000000000000
PUBLIC	?MoveBird@@YAXPAVMob@@@Z			; MoveBird
;	COMDAT __real@3ff921fb60000000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
CONST	SEGMENT
__real@3ff921fb60000000 DQ 03ff921fb60000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3fc5555560000000
CONST	SEGMENT
__real@3fc5555560000000 DQ 03fc5555560000000r	; 0.166667
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?MoveBird@@YAXPAVMob@@@Z
_TEXT	SEGMENT
tv3789 = -336						; size = 4
tv3787 = -336						; size = 4
tv3782 = -336						; size = 4
tv3780 = -336						; size = 4
tv3775 = -336						; size = 4
tv3773 = -336						; size = 4
tv3763 = -336						; size = 4
tv3756 = -336						; size = 4
tv3741 = -336						; size = 4
tv3737 = -336						; size = 4
tv3729 = -336						; size = 4
tv3725 = -336						; size = 4
tv3717 = -336						; size = 4
tv3713 = -336						; size = 4
tv3687 = -336						; size = 4
tv3680 = -336						; size = 4
tv3649 = -336						; size = 4
tv3642 = -336						; size = 4
tv3635 = -336						; size = 4
tv3631 = -336						; size = 4
tv3623 = -336						; size = 4
tv3619 = -336						; size = 4
tv3609 = -336						; size = 4
tv3604 = -336						; size = 4
tv3581 = -336						; size = 4
tv3574 = -336						; size = 4
tv3543 = -336						; size = 4
tv3536 = -336						; size = 4
_Stackcnt$ = -336					; size = 4
tv3455 = -332						; size = 4
tv3448 = -332						; size = 4
tv3425 = -332						; size = 4
tv3418 = -332						; size = 4
tv3389 = -332						; size = 4
tv3382 = -332						; size = 4
tv3303 = -332						; size = 4
tv3288 = -332						; size = 4
_dwG$95826 = -332					; size = 4
_PosY$ = -332						; size = 4
tv3306 = -328						; size = 2
tv3291 = -328						; size = 2
tv3276 = -328						; size = 2
tv3259 = -328						; size = 2
$T95871 = -328						; size = 4
tv3301 = -324						; size = 8
tv3286 = -324						; size = 8
tv3269 = -324						; size = 8
tv3254 = -324						; size = 8
$T95869 = -324						; size = 4
$T95266 = -324						; size = 12
$T95263 = -324						; size = 12
$T95270 = -304						; size = 12
$T95265 = -304						; size = 12
$T95264 = -304						; size = 12
_VectorToOtherBird$ = -292				; size = 12
_cnt$ = -280						; size = 4
_PosX$ = -280						; size = 4
_dwR$95825 = -276					; size = 4
_PosZ$ = -276						; size = 4
_tempCol$91275 = -272					; size = 16
tv3272 = -256						; size = 4
tv3256 = -256						; size = 4
$T95872 = -256						; size = 4
_Temp$95502 = -252					; size = 12
_Temp$95407 = -252					; size = 12
$T95277 = -252						; size = 12
_Temp$91241 = -252					; size = 12
_Position$ = -240					; size = 12
$T95273 = -228						; size = 12
$T95262 = -228						; size = 12
_NormalVectorToOtherBird$ = -216			; size = 12
$T95269 = -204						; size = 12
$T95267 = -192						; size = 12
$T95275 = -180						; size = 12
$T95276 = -168						; size = 12
$T95274 = -156						; size = 12
$T95870 = -144						; size = 4
$T95271 = -140						; size = 12
$T95272 = -128						; size = 12
_Temp$95636 = -116					; size = 12
$T95803 = -104						; size = 12
_Temp$95716 = -92					; size = 12
$T95793 = -80						; size = 12
_Temp$95600 = -68					; size = 12
_L$95860 = -56						; size = 16
_Stack$ = -40						; size = 24
_Temp$95557 = -16					; size = 12
?MoveBird@@YAXPAVMob@@@Z PROC				; MoveBird, COMDAT
; _pB$ = eax
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 336
	sub	esp, 340				; 00000154H
	push	ebx
	push	ebp
	push	esi
	push	edi
	mov	edi, eax
; Line 339
	fld	DWORD PTR [edi+24]
; Line 342
	mov	eax, DWORD PTR [edi+24]
	mov	ecx, DWORD PTR [edi+28]
	fstp	DWORD PTR _PosX$[esp+356]
	fld	DWORD PTR [edi+28]
	mov	edx, DWORD PTR [edi+32]
	fstp	DWORD PTR _PosY$[esp+356]
	mov	DWORD PTR _Position$[esp+356], eax
	fld	DWORD PTR [edi+32]
	mov	DWORD PTR _Position$[esp+360], ecx
	fstp	DWORD PTR _PosZ$[esp+356]
	mov	DWORD PTR _Position$[esp+364], edx
; Line 345
	call	_rand
	mov	DWORD PTR tv3789[esp+356], eax
	fild	DWORD PTR tv3789[esp+356]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv3787[esp+356]
	fld	DWORD PTR tv3787[esp+356]
	fsub	QWORD PTR __real@3fe0000000000000
	fdiv	QWORD PTR __real@4024000000000000
	fstp	DWORD PTR [edi]
; Line 346
	call	_rand
	mov	DWORD PTR tv3782[esp+356], eax
	fild	DWORD PTR tv3782[esp+356]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv3780[esp+356]
	fld	DWORD PTR tv3780[esp+356]
	fsub	QWORD PTR __real@3fe0000000000000
	fdiv	QWORD PTR __real@4024000000000000
	fstp	DWORD PTR [edi+4]
; Line 347
	call	_rand
	mov	DWORD PTR tv3775[esp+356], eax
	fild	DWORD PTR tv3775[esp+356]
	fdiv	QWORD PTR __real@40dfffc000000000
	fstp	DWORD PTR tv3773[esp+356]
	fld	DWORD PTR tv3773[esp+356]
	fsub	QWORD PTR __real@3fe0000000000000
	fdiv	QWORD PTR __real@4024000000000000
	fstp	DWORD PTR [edi+8]
; Line 350
	fld	DWORD PTR _Position$[esp+356]
	fld	DWORD PTR _Position$[esp+360]
	fld	DWORD PTR _Position$[esp+364]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3763[esp+356]
	fld	DWORD PTR tv3763[esp+356]
	call	__CIsqrt
	fstp	DWORD PTR tv3756[esp+356]
	fld	DWORD PTR tv3756[esp+356]
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN41@MoveBird
; Line 354
	lea	eax, DWORD PTR _Position$[esp+356]
	push	eax
	lea	ecx, DWORD PTR _Temp$91241[esp+360]
	push	ecx
	call	_D3DXVec3Normalize@8
; Line 355
	fld	DWORD PTR _Temp$91241[esp+356]
	fld	DWORD PTR ?RoostInf@@3MA		; RoostInf
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95262[esp+356]
	fld	DWORD PTR _Temp$91241[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95262[esp+360]
	fmul	DWORD PTR _Temp$91241[esp+364]
	fstp	DWORD PTR $T95262[esp+364]
	fld	DWORD PTR [edi]
	fsub	DWORD PTR $T95262[esp+356]
	fstp	DWORD PTR [edi]
	fld	DWORD PTR [edi+4]
	fsub	DWORD PTR $T95262[esp+360]
	fstp	DWORD PTR [edi+4]
	fld	DWORD PTR [edi+8]
	fsub	DWORD PTR $T95262[esp+364]
	fstp	DWORD PTR [edi+8]
$LN41@MoveBird:
; Line 363
	mov	esi, DWORD PTR [edi+184]
; Line 371
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	xor	ebx, ebx
	mov	DWORD PTR _Stackcnt$[esp+356], ebx
	test	esi, esi
	je	$LN20@MoveBird
$LN21@MoveBird:
	cmp	ebx, 3
	jge	$LN296@MoveBird
	fld	DWORD PTR _PosX$[esp+356]
	fsub	DWORD PTR [esi+24]
	fstp	DWORD PTR tv3741[esp+356]
	fld	DWORD PTR tv3741[esp+356]
	fabs
	fstp	DWORD PTR tv3737[esp+356]
	fld	DWORD PTR tv3737[esp+356]
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	$LN296@MoveBird
; Line 373
	fld	DWORD PTR _PosY$[esp+356]
	fsub	DWORD PTR [esi+28]
	fstp	DWORD PTR tv3729[esp+356]
	fld	DWORD PTR tv3729[esp+356]
	fabs
	fstp	DWORD PTR tv3725[esp+356]
	fld	DWORD PTR tv3725[esp+356]
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	$LN16@MoveBird
; Line 375
	fld	DWORD PTR _PosZ$[esp+356]
	fsub	DWORD PTR [esi+32]
	fstp	DWORD PTR tv3717[esp+356]
	fld	DWORD PTR tv3717[esp+356]
	fabs
	fstp	DWORD PTR tv3713[esp+356]
	fld	DWORD PTR tv3713[esp+356]
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	$LN16@MoveBird
	fstp	ST(0)
; Line 378
	fld	DWORD PTR [esi+24]
	fsub	DWORD PTR _Position$[esp+356]
	fstp	DWORD PTR $T95263[esp+356]
	mov	edx, DWORD PTR $T95263[esp+356]
	fld	DWORD PTR [esi+28]
	fsub	DWORD PTR _Position$[esp+360]
	fstp	DWORD PTR $T95263[esp+360]
	mov	eax, DWORD PTR $T95263[esp+360]
	fld	DWORD PTR [esi+32]
	mov	DWORD PTR _VectorToOtherBird$[esp+356], edx
	fsub	DWORD PTR _Position$[esp+364]
	mov	DWORD PTR _VectorToOtherBird$[esp+360], eax
	fstp	DWORD PTR $T95263[esp+364]
	mov	ecx, DWORD PTR $T95263[esp+364]
; Line 379
	fld	DWORD PTR $T95263[esp+356]
	mov	DWORD PTR _VectorToOtherBird$[esp+364], ecx
	fld	DWORD PTR $T95263[esp+360]
	fld	DWORD PTR $T95263[esp+364]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3687[esp+356]
	fld	DWORD PTR tv3687[esp+356]
	call	__CIsqrt
	fstp	DWORD PTR tv3680[esp+356]
	fld	DWORD PTR tv3680[esp+356]
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fcom	ST(1)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 65					; 00000041H
	jne	$LN16@MoveBird
; Line 382
	lea	edx, DWORD PTR _VectorToOtherBird$[esp+356]
	fstp	ST(0)
	push	edx
	lea	eax, DWORD PTR _NormalVectorToOtherBird$[esp+360]
	push	eax
	call	_D3DXVec3Normalize@8
; Line 383
	fldz
	fcom	DWORD PTR [edi+12]
	lea	ecx, DWORD PTR [edi+12]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN344@MoveBird
	fcom	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN344@MoveBird
	fcom	DWORD PTR [ecx+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN344@MoveBird
	fst	DWORD PTR $T95264[esp+356]
	fstp	DWORD PTR $T95264[esp+360]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR $T95264[esp+364]
	jmp	SHORT $LN67@MoveBird
$LN344@MoveBird:
	push	ecx
	fstp	ST(0)
	lea	ecx, DWORD PTR _Temp$95407[esp+360]
	push	ecx
	call	_D3DXVec3Normalize@8
	mov	edx, DWORD PTR _Temp$95407[esp+356]
	mov	eax, DWORD PTR _Temp$95407[esp+360]
	mov	ecx, DWORD PTR _Temp$95407[esp+364]
	mov	DWORD PTR $T95264[esp+356], edx
	mov	DWORD PTR $T95264[esp+360], eax
	mov	DWORD PTR $T95264[esp+364], ecx
$LN67@MoveBird:
; Line 384
	fld	DWORD PTR _NormalVectorToOtherBird$[esp+360]
	fmul	DWORD PTR $T95264[esp+360]
	fld	DWORD PTR $T95264[esp+356]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+356]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _NormalVectorToOtherBird$[esp+364]
	fmul	DWORD PTR $T95264[esp+364]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3649[esp+356]
	fld	DWORD PTR tv3649[esp+356]
	call	__CIacos
	fstp	DWORD PTR tv3642[esp+356]
	fld	DWORD PTR tv3642[esp+356]
	fld	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
	fcompp
	fnstsw	ax
; Line 389
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	test	ah, 65					; 00000041H
	jne	SHORT $LN16@MoveBird
	mov	DWORD PTR _Stack$[esp+ebx*4+356], esi
	inc	ebx
$LN16@MoveBird:
; Line 394
	mov	esi, DWORD PTR [esi+184]
	test	esi, esi
	jne	$LN21@MoveBird
$LN296@MoveBird:
; Line 389
	mov	DWORD PTR _Stackcnt$[esp+356], ebx
$LN20@MoveBird:
; Line 398
	mov	esi, DWORD PTR [edi+180]
; Line 399
	test	esi, esi
	je	$LN317@MoveBird
$LN15@MoveBird:
	cmp	ebx, 6
	jge	$LN321@MoveBird
	fld	DWORD PTR _PosX$[esp+356]
	fsub	DWORD PTR [esi+24]
	fstp	DWORD PTR tv3635[esp+356]
	fld	DWORD PTR tv3635[esp+356]
	fabs
	fstp	DWORD PTR tv3631[esp+356]
	fld	DWORD PTR tv3631[esp+356]
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	$LN321@MoveBird
; Line 401
	fld	DWORD PTR _PosY$[esp+356]
	fsub	DWORD PTR [esi+28]
	fstp	DWORD PTR tv3623[esp+356]
	fld	DWORD PTR tv3623[esp+356]
	fabs
	fstp	DWORD PTR tv3619[esp+356]
	fld	DWORD PTR tv3619[esp+356]
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	$LN10@MoveBird
; Line 403
	fld	DWORD PTR _PosZ$[esp+356]
	fsub	DWORD PTR [esi+32]
	fstp	DWORD PTR tv3609[esp+356]
	fld	DWORD PTR tv3609[esp+356]
	fabs
	fstp	DWORD PTR tv3604[esp+356]
	fld	DWORD PTR tv3604[esp+356]
	fcomp	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	$LN10@MoveBird
	fstp	ST(0)
; Line 406
	fld	DWORD PTR [esi+24]
	fsub	DWORD PTR _Position$[esp+356]
	fstp	DWORD PTR $T95265[esp+356]
	mov	edx, DWORD PTR $T95265[esp+356]
	fld	DWORD PTR [esi+28]
	fsub	DWORD PTR _Position$[esp+360]
	fstp	DWORD PTR $T95265[esp+360]
	mov	eax, DWORD PTR $T95265[esp+360]
	fld	DWORD PTR [esi+32]
	mov	DWORD PTR _VectorToOtherBird$[esp+356], edx
	fsub	DWORD PTR _Position$[esp+364]
	mov	DWORD PTR _VectorToOtherBird$[esp+360], eax
	fstp	DWORD PTR $T95265[esp+364]
	mov	ecx, DWORD PTR $T95265[esp+364]
; Line 407
	fld	DWORD PTR $T95265[esp+356]
	mov	DWORD PTR _VectorToOtherBird$[esp+364], ecx
	fld	DWORD PTR $T95265[esp+360]
	fld	DWORD PTR $T95265[esp+364]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3581[esp+356]
	fld	DWORD PTR tv3581[esp+356]
	call	__CIsqrt
	fstp	DWORD PTR tv3574[esp+356]
	fld	DWORD PTR tv3574[esp+356]
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fcom	ST(1)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 65					; 00000041H
	jne	$LN10@MoveBird
; Line 410
	lea	edx, DWORD PTR _VectorToOtherBird$[esp+356]
	fstp	ST(0)
	push	edx
	lea	eax, DWORD PTR _NormalVectorToOtherBird$[esp+360]
	push	eax
	call	_D3DXVec3Normalize@8
; Line 411
	fldz
	fcom	DWORD PTR [edi+12]
	lea	ecx, DWORD PTR [edi+12]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN356@MoveBird
	fcom	DWORD PTR [ecx+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN356@MoveBird
	fcom	DWORD PTR [ecx+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN356@MoveBird
	fst	DWORD PTR $T95266[esp+356]
	fstp	DWORD PTR $T95266[esp+360]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR $T95266[esp+364]
	jmp	SHORT $LN105@MoveBird
$LN356@MoveBird:
	push	ecx
	fstp	ST(0)
	lea	ecx, DWORD PTR _Temp$95502[esp+360]
	push	ecx
	call	_D3DXVec3Normalize@8
	mov	edx, DWORD PTR _Temp$95502[esp+356]
	mov	eax, DWORD PTR _Temp$95502[esp+360]
	mov	ecx, DWORD PTR _Temp$95502[esp+364]
	mov	DWORD PTR $T95266[esp+356], edx
	mov	DWORD PTR $T95266[esp+360], eax
	mov	DWORD PTR $T95266[esp+364], ecx
$LN105@MoveBird:
; Line 412
	fld	DWORD PTR $T95266[esp+360]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+360]
	fld	DWORD PTR $T95266[esp+356]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+356]
	faddp	ST(1), ST(0)
	fld	DWORD PTR $T95266[esp+364]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+364]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3543[esp+356]
	fld	DWORD PTR tv3543[esp+356]
	call	__CIacos
	fstp	DWORD PTR tv3536[esp+356]
	fld	DWORD PTR tv3536[esp+356]
	fld	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
	fcompp
	fnstsw	ax
; Line 417
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	test	ah, 65					; 00000041H
	jne	SHORT $LN10@MoveBird
	mov	DWORD PTR _Stack$[esp+ebx*4+356], esi
	inc	ebx
$LN10@MoveBird:
; Line 422
	mov	esi, DWORD PTR [esi+180]
	test	esi, esi
	jne	$LN15@MoveBird
$LN321@MoveBird:
; Line 417
	mov	DWORD PTR _Stackcnt$[esp+356], ebx
$LN317@MoveBird:
; Line 399
	fstp	ST(0)
; Line 427
	mov	DWORD PTR _cnt$[esp+356], 0
; Line 429
	test	ebx, ebx
	jle	$LN8@MoveBird
$LN9@MoveBird:
; Line 431
	mov	edx, DWORD PTR _cnt$[esp+356]
	mov	ebx, DWORD PTR _Stack$[esp+edx*4+356]
; Line 432
	fld	DWORD PTR [ebx+24]
	fsub	DWORD PTR _Position$[esp+356]
	fstp	DWORD PTR $T95267[esp+356]
	mov	eax, DWORD PTR $T95267[esp+356]
	fld	DWORD PTR [ebx+28]
	fsub	DWORD PTR _Position$[esp+360]
	fstp	DWORD PTR $T95267[esp+360]
	mov	ecx, DWORD PTR $T95267[esp+360]
	fld	DWORD PTR [ebx+32]
	mov	DWORD PTR _VectorToOtherBird$[esp+356], eax
	fsub	DWORD PTR _Position$[esp+364]
; Line 433
	lea	eax, DWORD PTR _VectorToOtherBird$[esp+356]
	mov	DWORD PTR _VectorToOtherBird$[esp+360], ecx
	push	eax
	lea	ecx, DWORD PTR _NormalVectorToOtherBird$[esp+360]
	fstp	DWORD PTR $T95267[esp+368]
	mov	edx, DWORD PTR $T95267[esp+368]
	push	ecx
	mov	DWORD PTR _VectorToOtherBird$[esp+372], edx
	call	_D3DXVec3Normalize@8
; Line 434
	fldz
	fld	ST(0)
	lea	esi, DWORD PTR [edi+12]
	fcomp	DWORD PTR [esi]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN364@MoveBird
	fcom	DWORD PTR [esi+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN364@MoveBird
	fcom	DWORD PTR [esi+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN127@MoveBird
$LN364@MoveBird:
	push	esi
	fstp	ST(0)
	lea	edx, DWORD PTR _Temp$95557[esp+360]
	push	edx
	call	_D3DXVec3Normalize@8
	fldz
$LN127@MoveBird:
; Line 436
	fcom	DWORD PTR [ebx+12]
	lea	ebp, DWORD PTR [ebx+12]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN373@MoveBird
	fcom	DWORD PTR [ebp+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN373@MoveBird
	fcom	DWORD PTR [ebp+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN373@MoveBird
	fst	DWORD PTR $T95269[esp+356]
	fst	DWORD PTR $T95269[esp+360]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR $T95269[esp+364]
	jmp	SHORT $LN145@MoveBird
$LN373@MoveBird:
	push	ebp
	fstp	ST(0)
	lea	eax, DWORD PTR _Temp$95600[esp+360]
	push	eax
	call	_D3DXVec3Normalize@8
	fldz
	mov	ecx, DWORD PTR _Temp$95600[esp+356]
	mov	edx, DWORD PTR _Temp$95600[esp+360]
	mov	eax, DWORD PTR _Temp$95600[esp+364]
	mov	DWORD PTR $T95269[esp+356], ecx
	mov	DWORD PTR $T95269[esp+360], edx
	mov	DWORD PTR $T95269[esp+364], eax
$LN145@MoveBird:
	fcom	DWORD PTR [esi]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN383@MoveBird
	fcom	DWORD PTR [esi+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN383@MoveBird
	fcom	DWORD PTR [esi+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN383@MoveBird
	fst	DWORD PTR $T95270[esp+356]
	fstp	DWORD PTR $T95270[esp+360]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR $T95270[esp+364]
	jmp	SHORT $LN159@MoveBird
$LN383@MoveBird:
	push	esi
	fstp	ST(0)
	lea	ecx, DWORD PTR _Temp$95636[esp+360]
	push	ecx
	call	_D3DXVec3Normalize@8
	mov	edx, DWORD PTR _Temp$95636[esp+356]
	mov	eax, DWORD PTR _Temp$95636[esp+360]
	mov	ecx, DWORD PTR _Temp$95636[esp+364]
	mov	DWORD PTR $T95270[esp+356], edx
	mov	DWORD PTR $T95270[esp+360], eax
	mov	DWORD PTR $T95270[esp+364], ecx
$LN159@MoveBird:
; Line 438
	fld	DWORD PTR _VectorToOtherBird$[esp+356]
	fld	DWORD PTR _VectorToOtherBird$[esp+360]
	fld	DWORD PTR _VectorToOtherBird$[esp+364]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3455[esp+356]
	fld	DWORD PTR tv3455[esp+356]
	call	__CIsqrt
	fstp	DWORD PTR tv3448[esp+356]
	fld	DWORD PTR tv3448[esp+356]
	fld	DWORD PTR ?CollDist@@3MA		; CollDist
	fcompp
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN7@MoveBird
; Line 441
	fld	DWORD PTR _VectorToOtherBird$[esp+356]
	fld	QWORD PTR __real@3fc5555560000000
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95271[esp+356]
	fld	DWORD PTR _VectorToOtherBird$[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95271[esp+360]
	fmul	DWORD PTR _VectorToOtherBird$[esp+364]
	fstp	DWORD PTR $T95271[esp+364]
	fld	DWORD PTR $T95271[esp+356]
	fld	DWORD PTR ?CollInf@@3MA			; CollInf
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95272[esp+356]
	fld	DWORD PTR $T95271[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95272[esp+360]
	fmul	DWORD PTR $T95271[esp+364]
	fstp	DWORD PTR $T95272[esp+364]
	fld	DWORD PTR [edi]
	fsub	DWORD PTR $T95272[esp+356]
	fstp	DWORD PTR [edi]
	fld	DWORD PTR [edi+4]
	fsub	DWORD PTR $T95272[esp+360]
	fstp	DWORD PTR [edi+4]
	fld	DWORD PTR [edi+8]
	fsub	DWORD PTR $T95272[esp+364]
	fstp	DWORD PTR [edi+8]
; Line 442
	mov	edx, DWORD PTR _RED
	mov	eax, DWORD PTR _RED+4
	mov	ecx, DWORD PTR _RED+8
	mov	DWORD PTR _tempCol$91275[esp+356], edx
	mov	edx, DWORD PTR _RED+12
	mov	DWORD PTR _tempCol$91275[esp+360], eax
	mov	DWORD PTR _tempCol$91275[esp+364], ecx
	mov	DWORD PTR _tempCol$91275[esp+368], edx
; Line 444
	jmp	$LN2@MoveBird
$LN7@MoveBird:
; Line 447
	fld	DWORD PTR $T95270[esp+356]
	fmul	DWORD PTR $T95269[esp+356]
	fld	DWORD PTR $T95270[esp+360]
	fmul	DWORD PTR $T95269[esp+360]
	faddp	ST(1), ST(0)
	fld	DWORD PTR $T95270[esp+364]
	fmul	DWORD PTR $T95269[esp+364]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3425[esp+356]
	fld	DWORD PTR tv3425[esp+356]
	call	__CIacos
	fstp	DWORD PTR tv3418[esp+356]
	fld	DWORD PTR tv3418[esp+356]
	fcomp	QWORD PTR __real@3ff921fb60000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN5@MoveBird
; Line 449
	fldz
	fcom	DWORD PTR [ebp]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN392@MoveBird
	fcom	DWORD PTR [ebp+4]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN392@MoveBird
	fcom	DWORD PTR [ebp+8]
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN392@MoveBird
	fst	DWORD PTR $T95273[esp+356]
	fstp	DWORD PTR $T95273[esp+360]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR $T95273[esp+364]
	jmp	SHORT $LN191@MoveBird
$LN392@MoveBird:
	push	ebp
	fstp	ST(0)
	lea	eax, DWORD PTR _Temp$95716[esp+360]
	push	eax
	call	_D3DXVec3Normalize@8
	mov	ecx, DWORD PTR _Temp$95716[esp+356]
	mov	edx, DWORD PTR _Temp$95716[esp+360]
	mov	eax, DWORD PTR _Temp$95716[esp+364]
	mov	DWORD PTR $T95273[esp+356], ecx
	mov	DWORD PTR $T95273[esp+360], edx
	mov	DWORD PTR $T95273[esp+364], eax
$LN191@MoveBird:
	fld	DWORD PTR $T95273[esp+356]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+356]
	fld	DWORD PTR $T95273[esp+360]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+360]
	faddp	ST(1), ST(0)
	fld	DWORD PTR $T95273[esp+364]
	fmul	DWORD PTR _NormalVectorToOtherBird$[esp+364]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv3389[esp+356]
	fld	DWORD PTR tv3389[esp+356]
	call	__CIacos
	fstp	DWORD PTR tv3382[esp+356]
	fld	DWORD PTR tv3382[esp+356]
	fld	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
	fsubr	QWORD PTR __real@400921fb60000000
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	$LN4@MoveBird
; Line 452
	fld	DWORD PTR _VectorToOtherBird$[esp+356]
	fld	QWORD PTR __real@3fc5555560000000
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95274[esp+356]
	fld	DWORD PTR _VectorToOtherBird$[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95274[esp+360]
	fmul	DWORD PTR _VectorToOtherBird$[esp+364]
	fstp	DWORD PTR $T95274[esp+364]
	fld	DWORD PTR $T95274[esp+356]
	fld	DWORD PTR ?AttractInf@@3MA		; AttractInf
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95275[esp+356]
	fld	DWORD PTR $T95274[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95275[esp+360]
	fmul	DWORD PTR $T95274[esp+364]
	fstp	DWORD PTR $T95275[esp+364]
	fld	DWORD PTR [edi]
	fsub	DWORD PTR $T95275[esp+356]
	fstp	DWORD PTR [edi]
	fld	DWORD PTR [edi+4]
	fsub	DWORD PTR $T95275[esp+360]
	fstp	DWORD PTR [edi+4]
	fld	DWORD PTR [edi+8]
	fsub	DWORD PTR $T95275[esp+364]
	fstp	DWORD PTR [edi+8]
; Line 453
	mov	ecx, DWORD PTR _YELLOW
	mov	edx, DWORD PTR _YELLOW+4
	mov	eax, DWORD PTR _YELLOW+8
	mov	DWORD PTR _tempCol$91275[esp+356], ecx
	mov	ecx, DWORD PTR _YELLOW+12
	mov	DWORD PTR _tempCol$91275[esp+360], edx
	mov	DWORD PTR _tempCol$91275[esp+364], eax
	mov	DWORD PTR _tempCol$91275[esp+368], ecx
; Line 455
	jmp	$LN2@MoveBird
$LN4@MoveBird:
; Line 459
	mov	edx, DWORD PTR _BLUE
	mov	eax, DWORD PTR _BLUE+4
	mov	ecx, DWORD PTR _BLUE+8
	mov	DWORD PTR _tempCol$91275[esp+356], edx
	mov	edx, DWORD PTR _BLUE+12
	mov	DWORD PTR _tempCol$91275[esp+360], eax
	mov	DWORD PTR _tempCol$91275[esp+364], ecx
	mov	DWORD PTR _tempCol$91275[esp+368], edx
; Line 462
	jmp	$LN2@MoveBird
$LN5@MoveBird:
; Line 465
	fld	DWORD PTR _VectorToOtherBird$[esp+356]
	fld	QWORD PTR __real@3fc5555560000000
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95276[esp+356]
	fld	DWORD PTR _VectorToOtherBird$[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95276[esp+360]
	fmul	DWORD PTR _VectorToOtherBird$[esp+364]
	fstp	DWORD PTR $T95276[esp+364]
	fld	DWORD PTR $T95276[esp+356]
	fld	DWORD PTR ?AttractInf@@3MA		; AttractInf
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR $T95277[esp+356]
	fld	DWORD PTR $T95276[esp+360]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR $T95277[esp+360]
	fmul	DWORD PTR $T95276[esp+364]
	fstp	DWORD PTR $T95277[esp+364]
	fld	DWORD PTR $T95277[esp+356]
	fadd	DWORD PTR [edi]
	fstp	DWORD PTR [edi]
	fld	DWORD PTR [edi+4]
	fadd	DWORD PTR $T95277[esp+360]
	fstp	DWORD PTR [edi+4]
	fld	DWORD PTR $T95277[esp+364]
	fadd	DWORD PTR [edi+8]
	fstp	DWORD PTR [edi+8]
; Line 466
	mov	eax, DWORD PTR _GREEN
	mov	ecx, DWORD PTR _GREEN+4
	mov	edx, DWORD PTR _GREEN+8
	mov	DWORD PTR _tempCol$91275[esp+356], eax
	mov	eax, DWORD PTR _GREEN+12
	mov	DWORD PTR _tempCol$91275[esp+360], ecx
	mov	DWORD PTR _tempCol$91275[esp+364], edx
	mov	DWORD PTR _tempCol$91275[esp+368], eax
$LN2@MoveBird:
; Line 470
	cmp	BYTE PTR ?EnvTog@@3TshareCB@@A, 0	; EnvTog
	je	$LN259@MoveBird
	fld	DWORD PTR _tempCol$91275[esp+356]
	fld	DWORD PTR _CYAN
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN231@MoveBird
	fld	DWORD PTR _tempCol$91275[esp+360]
	fld	DWORD PTR _CYAN+4
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN231@MoveBird
	fld	DWORD PTR _tempCol$91275[esp+364]
	fld	DWORD PTR _CYAN+8
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN231@MoveBird
	fld	DWORD PTR _tempCol$91275[esp+368]
	fld	DWORD PTR _CYAN+12
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	$LN259@MoveBird
$LN231@MoveBird:
; Line 472
	fldz
	lea	ecx, DWORD PTR [edi+36]
	push	ecx
	fst	DWORD PTR $T95793[esp+360]
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	fst	DWORD PTR $T95793[esp+368]
	push	OFFSET ?proj@@3UD3DXMATRIX@@A		; proj
	fstp	DWORD PTR $T95793[esp+376]
	push	OFFSET ?vp@@3U_D3DVIEWPORT9@@A		; vp
	lea	edx, DWORD PTR $T95793[esp+372]
	lea	eax, DWORD PTR [edi+100]
	push	edx
	push	eax
	call	_D3DXVec3Project@24
; Line 473
	fldz
	lea	ecx, DWORD PTR [ebx+36]
	fst	DWORD PTR $T95803[esp+356]
	push	ecx
	fst	DWORD PTR $T95803[esp+364]
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	fstp	DWORD PTR $T95803[esp+372]
	push	OFFSET ?proj@@3UD3DXMATRIX@@A		; proj
	push	OFFSET ?vp@@3U_D3DVIEWPORT9@@A		; vp
	lea	edx, DWORD PTR $T95803[esp+372]
	lea	eax, DWORD PTR [ebx+100]
	push	edx
	push	eax
	call	_D3DXVec3Project@24
; Line 474
	fld1
	fld	DWORD PTR _tempCol$91275[esp+356]
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN245@MoveBird
	fstp	ST(0)
	mov	DWORD PTR _dwR$95825[esp+356], 255	; 000000ffH
	fld	QWORD PTR __real@3fe0000000000000
	fldz
	fld	QWORD PTR __real@406fe00000000000
	jmp	SHORT $LN244@MoveBird
$LN245@MoveBird:
	fldz
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN243@MoveBird
	fstp	ST(1)
	mov	DWORD PTR _dwR$95825[esp+356], 0
	fld	QWORD PTR __real@3fe0000000000000
	fld	QWORD PTR __real@406fe00000000000
	fxch	ST(1)
	fxch	ST(2)
	fxch	ST(1)
$LN244@MoveBird:
	fld	DWORD PTR _tempCol$91275[esp+360]
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN249@MoveBird
	fstp	ST(0)
	mov	DWORD PTR _dwG$95826[esp+356], 255	; 000000ffH
	jmp	SHORT $LN248@MoveBird
$LN243@MoveBird:
	fld	QWORD PTR __real@406fe00000000000
	fnstcw	WORD PTR tv3306[esp+356]
	movzx	eax, WORD PTR tv3306[esp+356]
	fmul	ST(2), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv3303[esp+356], eax
	fadd	ST(3), ST(0)
	fldcw	WORD PTR tv3303[esp+356]
	fxch	ST(3)
	fistp	QWORD PTR tv3301[esp+356]
	mov	eax, DWORD PTR tv3301[esp+356]
	mov	DWORD PTR _dwR$95825[esp+356], eax
	fldcw	WORD PTR tv3306[esp+356]
	jmp	SHORT $LN244@MoveBird
$LN249@MoveBird:
	fcom	ST(2)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN247@MoveBird
	fstp	ST(0)
	mov	DWORD PTR _dwG$95826[esp+356], 0
	jmp	SHORT $LN248@MoveBird
$LN247@MoveBird:
	fnstcw	WORD PTR tv3291[esp+356]
	movzx	eax, WORD PTR tv3291[esp+356]
	fmul	ST(0), ST(1)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv3288[esp+356], eax
	fadd	ST(0), ST(3)
	fldcw	WORD PTR tv3288[esp+356]
	fistp	QWORD PTR tv3286[esp+356]
	mov	ecx, DWORD PTR tv3286[esp+356]
	mov	DWORD PTR _dwG$95826[esp+356], ecx
	fldcw	WORD PTR tv3291[esp+356]
$LN248@MoveBird:
	fld	DWORD PTR _tempCol$91275[esp+364]
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN253@MoveBird
	fstp	ST(0)
	mov	ebp, 255				; 000000ffH
	jmp	SHORT $LN252@MoveBird
$LN253@MoveBird:
	fcom	ST(2)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN251@MoveBird
	fstp	ST(0)
	xor	ebp, ebp
	jmp	SHORT $LN252@MoveBird
$LN251@MoveBird:
	fnstcw	WORD PTR tv3276[esp+356]
	movzx	eax, WORD PTR tv3276[esp+356]
	fmul	ST(0), ST(1)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv3272[esp+356], eax
	fadd	ST(0), ST(3)
	fldcw	WORD PTR tv3272[esp+356]
	fistp	QWORD PTR tv3269[esp+356]
	mov	ebp, DWORD PTR tv3269[esp+356]
	fldcw	WORD PTR tv3276[esp+356]
$LN252@MoveBird:
	fld	DWORD PTR _tempCol$91275[esp+368]
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN257@MoveBird
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(0)
	jmp	SHORT $LN256@MoveBird
$LN257@MoveBird:
	fcom	ST(2)
	fnstsw	ax
	fstp	ST(2)
	test	ah, 65					; 00000041H
	jp	SHORT $LN255@MoveBird
	fstp	ST(1)
	xor	esi, esi
	fstp	ST(0)
	jmp	SHORT $LN256@MoveBird
$LN255@MoveBird:
	fnstcw	WORD PTR tv3259[esp+356]
	movzx	eax, WORD PTR tv3259[esp+356]
	fmulp	ST(1), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv3256[esp+356], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv3256[esp+356]
	fistp	QWORD PTR tv3254[esp+356]
	mov	esi, DWORD PTR tv3254[esp+356]
	fldcw	WORD PTR tv3259[esp+356]
$LN256@MoveBird:
	fld	DWORD PTR [edi+100]
	mov	eax, DWORD PTR ?Line@@3PAUID3DXLine@@A	; Line
	fstp	DWORD PTR $T95872[esp+356]
	push	ecx
	fld	DWORD PTR [edi+104]
	fstp	DWORD PTR $T95871[esp+360]
	fld	DWORD PTR [ebx+100]
	fstp	DWORD PTR $T95870[esp+360]
	fld	DWORD PTR [ebx+104]
	fstp	DWORD PTR $T95869[esp+360]
	fld	DWORD PTR $T95872[esp+360]
	fst	DWORD PTR _L$95860[esp+360]
	fld	DWORD PTR $T95871[esp+360]
	fst	DWORD PTR _L$95860[esp+364]
	fld	DWORD PTR $T95870[esp+360]
	fsub	ST(0), ST(2)
	fmul	ST(0), ST(3)
	faddp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR _L$95860[esp+368]
	fld	DWORD PTR $T95869[esp+360]
	fsub	ST(0), ST(1)
	fmulp	ST(2), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR _L$95860[esp+372]
	mov	edx, DWORD PTR [eax]
	fstp	DWORD PTR [esp]
	push	eax
	mov	eax, DWORD PTR [edx+44]
	call	eax
	mov	eax, DWORD PTR ?Line@@3PAUID3DXLine@@A	; Line
	mov	ecx, DWORD PTR [eax]
	shl	esi, 8
	or	esi, DWORD PTR _dwR$95825[esp+356]
	lea	edx, DWORD PTR _L$95860[esp+356]
	shl	esi, 8
	or	esi, DWORD PTR _dwG$95826[esp+356]
	shl	esi, 8
	or	esi, ebp
	push	esi
	push	2
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+20]
	call	eax
$LN259@MoveBird:
; Line 476
	mov	eax, DWORD PTR _cnt$[esp+356]
	inc	eax
	cmp	eax, DWORD PTR _Stackcnt$[esp+356]
	mov	DWORD PTR _cnt$[esp+356], eax
	jl	$LN9@MoveBird
$LN8@MoveBird:
; Line 478
	fld	DWORD PTR [edi]
; Line 480
	mov	eax, edi
	fld	DWORD PTR ?timeDelta@@3MA		; timeDelta
	fld	ST(0)
	fmulp	ST(2), ST(0)
	fxch	ST(1)
	fstp	DWORD PTR [edi]
	fld	DWORD PTR [edi+4]
	fmul	ST(0), ST(1)
	fstp	DWORD PTR [edi+4]
	fmul	DWORD PTR [edi+8]
	fstp	DWORD PTR [edi+8]
	call	?Animate@Mob@@QAEXM@Z			; Mob::Animate
; Line 481
	call	?CapVel@Mob@@QAEXM@Z			; Mob::CapVel
; Line 482
	mov	eax, edi
	call	?CollarVel@Mob@@QAEXM@Z			; Mob::CollarVel
; Line 483
	call	?GetTransform@Mob@@QAEPAUD3DXMATRIX@@XZ	; Mob::GetTransform
; Line 484
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	add	esp, 340				; 00000154H
	ret	0
?MoveBird@@YAXPAVMob@@@Z ENDP				; MoveBird
_TEXT	ENDS
PUBLIC	__real@41200000
PUBLIC	__real@3e99999a
PUBLIC	__real@4082c00000000000
PUBLIC	__real@401921fb60000000
PUBLIC	__real@3f747ae140000000
PUBLIC	__real@3f50624de0000000
PUBLIC	__real@4f800000
PUBLIC	__$ArrayPad$
PUBLIC	?Display@@YA_NM@Z				; Display
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@41200000
; File g:\program files\microsoft directx sdk (march 2009)\include\d3dx9math.inl
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@4082c00000000000
CONST	SEGMENT
__real@4082c00000000000 DQ 04082c00000000000r	; 600
CONST	ENDS
;	COMDAT __real@401921fb60000000
CONST	SEGMENT
__real@401921fb60000000 DQ 0401921fb60000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@3f747ae140000000
CONST	SEGMENT
__real@3f747ae140000000 DQ 03f747ae140000000r	; 0.005
CONST	ENDS
;	COMDAT __real@3f50624de0000000
CONST	SEGMENT
__real@3f50624de0000000 DQ 03f50624de0000000r	; 0.001
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Display@@YA_NM@Z
_TEXT	SEGMENT
tv1521 = -72						; size = 4
tv1512 = -72						; size = 4
tv1486 = -72						; size = 2
tv1471 = -72						; size = 2
tv1456 = -72						; size = 2
tv1441 = -72						; size = 2
tv1314 = -72						; size = 2
tv1296 = -72						; size = 2
tv1280 = -72						; size = 2
tv1265 = -72						; size = 2
tv1247 = -72						; size = 2
tv1232 = -72						; size = 2
tv1217 = -72						; size = 2
tv1202 = -72						; size = 2
tv1184 = -72						; size = 2
tv1077 = -72						; size = 2
tv1062 = -72						; size = 2
tv1045 = -72						; size = 2
tv978 = -72						; size = 2
tv961 = -72						; size = 2
tv942 = -72						; size = 2
tv925 = -72						; size = 2
tv1546 = -68						; size = 4
tv1483 = -68						; size = 4
tv1481 = -68						; size = 8
tv1468 = -68						; size = 4
tv1466 = -68						; size = 8
tv1453 = -68						; size = 4
tv1451 = -68						; size = 8
tv1438 = -68						; size = 4
tv1436 = -68						; size = 8
tv1421 = -68						; size = 4
tv1414 = -68						; size = 4
tv1311 = -68						; size = 4
tv1308 = -68						; size = 8
tv1292 = -68						; size = 4
tv1290 = -68						; size = 8
tv1277 = -68						; size = 4
tv1275 = -68						; size = 8
tv1262 = -68						; size = 4
tv1260 = -68						; size = 8
tv1244 = -68						; size = 4
tv1242 = -68						; size = 8
tv1229 = -68						; size = 4
tv1227 = -68						; size = 8
tv1214 = -68						; size = 4
tv1212 = -68						; size = 8
tv1199 = -68						; size = 4
tv1197 = -68						; size = 8
tv1121 = -68						; size = 4
tv1087 = -68						; size = 8
tv1074 = -68						; size = 4
tv1072 = -68						; size = 8
tv1058 = -68						; size = 4
tv1056 = -68						; size = 8
tv1041 = -68						; size = 4
tv1039 = -68						; size = 8
tv1024 = -68						; size = 4
tv1019 = -68						; size = 4
tv975 = -68						; size = 4
tv972 = -68						; size = 8
tv956 = -68						; size = 4
tv954 = -68						; size = 8
tv939 = -68						; size = 4
tv937 = -68						; size = 8
tv922 = -68						; size = 4
tv920 = -68						; size = 8
$T96041 = -68						; size = 12
_centre$91183 = -68					; size = 12
_up$91175 = -68						; size = 12
_rect$91199 = -48					; size = 16
_up$91182 = -48						; size = 12
$T96040 = -48						; size = 12
_currTime$91168 = -32					; size = 4
$T96148 = -28						; size = 12
_rect$91227 = -28					; size = 16
_rect$91225 = -28					; size = 16
_temp$91214 = -28					; size = 20
_rect$91207 = -28					; size = 16
_TempPos$91181 = -28					; size = 12
__$ArrayPad$ = -8					; size = 4
?Display@@YA_NM@Z PROC					; Display, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 151
	sub	esp, 76					; 0000004cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+76], eax
; Line 154
	cmp	BYTE PTR ?PauseTog@@3TshareCB@@A, 0	; PauseTog
	push	ebx
	push	ebp
	push	esi
	push	edi
	jne	$LN27@Display
; Line 156
	call	DWORD PTR __imp__timeGetTime@0
	mov	DWORD PTR tv1546[esp+92], eax
	fild	DWORD PTR tv1546[esp+92]
	test	eax, eax
	jge	SHORT $LN330@Display
	fadd	DWORD PTR __real@4f800000
$LN330@Display:
	fstp	DWORD PTR _currTime$91168[esp+92]
; Line 157
	fld	DWORD PTR _currTime$91168[esp+92]
	fsub	DWORD PTR ?lastTime@@3MA		; lastTime
	fmul	QWORD PTR __real@3f50624de0000000
	fstp	DWORD PTR ?timeDelta@@3MA		; timeDelta
; Line 161
	fld1
	fcom	DWORD PTR ?timeDelta@@3MA		; timeDelta
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN23@Display
; Line 162
	fst	DWORD PTR ?timeDelta@@3MA		; timeDelta
$LN23@Display:
; Line 169
	cmp	BYTE PTR ?BeABirdTog@@3TshareCB@@A, 0	; BeABirdTog
	fldz
	je	SHORT $LN167@Display
; Line 171
	fst	DWORD PTR _up$91175[esp+92]
; Line 172
	lea	eax, DWORD PTR _up$91175[esp+92]
	fstp	DWORD PTR _up$91175[esp+100]
	push	eax
	lea	ecx, DWORD PTR $T96040[esp+96]
	fstp	DWORD PTR _up$91175[esp+100]
	push	ecx
	fld	DWORD PTR ?Bird@@3PAVMob@@A+204
	push	OFFSET ?Bird@@3PAVMob@@A+216
	fadd	DWORD PTR ?Bird@@3PAVMob@@A+216
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	fstp	DWORD PTR $T96040[esp+108]
	fld	DWORD PTR ?Bird@@3PAVMob@@A+220
	fadd	DWORD PTR ?Bird@@3PAVMob@@A+208
	fstp	DWORD PTR $T96040[esp+112]
	fld	DWORD PTR ?Bird@@3PAVMob@@A+224
	fadd	DWORD PTR ?Bird@@3PAVMob@@A+212
	fstp	DWORD PTR $T96040[esp+116]
	call	_D3DXMatrixLookAtLH@16
; Line 174
	jmp	$LN18@Display
$LN167@Display:
; Line 176
	cmp	BYTE PTR ?CameraCircleTog@@3TshareCB@@A, 0 ; CameraCircleTog
	fstp	ST(1)
	je	$LN170@Display
; Line 178
	fld	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	fadd	QWORD PTR __real@3f747ae140000000
	fstp	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
; Line 179
	fld	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	fcomp	QWORD PTR __real@401921fb60000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN173@Display
; Line 180
	fstp	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	jmp	SHORT $LN19@Display
$LN173@Display:
	fstp	ST(0)
$LN19@Display:
; Line 181
	fld	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	call	__CIsin
	fstp	DWORD PTR tv1521[esp+92]
	fld	DWORD PTR tv1521[esp+92]
	fchs
	fmul	QWORD PTR __real@4082c00000000000
	fstp	DWORD PTR _TempPos$91181[esp+92]
	fld	DWORD PTR ?CameraCircle@?4??Display@@YA_NM@Z@4MA
	call	__CIcos
	fstp	DWORD PTR tv1512[esp+92]
	fld	DWORD PTR tv1512[esp+92]
; Line 184
	lea	edx, DWORD PTR _up$91182[esp+92]
	fmul	QWORD PTR __real@4082c00000000000
	push	edx
	lea	eax, DWORD PTR _centre$91183[esp+96]
	push	eax
	fstp	DWORD PTR _TempPos$91181[esp+104]
	lea	ecx, DWORD PTR _TempPos$91181[esp+100]
	fldz
	push	ecx
	fst	DWORD PTR _TempPos$91181[esp+112]
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	fst	DWORD PTR _up$91182[esp+108]
	fst	DWORD PTR _up$91182[esp+112]
	fld	DWORD PTR __real@bf800000
	fstp	DWORD PTR _up$91182[esp+116]
	fst	DWORD PTR _centre$91183[esp+108]
	fld1
	fstp	DWORD PTR _centre$91183[esp+112]
	fstp	DWORD PTR _centre$91183[esp+116]
	call	_D3DXMatrixLookAtLH@16
; Line 186
	jmp	SHORT $LN18@Display
$LN170@Display:
; Line 176
	fstp	ST(0)
; Line 187
	call	?getViewMatrix@Camera@@QAEXPAUD3DXMATRIX@@@Z ; Camera::getViewMatrix
$LN18@Display:
; Line 190
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	edx, DWORD PTR [eax]
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	push	2
	push	eax
	mov	eax, DWORD PTR [edx+176]
	call	eax
; Line 191
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+192]
	push	OFFSET ?vp@@3U_D3DVIEWPORT9@@A		; vp
	push	eax
	call	edx
; Line 195
	fld1
	fld	DWORD PTR _BLACK
	fcom	ST(1)
	fnstsw	ax
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	test	ah, 1
	jne	SHORT $LN55@Display
	fstp	ST(2)
	mov	edi, 255				; 000000ffH
	fldz
	jmp	SHORT $LN54@Display
$LN55@Display:
	fldz
	fcom	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN53@Display
	fstp	ST(3)
	xor	edi, edi
	jmp	SHORT $LN204@Display
$LN53@Display:
	fnstcw	WORD PTR tv1486[esp+92]
	movzx	eax, WORD PTR tv1486[esp+92]
	fxch	ST(3)
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1483[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1483[esp+92]
	fistp	QWORD PTR tv1481[esp+92]
	mov	edi, DWORD PTR tv1481[esp+92]
	fldcw	WORD PTR tv1486[esp+92]
$LN204@Display:
	fxch	ST(2)
$LN54@Display:
	fld	DWORD PTR _BLACK+4
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN59@Display
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN58@Display
$LN59@Display:
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN57@Display
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN58@Display
$LN57@Display:
	fnstcw	WORD PTR tv1471[esp+92]
	movzx	eax, WORD PTR tv1471[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1468[esp+92], eax
	fadd	ST(0), ST(3)
	fldcw	WORD PTR tv1468[esp+92]
	fistp	QWORD PTR tv1466[esp+92]
	mov	esi, DWORD PTR tv1466[esp+92]
	fldcw	WORD PTR tv1471[esp+92]
$LN58@Display:
	fld	DWORD PTR _BLACK+8
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN63@Display
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN62@Display
$LN63@Display:
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN61@Display
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN62@Display
$LN61@Display:
	fnstcw	WORD PTR tv1456[esp+92]
	movzx	eax, WORD PTR tv1456[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1453[esp+92], eax
	fadd	ST(0), ST(3)
	fldcw	WORD PTR tv1453[esp+92]
	fistp	QWORD PTR tv1451[esp+92]
	mov	edx, DWORD PTR tv1451[esp+92]
	fldcw	WORD PTR tv1456[esp+92]
$LN62@Display:
	fld	DWORD PTR _BLACK+12
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN67@Display
	fstp	ST(0)
	mov	eax, 255				; 000000ffH
	fstp	ST(1)
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN66@Display
$LN67@Display:
	fcom	ST(1)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 65					; 00000041H
	jp	SHORT $LN65@Display
	fstp	ST(0)
	xor	eax, eax
	fstp	ST(0)
	fstp	ST(0)
	jmp	SHORT $LN66@Display
$LN65@Display:
	fnstcw	WORD PTR tv1441[esp+92]
	movzx	eax, WORD PTR tv1441[esp+92]
	fmulp	ST(1), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1438[esp+92], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv1438[esp+92]
	fistp	QWORD PTR tv1436[esp+92]
	mov	eax, DWORD PTR tv1436[esp+92]
	fldcw	WORD PTR tv1441[esp+92]
$LN66@Display:
	mov	ecx, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ebx, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	push	0
	push	ecx
	or	eax, esi
	fstp	DWORD PTR [esp]
	shl	eax, 8
	or	eax, edx
	push	eax
	mov	eax, DWORD PTR [ebx+172]
	push	3
	push	0
	push	0
	push	ecx
	call	eax
; Line 196
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	0
	push	27					; 0000001bH
	push	eax
	call	edx
; Line 197
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+164]
	push	eax
	call	edx
; Line 198
	xor	ebx, ebx
; Line 201
	cmp	DWORD PTR ?BirdsCount@@3HA, ebx		; BirdsCount
	mov	esi, OFFSET ?Bird@@3PAVMob@@A		; Bird
	jl	$LN153@Display
$LN17@Display:
; Line 203
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+176]
	lea	ebp, DWORD PTR [esi+36]
	push	ebp
	push	256					; 00000100H
	push	eax
	call	edx
; Line 204
	fld	DWORD PTR [esi+28]
	fld	DWORD PTR [esi+24]
	fld	DWORD PTR [esi+32]
	fld	ST(1)
	fmulp	ST(2), ST(0)
	fld	ST(2)
	fmulp	ST(3), ST(0)
	fxch	ST(1)
	faddp	ST(2), ST(0)
	fmul	ST(0), ST(0)
	faddp	ST(1), ST(0)
	fstp	DWORD PTR tv1421[esp+92]
	fld	DWORD PTR tv1421[esp+92]
	call	__CIsqrt
	fstp	DWORD PTR tv1414[esp+92]
	fld	DWORD PTR tv1414[esp+92]
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	fcompp
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN15@Display
	cmp	BYTE PTR ?EnvTog@@3TshareCB@@A, 0	; EnvTog
	je	SHORT $LN15@Display
; Line 205
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+196]
	push	OFFSET _RED_MTRL
	push	eax
	call	edx
; Line 206
	jmp	SHORT $LN14@Display
$LN15@Display:
; Line 208
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	lea	edx, DWORD PTR [esi+112]
	push	edx
	push	eax
	mov	eax, DWORD PTR [ecx+196]
	call	eax
$LN14@Display:
; Line 210
	mov	eax, DWORD PTR ?Cylinder@@3PAUID3DXMesh@@A ; Cylinder
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	0
	push	eax
	call	edx
; Line 212
	cmp	BYTE PTR ?NumberTog@@3TshareCB@@A, 0	; NumberTog
	je	$LN13@Display
; Line 214
	fldz
	push	ebp
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	fst	DWORD PTR $T96148[esp+100]
	push	OFFSET ?proj@@3UD3DXMATRIX@@A		; proj
	fst	DWORD PTR $T96148[esp+108]
	push	OFFSET ?vp@@3U_D3DVIEWPORT9@@A		; vp
	fstp	DWORD PTR $T96148[esp+116]
	lea	eax, DWORD PTR $T96148[esp+108]
	push	eax
	lea	edi, DWORD PTR [esi+100]
	push	edi
	call	_D3DXVec3Project@24
; Line 215
	xor	eax, eax
; Line 216
	push	ebx
	push	OFFSET ??_C@_02GMHACPFF@?$CFu?$AA@
	mov	edx, OFFSET ?MobString@@3PADA		; MobString
	mov	DWORD PTR ?MobString@@3PADA, eax
	mov	DWORD PTR ?MobString@@3PADA+4, eax
	mov	BYTE PTR ?MobString@@3PADA+8, al
	call	??$sprintf_s@$08@@YAHAAY08DPBDZZ	; sprintf_s<9>
; Line 217
	fld	DWORD PTR [edi]
	add	esp, 8
	call	__ftol2_sse
	fld	DWORD PTR [esi+104]
	mov	DWORD PTR _rect$91199[esp+92], eax
	call	__ftol2_sse
; Line 218
	push	-1
	push	0
	lea	edx, DWORD PTR _rect$91199[esp+100]
	push	edx
	push	-1
	mov	DWORD PTR _rect$91199[esp+112], eax
	mov	eax, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	push	OFFSET ?MobString@@3PADA		; MobString
	mov	DWORD PTR _rect$91199[esp+120], 1024	; 00000400H
	mov	DWORD PTR _rect$91199[esp+124], 768	; 00000300H
	mov	ecx, DWORD PTR [eax]
	push	0
	push	eax
	mov	eax, DWORD PTR [ecx+56]
	call	eax
$LN13@Display:
; Line 223
	mov	esi, DWORD PTR [esi+180]
	inc	ebx
; Line 224
	test	esi, esi
	je	SHORT $LN153@Display
; Line 201
	cmp	ebx, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	jle	$LN17@Display
$LN153@Display:
; Line 230
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+176]
	push	OFFSET ?Bird@@3PAVMob@@A+36
	push	256					; 00000100H
	push	eax
	call	edx
; Line 231
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+196]
	push	OFFSET ?Bird@@3PAVMob@@A+112
	push	eax
	call	edx
; Line 232
	mov	eax, DWORD PTR ?Cylinder@@3PAUID3DXMesh@@A ; Cylinder
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	push	0
	push	eax
	call	edx
; Line 236
	cmp	BYTE PTR ?EnvTog@@3TshareCB@@A, 0	; EnvTog
	je	$LN11@Display
; Line 239
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	1
	push	27					; 0000001bH
	push	eax
	call	edx
; Line 240
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	5
	push	19					; 00000013H
	push	eax
	call	edx
; Line 241
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	6
	push	20					; 00000014H
	push	eax
	call	edx
; Line 242
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	0
	push	7
	push	eax
	call	edx
; Line 243
	fldz
	mov	ebx, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	fst	DWORD PTR $T96041[esp+92]
	fst	DWORD PTR $T96041[esp+96]
	sub	esp, 68					; 00000044H
	mov	edx, DWORD PTR $T96041[esp+164]
	fstp	DWORD PTR $T96041[esp+168]
	fld	DWORD PTR __real@3e99999a
	mov	edi, esp
	sub	esp, 20					; 00000014H
	mov	ecx, 17					; 00000011H
	mov	esi, OFFSET _BLUE_MTRL
	rep movsd
	fstp	DWORD PTR [esp+16]
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	fstp	DWORD PTR [esp+12]
	mov	ecx, DWORD PTR $T96041[esp+180]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR $T96041[esp+188]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	call	?DrawSphere@d3d@@YA_NPAUIDirect3DDevice9@@UD3DXVECTOR3@@MMU_D3DMATERIAL9@@@Z ; d3d::DrawSphere
; Line 244
	mov	edx, DWORD PTR ?Bird@@3PAVMob@@A+216
	fld	DWORD PTR __real@3e99999a
	mov	ebx, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	add	esp, 20					; 00000014H
	mov	edi, esp
	sub	esp, 20					; 00000014H
	mov	ecx, 17					; 00000011H
	mov	esi, OFFSET _GREEN_MTRL
	rep movsd
	fstp	DWORD PTR [esp+16]
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fstp	DWORD PTR [esp+12]
	mov	ecx, DWORD PTR ?Bird@@3PAVMob@@A+220
	mov	eax, esp
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR ?Bird@@3PAVMob@@A+224
	mov	DWORD PTR [eax+4], ecx
	mov	DWORD PTR [eax+8], edx
	call	?DrawSphere@d3d@@YA_NPAUIDirect3DDevice9@@UD3DXVECTOR3@@MMU_D3DMATERIAL9@@@Z ; d3d::DrawSphere
; Line 245
	add	esp, 20					; 00000014H
	fld	DWORD PTR __real@3e99999a
	mov	edi, esp
	sub	esp, 20					; 00000014H
	mov	ecx, 17					; 00000011H
	mov	esi, OFFSET _RED_MTRL
	rep movsd
	fstp	DWORD PTR [esp+16]
	fld	DWORD PTR ?CollDist@@3MA		; CollDist
	fstp	DWORD PTR [esp+12]
	mov	eax, esp
	mov	ecx, DWORD PTR ?Bird@@3PAVMob@@A+216
	mov	edx, DWORD PTR ?Bird@@3PAVMob@@A+220
	mov	ebx, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR ?Bird@@3PAVMob@@A+224
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], ecx
	call	?DrawSphere@d3d@@YA_NPAUIDirect3DDevice9@@UD3DXVECTOR3@@MMU_D3DMATERIAL9@@@Z ; d3d::DrawSphere
; Line 246
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	edx, DWORD PTR [eax]
	add	esp, 88					; 00000058H
	push	0
	push	27					; 0000001bH
	push	eax
	mov	eax, DWORD PTR [edx+228]
	call	eax
; Line 247
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	1
	push	7
	push	eax
	call	edx
$LN11@Display:
; Line 250
	cmp	BYTE PTR ?HelpTog@@3TshareCB@@A, 0	; HelpTog
	je	$LN10@Display
; Line 253
	fld1
	xor	edi, edi
	fld	DWORD PTR _WHITE
	mov	DWORD PTR _rect$91207[esp+92], edi
	fcom	ST(1)
	mov	DWORD PTR _rect$91207[esp+96], 25	; 00000019H
	mov	DWORD PTR _rect$91207[esp+100], 1024	; 00000400H
	mov	DWORD PTR _rect$91207[esp+104], 768	; 00000300H
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN83@Display
	fstp	ST(0)
	mov	edi, 255				; 000000ffH
	fldz
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN82@Display
$LN83@Display:
	fldz
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN81@Display
	fstp	ST(1)
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN82@Display
$LN81@Display:
	fld	QWORD PTR __real@406fe00000000000
	fmul	ST(2), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	fnstcw	WORD PTR tv1314[esp+92]
	movzx	eax, WORD PTR tv1314[esp+92]
	fadd	ST(3), ST(0)
	or	eax, 3072				; 00000c00H
	fxch	ST(3)
	mov	DWORD PTR tv1311[esp+92], eax
	fldcw	WORD PTR tv1311[esp+92]
	fistp	QWORD PTR tv1308[esp+92]
	mov	edi, DWORD PTR tv1308[esp+92]
	fldcw	WORD PTR tv1314[esp+92]
	fxch	ST(1)
	fxch	ST(2)
$LN82@Display:
	fld	DWORD PTR _WHITE+4
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN87@Display
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN86@Display
$LN87@Display:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN85@Display
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN86@Display
$LN85@Display:
	fnstcw	WORD PTR tv1296[esp+92]
	movzx	eax, WORD PTR tv1296[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1292[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1292[esp+92]
	fistp	QWORD PTR tv1290[esp+92]
	mov	esi, DWORD PTR tv1290[esp+92]
	fldcw	WORD PTR tv1296[esp+92]
$LN86@Display:
	fld	DWORD PTR _WHITE+8
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN91@Display
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN90@Display
$LN91@Display:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN89@Display
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN90@Display
$LN89@Display:
	fnstcw	WORD PTR tv1280[esp+92]
	movzx	eax, WORD PTR tv1280[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1277[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1277[esp+92]
	fistp	QWORD PTR tv1275[esp+92]
	mov	edx, DWORD PTR tv1275[esp+92]
	fldcw	WORD PTR tv1280[esp+92]
$LN90@Display:
	fld	DWORD PTR _WHITE+12
	fcom	ST(4)
	fnstsw	ax
	fstp	ST(4)
	test	ah, 1
	jne	SHORT $LN95@Display
	fstp	ST(3)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN94@Display
$LN95@Display:
	fxch	ST(2)
	fcomp	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN93@Display
	fstp	ST(2)
	xor	eax, eax
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN94@Display
$LN93@Display:
	fnstcw	WORD PTR tv1265[esp+92]
	movzx	eax, WORD PTR tv1265[esp+92]
	fmulp	ST(2), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1262[esp+92], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv1262[esp+92]
	fistp	QWORD PTR tv1260[esp+92]
	mov	eax, DWORD PTR tv1260[esp+92]
	fldcw	WORD PTR tv1265[esp+92]
$LN94@Display:
	mov	ecx, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ebx, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	or	eax, edx
	push	eax
	push	0
	lea	eax, DWORD PTR _rect$91207[esp+100]
	push	eax
	push	-1
	push	OFFSET _HelpStr1
	push	0
	push	ecx
	mov	ecx, DWORD PTR [ebx+56]
	call	ecx
; Line 255
	fld1
	fld	DWORD PTR _WHITE
	mov	DWORD PTR _rect$91207[esp+96], 127	; 0000007fH
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN101@Display
	fstp	ST(0)
	mov	edi, 255				; 000000ffH
	fldz
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN100@Display
$LN101@Display:
	fldz
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN99@Display
	fstp	ST(1)
	xor	edi, edi
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN100@Display
$LN99@Display:
	fld	QWORD PTR __real@406fe00000000000
	fmul	ST(2), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	fnstcw	WORD PTR tv1247[esp+92]
	movzx	eax, WORD PTR tv1247[esp+92]
	fadd	ST(3), ST(0)
	or	eax, 3072				; 00000c00H
	fxch	ST(3)
	mov	DWORD PTR tv1244[esp+92], eax
	fldcw	WORD PTR tv1244[esp+92]
	fistp	QWORD PTR tv1242[esp+92]
	mov	edi, DWORD PTR tv1242[esp+92]
	fldcw	WORD PTR tv1247[esp+92]
	fxch	ST(1)
	fxch	ST(2)
$LN100@Display:
	fld	DWORD PTR _WHITE+4
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN105@Display
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN104@Display
$LN105@Display:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN103@Display
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN104@Display
$LN103@Display:
	fnstcw	WORD PTR tv1232[esp+92]
	movzx	eax, WORD PTR tv1232[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1229[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1229[esp+92]
	fistp	QWORD PTR tv1227[esp+92]
	mov	esi, DWORD PTR tv1227[esp+92]
	fldcw	WORD PTR tv1232[esp+92]
$LN104@Display:
	fld	DWORD PTR _WHITE+8
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN109@Display
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN108@Display
$LN109@Display:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN107@Display
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN108@Display
$LN107@Display:
	fnstcw	WORD PTR tv1217[esp+92]
	movzx	eax, WORD PTR tv1217[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1214[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1214[esp+92]
	fistp	QWORD PTR tv1212[esp+92]
	mov	edx, DWORD PTR tv1212[esp+92]
	fldcw	WORD PTR tv1217[esp+92]
$LN108@Display:
	fld	DWORD PTR _WHITE+12
	fcom	ST(4)
	fnstsw	ax
	fstp	ST(4)
	test	ah, 1
	jne	SHORT $LN113@Display
	fstp	ST(3)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN112@Display
$LN113@Display:
	fxch	ST(2)
	fcomp	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN111@Display
	fstp	ST(2)
	xor	eax, eax
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN112@Display
$LN111@Display:
	fnstcw	WORD PTR tv1202[esp+92]
	movzx	eax, WORD PTR tv1202[esp+92]
	fmulp	ST(2), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1199[esp+92], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv1199[esp+92]
	fistp	QWORD PTR tv1197[esp+92]
	mov	eax, DWORD PTR tv1197[esp+92]
	fldcw	WORD PTR tv1202[esp+92]
$LN112@Display:
	mov	ecx, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ebx, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	or	eax, edx
	push	eax
	mov	eax, DWORD PTR [ebx+56]
	push	0
	lea	edx, DWORD PTR _rect$91207[esp+100]
	push	edx
	push	-1
	push	OFFSET _HelpStr2
	push	0
	push	ecx
	call	eax
; Line 257
	fld1
	fld	DWORD PTR _WHITE
	mov	DWORD PTR _rect$91207[esp+96], 247	; 000000f7H
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN119@Display
	fstp	ST(0)
	mov	edi, 255				; 000000ffH
	fldz
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN118@Display
$LN119@Display:
	fldz
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN117@Display
	fstp	ST(1)
	xor	edi, edi
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN118@Display
$LN117@Display:
	fld	QWORD PTR __real@406fe00000000000
	fmul	ST(2), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	fnstcw	WORD PTR tv1184[esp+92]
	movzx	eax, WORD PTR tv1184[esp+92]
	fadd	ST(3), ST(0)
	or	eax, 3072				; 00000c00H
	fxch	ST(3)
	mov	DWORD PTR tv1121[esp+92], eax
	fldcw	WORD PTR tv1121[esp+92]
	fistp	QWORD PTR tv1087[esp+92]
	mov	edi, DWORD PTR tv1087[esp+92]
	fldcw	WORD PTR tv1184[esp+92]
	fxch	ST(1)
	fxch	ST(2)
$LN118@Display:
	fld	DWORD PTR _WHITE+4
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN123@Display
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN122@Display
$LN123@Display:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN121@Display
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN122@Display
$LN121@Display:
	fnstcw	WORD PTR tv1077[esp+92]
	movzx	eax, WORD PTR tv1077[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1074[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1074[esp+92]
	fistp	QWORD PTR tv1072[esp+92]
	mov	esi, DWORD PTR tv1072[esp+92]
	fldcw	WORD PTR tv1077[esp+92]
$LN122@Display:
	fld	DWORD PTR _WHITE+8
	fcom	ST(4)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN127@Display
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN126@Display
$LN127@Display:
	fcom	ST(3)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN125@Display
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN126@Display
$LN125@Display:
	fnstcw	WORD PTR tv1062[esp+92]
	movzx	eax, WORD PTR tv1062[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1058[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv1058[esp+92]
	fistp	QWORD PTR tv1056[esp+92]
	mov	edx, DWORD PTR tv1056[esp+92]
	fldcw	WORD PTR tv1062[esp+92]
$LN126@Display:
	fld	DWORD PTR _WHITE+12
	fcom	ST(4)
	fnstsw	ax
	fstp	ST(4)
	test	ah, 1
	jne	SHORT $LN131@Display
	fstp	ST(3)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN130@Display
$LN131@Display:
	fxch	ST(2)
	fcomp	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN129@Display
	fstp	ST(2)
	xor	eax, eax
	fstp	ST(1)
	fstp	ST(0)
	jmp	SHORT $LN130@Display
$LN129@Display:
	fnstcw	WORD PTR tv1045[esp+92]
	movzx	eax, WORD PTR tv1045[esp+92]
	fmulp	ST(2), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv1041[esp+92], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv1041[esp+92]
	fistp	QWORD PTR tv1039[esp+92]
	mov	eax, DWORD PTR tv1039[esp+92]
	fldcw	WORD PTR tv1045[esp+92]
$LN130@Display:
	mov	ecx, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ebx, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	or	eax, edx
	push	eax
	mov	eax, DWORD PTR [ebx+56]
	push	0
	lea	edx, DWORD PTR _rect$91207[esp+100]
	push	edx
	push	-1
	push	OFFSET _HelpStr3
	push	0
	push	ecx
	call	eax
$LN10@Display:
; Line 259
	cmp	BYTE PTR ?EnvNumTog@@3TshareCB@@A, 0	; EnvNumTog
	je	SHORT $LN9@Display
; Line 260
	call	?ShowEvVars@@YAXXZ			; ShowEvVars
$LN9@Display:
; Line 261
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+168]
	push	eax
	call	edx
; Line 270
	mov	eax, OFFSET ?Bird@@3PAVMob@@A		; Bird
	call	?MoveBird@@YAXPAVMob@@@Z		; MoveBird
; Line 271
	mov	esi, DWORD PTR ?Bird@@3PAVMob@@A+180
	xor	edi, edi
	cmp	esi, edi
	je	SHORT $LN154@Display
	npad	2
$LL8@Display:
; Line 270
	mov	eax, esi
	call	?MoveBird@@YAXPAVMob@@@Z		; MoveBird
; Line 271
	mov	esi, DWORD PTR [esi+180]
	cmp	esi, edi
	jne	SHORT $LL8@Display
$LN154@Display:
; Line 277
	mov	ecx, OFFSET ?Bird@@3PAVMob@@A		; Bird
	call	?DynamicSort@Mob@@SAPAV1@PAV1@H@Z	; Mob::DynamicSort
; Line 285
	fld	DWORD PTR ?TimeElapsed@@3MA		; TimeElapsed
	fadd	DWORD PTR ?timeDelta@@3MA		; timeDelta
	mov	ecx, DWORD PTR ?FrameCnt@@3KA		; FrameCnt
	mov	DWORD PTR ?BirdsLLTail@@3PAVMob@@A, eax	; BirdsLLTail
	mov	ebx, 1
	fstp	DWORD PTR ?TimeElapsed@@3MA		; TimeElapsed
	add	ecx, ebx
; Line 287
	fld1
	mov	DWORD PTR ?FrameCnt@@3KA, ecx		; FrameCnt
	fld	DWORD PTR ?TimeElapsed@@3MA		; TimeElapsed
	fcom	ST(1)
	fnstsw	ax
	test	ah, bl
	jne	$LN290@Display
; Line 290
	mov	eax, ecx
	fstp	ST(1)
	mov	DWORD PTR tv1024[esp+92], eax
	fild	DWORD PTR tv1024[esp+92]
	test	eax, eax
	jge	SHORT $LN331@Display
	fadd	DWORD PTR __real@4f800000
$LN331@Display:
	fdiv	ST(0), ST(1)
; Line 291
	mov	eax, DWORD PTR ?TotalFrameCnt@@3KA	; TotalFrameCnt
	add	eax, ecx
; Line 293
	mov	DWORD PTR tv1019[esp+92], eax
	mov	DWORD PTR ?TotalFrameCnt@@3KA, eax	; TotalFrameCnt
	fstp	DWORD PTR ?FPS@@3MA			; FPS
	fadd	DWORD PTR ?timetotal@@3MA		; timetotal
	fstp	DWORD PTR ?timetotal@@3MA		; timetotal
	fild	DWORD PTR tv1019[esp+92]
	test	eax, eax
	jge	SHORT $LN332@Display
	fadd	DWORD PTR __real@4f800000
$LN332@Display:
	fdiv	DWORD PTR ?timetotal@@3MA		; timetotal
; Line 294
	push	50					; 00000032H
	push	edi
	push	OFFSET ?FPSString@@3PADA		; FPSString
	fstp	DWORD PTR ?AvgFPS@@3MA			; AvgFPS
	call	_memset
; Line 295
	mov	esi, DWORD PTR __imp__lstrcatA@8
	add	esp, 12					; 0000000cH
	push	OFFSET ??_C@_04GODAOEDJ@FPS?3?$AA@
	push	OFFSET ?FPSString@@3PADA		; FPSString
	call	esi
; Line 297
	fld	DWORD PTR ?FPS@@3MA			; FPS
	xor	eax, eax
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_04GGBPDDBN@?$CF?41f?$AA@
	lea	edx, DWORD PTR _temp$91214[esp+104]
	mov	DWORD PTR _temp$91214[esp+104], eax
	mov	DWORD PTR _temp$91214[esp+108], eax
	mov	DWORD PTR _temp$91214[esp+112], eax
	mov	DWORD PTR _temp$91214[esp+116], eax
	mov	DWORD PTR _temp$91214[esp+120], eax
	call	??$sprintf_s@$0BE@@@YAHAAY0BE@DPBDZZ	; sprintf_s<20>
	add	esp, 12					; 0000000cH
; Line 298
	lea	ecx, DWORD PTR _temp$91214[esp+92]
	push	ecx
	push	OFFSET ?FPSString@@3PADA		; FPSString
	call	esi
; Line 299
	push	OFFSET ??_C@_05KGHNGAP@?5Avg?3?$AA@
	push	OFFSET ?FPSString@@3PADA		; FPSString
	call	esi
; Line 301
	fld	DWORD PTR ?AvgFPS@@3MA			; AvgFPS
	xor	eax, eax
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_04GGBPDDBN@?$CF?41f?$AA@
	lea	edx, DWORD PTR _temp$91214[esp+104]
	mov	DWORD PTR _temp$91214[esp+104], eax
	mov	DWORD PTR _temp$91214[esp+108], eax
	mov	DWORD PTR _temp$91214[esp+112], eax
	mov	DWORD PTR _temp$91214[esp+116], eax
	mov	DWORD PTR _temp$91214[esp+120], eax
	call	??$sprintf_s@$0BE@@@YAHAAY0BE@DPBDZZ	; sprintf_s<20>
	add	esp, 12					; 0000000cH
; Line 302
	lea	edx, DWORD PTR _temp$91214[esp+92]
	push	edx
	push	OFFSET ?FPSString@@3PADA		; FPSString
	call	esi
; Line 303
	fldz
	fst	DWORD PTR ?TimeElapsed@@3MA		; TimeElapsed
; Line 304
	mov	DWORD PTR ?FrameCnt@@3KA, edi		; FrameCnt
	fld1
	jmp	SHORT $LN5@Display
$LN290@Display:
; Line 287
	fstp	ST(0)
; Line 304
	fldz
	fxch	ST(1)
$LN5@Display:
; Line 306
	cmp	BYTE PTR ?FPSTog@@3TshareCB@@A, 0	; FPSTog
	je	SHORT $LN4@Display
; Line 309
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	fstp	ST(1)
	mov	DWORD PTR _rect$91225[esp+92], ebx
	fstp	ST(0)
	mov	DWORD PTR _rect$91225[esp+96], ebx
	mov	DWORD PTR _rect$91225[esp+100], 1024	; 00000400H
	mov	DWORD PTR _rect$91225[esp+104], 768	; 00000300H
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+164]
	push	eax
	call	edx
; Line 310
	mov	eax, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ecx, DWORD PTR [eax]
	push	-1
	push	edi
	lea	edx, DWORD PTR _rect$91225[esp+100]
	push	edx
	push	-1
	push	OFFSET ?FPSString@@3PADA		; FPSString
	push	edi
	push	eax
	mov	eax, DWORD PTR [ecx+56]
	call	eax
; Line 311
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+168]
	push	eax
	call	edx
	fldz
	fld1
$LN4@Display:
; Line 313
	fld	DWORD PTR __real@41200000
	fcomp	DWORD PTR ?timetotal@@3MA		; timetotal
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	$LN298@Display
; Line 316
	fld	DWORD PTR _WHITE
	mov	DWORD PTR _rect$91227[esp+92], edi
	fcom	ST(1)
	mov	DWORD PTR _rect$91227[esp+96], 384	; 00000180H
	mov	DWORD PTR _rect$91227[esp+100], 1024	; 00000400H
	mov	DWORD PTR _rect$91227[esp+104], 768	; 00000300H
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN137@Display
	fstp	ST(0)
	mov	edi, 255				; 000000ffH
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN136@Display
$LN137@Display:
	fcom	ST(2)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN135@Display
	fstp	ST(0)
	xor	edi, edi
	fld	QWORD PTR __real@406fe00000000000
	fld	QWORD PTR __real@3fe0000000000000
	jmp	SHORT $LN136@Display
$LN135@Display:
	fld	QWORD PTR __real@406fe00000000000
	fnstcw	WORD PTR tv978[esp+92]
	movzx	eax, WORD PTR tv978[esp+92]
	fmul	ST(1), ST(0)
	fld	QWORD PTR __real@3fe0000000000000
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv975[esp+92], eax
	fadd	ST(2), ST(0)
	fldcw	WORD PTR tv975[esp+92]
	fxch	ST(2)
	fistp	QWORD PTR tv972[esp+92]
	mov	edi, DWORD PTR tv972[esp+92]
	fldcw	WORD PTR tv978[esp+92]
	fxch	ST(1)
$LN136@Display:
	fld	DWORD PTR _WHITE+4
	fcom	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN141@Display
	fstp	ST(0)
	mov	esi, 255				; 000000ffH
	jmp	SHORT $LN140@Display
$LN141@Display:
	fcom	ST(4)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN139@Display
	fstp	ST(0)
	xor	esi, esi
	jmp	SHORT $LN140@Display
$LN139@Display:
	fnstcw	WORD PTR tv961[esp+92]
	movzx	eax, WORD PTR tv961[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv956[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv956[esp+92]
	fistp	QWORD PTR tv954[esp+92]
	mov	esi, DWORD PTR tv954[esp+92]
	fldcw	WORD PTR tv961[esp+92]
$LN140@Display:
	fld	DWORD PTR _WHITE+8
	fcom	ST(3)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN145@Display
	fstp	ST(0)
	mov	edx, 255				; 000000ffH
	jmp	SHORT $LN144@Display
$LN145@Display:
	fcom	ST(4)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN143@Display
	fstp	ST(0)
	xor	edx, edx
	jmp	SHORT $LN144@Display
$LN143@Display:
	fnstcw	WORD PTR tv942[esp+92]
	movzx	eax, WORD PTR tv942[esp+92]
	fmul	ST(0), ST(2)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv939[esp+92], eax
	fadd	ST(0), ST(1)
	fldcw	WORD PTR tv939[esp+92]
	fistp	QWORD PTR tv937[esp+92]
	mov	edx, DWORD PTR tv937[esp+92]
	fldcw	WORD PTR tv942[esp+92]
$LN144@Display:
	fld	DWORD PTR _WHITE+12
	fcom	ST(3)
	fnstsw	ax
	fstp	ST(3)
	test	ah, 1
	jne	SHORT $LN149@Display
	fstp	ST(2)
	mov	eax, 255				; 000000ffH
	fstp	ST(0)
	fstp	ST(0)
	fstp	ST(0)
	jmp	SHORT $LN148@Display
$LN149@Display:
	fxch	ST(3)
	fcomp	ST(2)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN147@Display
	fstp	ST(1)
	xor	eax, eax
	fstp	ST(0)
	fstp	ST(0)
	jmp	SHORT $LN148@Display
$LN147@Display:
	fnstcw	WORD PTR tv925[esp+92]
	movzx	eax, WORD PTR tv925[esp+92]
	fmulp	ST(1), ST(0)
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv922[esp+92], eax
	faddp	ST(1), ST(0)
	fldcw	WORD PTR tv922[esp+92]
	fistp	QWORD PTR tv920[esp+92]
	mov	eax, DWORD PTR tv920[esp+92]
	fldcw	WORD PTR tv925[esp+92]
$LN148@Display:
	mov	ecx, DWORD PTR ?Font@@3PAUID3DXFont@@A	; Font
	mov	ebp, DWORD PTR [ecx]
	shl	eax, 8
	or	eax, edi
	shl	eax, 8
	or	eax, esi
	shl	eax, 8
	or	eax, edx
	push	eax
	push	ebx
	lea	eax, DWORD PTR _rect$91227[esp+100]
	push	eax
	push	-1
	push	OFFSET _Nag
	push	0
	push	ecx
	mov	ecx, DWORD PTR [ebp+56]
	call	ecx
	jmp	SHORT $LN3@Display
$LN298@Display:
	fstp	ST(1)
	fstp	ST(0)
$LN3@Display:
; Line 319
	cmp	BYTE PTR ?Snapshot@@3TshareCB@@A, 0	; Snapshot
	je	SHORT $LN2@Display
; Line 321
	call	?dump_buffer@@YAXXZ			; dump_buffer
; Line 322
	mov	BYTE PTR ?Snapshot@@3TshareCB@@A, 0	; Snapshot
$LN2@Display:
; Line 324
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	edx, DWORD PTR [eax]
	push	0
	push	0
	push	0
	push	0
	push	eax
	mov	eax, DWORD PTR [edx+68]
	call	eax
; Line 325
	fld	DWORD PTR _currTime$91168[esp+92]
	fstp	DWORD PTR ?lastTime@@3MA		; lastTime
; Line 326
	mov	al, bl
; Line 333
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+76]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
$LN27@Display:
	mov	ecx, DWORD PTR __$ArrayPad$[esp+92]
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
	xor	ecx, esp
	xor	al, al
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	ret	0
?Display@@YA_NM@Z ENDP					; Display
_TEXT	ENDS
PUBLIC	__real@3f490fdb
PUBLIC	__real@3faaaaab
PUBLIC	__real@447a0000
PUBLIC	__real@43fa0000
PUBLIC	__real@c3fa0000
PUBLIC	__real@80000000
PUBLIC	__real@3f34fdf4
PUBLIC	__real@40800000
PUBLIC	__real@43340000
PUBLIC	__$ArrayPad$
PUBLIC	?Setup@@YA_NXZ					; Setup
;	COMDAT __real@3f490fdb
; File g:\program files\microsoft visual studio 9.0\vc\include\string.h
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3faaaaab
CONST	SEGMENT
__real@3faaaaab DD 03faaaaabr			; 1.33333
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@c3fa0000
CONST	SEGMENT
__real@c3fa0000 DD 0c3fa0000r			; -500
CONST	ENDS
;	COMDAT __real@80000000
CONST	SEGMENT
__real@80000000 DD 080000000r			; -0
CONST	ENDS
;	COMDAT __real@3f34fdf4
CONST	SEGMENT
__real@3f34fdf4 DD 03f34fdf4r			; 0.707
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?Setup@@YA_NXZ
_TEXT	SEGMENT
$T96514 = -308						; size = 12
_dir$ = -308						; size = 12
$T96511 = -308						; size = 12
_col$ = -296						; size = 16
tv346 = -280						; size = 4
_light$ = -276						; size = 104
$T96513 = -172						; size = 104
_lf$ = -64						; size = 56
__$ArrayPad$ = -8					; size = 4
?Setup@@YA_NXZ PROC					; Setup, COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\picksample.cpp
; Line 37
	sub	esp, 312				; 00000138H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+312], eax
	push	ebx
	push	esi
	push	edi
; Line 42
	call	?ReadVars@@YA_NXZ			; ReadVars
; Line 44
	call	DWORD PTR __imp__timeGetTime@0
	mov	DWORD PTR tv346[esp+324], eax
	fild	DWORD PTR tv346[esp+324]
	test	eax, eax
	jge	SHORT $LN24@Setup
	fadd	DWORD PTR __real@4f800000
$LN24@Setup:
	fstp	DWORD PTR ?lastTime@@3MA		; lastTime
; Line 49
	push	0
	fldz
	push	OFFSET ?Cylinder@@3PAUID3DXMesh@@A	; Cylinder
	fst	DWORD PTR $T96511[esp+332]
	push	1
	mov	eax, DWORD PTR $T96511[esp+336]
	fst	DWORD PTR $T96511[esp+340]
	mov	ecx, DWORD PTR $T96511[esp+340]
	fst	DWORD PTR $T96511[esp+344]
	fld	DWORD PTR __real@43340000
	mov	edx, DWORD PTR $T96511[esp+344]
	fstp	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	push	3
	fld	DWORD PTR __real@41200000
	sub	esp, 12					; 0000000cH
	fstp	DWORD PTR [esp+8]
	mov	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A, eax
	fld	DWORD PTR __real@40800000
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	fstp	DWORD PTR [esp+4]
	mov	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+4, ecx
	mov	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+8, edx
	fstp	DWORD PTR [esp]
	push	eax
	call	_D3DXCreateCylinder@32
; Line 51
	xor	esi, esi
	cmp	DWORD PTR ?BirdsCount@@3HA, esi		; BirdsCount
	jl	SHORT $LN7@Setup
; Line 42
	mov	ebx, OFFSET ?Bird@@3PAVMob@@A		; Bird
; Line 51
$LL9@Setup:
	call	?InitBird@@YAXPAVMob@@@Z		; InitBird
	inc	esi
	add	ebx, 192				; 000000c0H
	cmp	esi, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	jle	SHORT $LL9@Setup
$LN7@Setup:
	call	?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z	; Mob::InitaliseLinked
; Line 53
	call	?Sort@Mob@@SAPAV1@PAV1@H@Z		; Mob::Sort
; Line 55
	mov	ebx, OFFSET ?Pred@@3PAVMob@@A		; Pred
	mov	DWORD PTR ?BirdsLLTail@@3PAVMob@@A, eax	; BirdsLLTail
	call	?InitBird@@YAXPAVMob@@@Z		; InitBird
; Line 71
	fld	DWORD PTR __real@3f34fdf4
	fst	DWORD PTR _dir$[esp+324]
	mov	ecx, 17					; 00000011H
	fld	DWORD PTR __real@80000000
	mov	esi, OFFSET _WHITE_MTRL
	fstp	DWORD PTR _dir$[esp+328]
	mov	edi, OFFSET ?Pred@@3PAVMob@@A+112
	rep movsd
	fstp	DWORD PTR _dir$[esp+332]
; Line 72
	fld1
	fst	DWORD PTR _col$[esp+324]
	fst	DWORD PTR _col$[esp+328]
	fst	DWORD PTR _col$[esp+332]
	fstp	DWORD PTR _col$[esp+336]
; Line 73
	lea	edi, DWORD PTR _col$[esp+324]
	lea	ebx, DWORD PTR _dir$[esp+324]
	lea	esi, DWORD PTR $T96513[esp+324]
	call	?InitDirectionalLight@d3d@@YA?AU_D3DLIGHT9@@PAUD3DXVECTOR3@@PAUD3DXCOLOR@@@Z ; d3d::InitDirectionalLight
	mov	esi, eax
; Line 75
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	lea	edx, DWORD PTR _light$[esp+324]
	push	edx
	mov	ecx, 26					; 0000001aH
	lea	edi, DWORD PTR _light$[esp+328]
	xor	ebx, ebx
	rep movsd
	mov	ecx, DWORD PTR [eax]
	push	ebx
	push	eax
	mov	eax, DWORD PTR [ecx+204]
	call	eax
; Line 76
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+212]
	push	1
	push	ebx
	push	eax
	call	edx
; Line 77
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	1
	push	143					; 0000008fH
	push	eax
	call	edx
; Line 78
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+228]
	push	ebx
	push	29					; 0000001dH
	push	eax
	call	edx
; Line 80
	fld	DWORD PTR __real@c3fa0000
	fst	DWORD PTR $T96514[esp+324]
	mov	eax, DWORD PTR $T96514[esp+324]
	fst	DWORD PTR $T96514[esp+328]
	mov	ecx, DWORD PTR $T96514[esp+328]
	fstp	DWORD PTR $T96514[esp+332]
	mov	edx, DWORD PTR $T96514[esp+332]
; Line 81
	fld	DWORD PTR __real@43fa0000
	push	ecx
	fstp	DWORD PTR [esp]
	mov	DWORD PTR ?TheCamera@@3VCamera@@A+40, eax
	mov	DWORD PTR ?TheCamera@@3VCamera@@A+44, ecx
	mov	DWORD PTR ?TheCamera@@3VCamera@@A+48, edx
	call	?strafe@Camera@@QAEXM@Z			; Camera::strafe
; Line 82
	fld	DWORD PTR __real@43fa0000
	push	ecx
	fstp	DWORD PTR [esp]
	call	?fly@Camera@@QAEXM@Z			; Camera::fly
; Line 88
	call	?getViewMatrix@Camera@@QAEXPAUD3DXMATRIX@@@Z ; Camera::getViewMatrix
; Line 89
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	push	OFFSET ?View@@3UD3DXMATRIX@@A		; View
	push	2
	push	eax
	mov	edx, DWORD PTR [ecx+176]
	call	edx
; Line 97
	fld	DWORD PTR __real@447a0000
	sub	esp, 16					; 00000010H
	fstp	DWORD PTR [esp+12]
	fld1
	fstp	DWORD PTR [esp+8]
	fld	DWORD PTR __real@3faaaaab
	fstp	DWORD PTR [esp+4]
	fld	DWORD PTR __real@3f490fdb
	fstp	DWORD PTR [esp]
	push	OFFSET ?proj@@3UD3DXMATRIX@@A		; proj
	call	_D3DXMatrixPerspectiveFovLH@20
; Line 98
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+176]
	push	OFFSET ?proj@@3UD3DXMATRIX@@A		; proj
	push	3
	push	eax
	call	edx
; Line 103
	push	56					; 00000038H
	lea	eax, DWORD PTR _lf$[esp+328]
	push	ebx
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 113
	push	OFFSET ??_C@_07INPHFMHP@Courier?$AA@
	lea	ecx, DWORD PTR _lf$[esp+352]
	push	32					; 00000020H
	push	ecx
	mov	DWORD PTR _lf$[esp+336], 12		; 0000000cH
	mov	DWORD PTR _lf$[esp+340], 6
	mov	DWORD PTR _lf$[esp+344], 1000		; 000003e8H
	mov	DWORD PTR _lf$[esp+352], ebx
	mov	BYTE PTR _lf$[esp+356], 1
	mov	BYTE PTR _lf$[esp+357], bl
	mov	BYTE PTR _lf$[esp+358], bl
	mov	BYTE PTR _lf$[esp+359], bl
	mov	DWORD PTR _lf$[esp+348], ebx
	call	_strcpy_s
; Line 115
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	add	esp, 12					; 0000000cH
	push	OFFSET ?Font@@3PAUID3DXFont@@A		; Font
	lea	edx, DWORD PTR _lf$[esp+328]
	push	edx
	push	eax
	call	_D3DXCreateFontIndirectA@12
	test	eax, eax
	jge	SHORT $LN2@Setup
; Line 122
	xor	al, al
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[esp+312]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	ret	0
$LN2@Setup:
; Line 127
	mov	ecx, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	push	OFFSET ?Line@@3PAUID3DXLine@@A		; Line
	push	ecx
	call	_D3DXCreateLine@8
; Line 138
	mov	ecx, DWORD PTR __$ArrayPad$[esp+324]
	pop	edi
	test	eax, eax
	pop	esi
	setge	al
	pop	ebx
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	ret	0
?Setup@@YA_NXZ ENDP					; Setup
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3dcccccd
PUBLIC	__real@4069000000000000
PUBLIC	__real@44fa0000
PUBLIC	__real@409f400000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@3fa99999a0000000
PUBLIC	__real@3727c5ac
PUBLIC	?AnalisewParam@@YA_NI@Z				; AnalisewParam
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@44fa0000
CONST	SEGMENT
__real@44fa0000 DD 044fa0000r			; 2000
CONST	ENDS
;	COMDAT __real@409f400000000000
CONST	SEGMENT
__real@409f400000000000 DQ 0409f400000000000r	; 2000
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3fa99999a0000000
CONST	SEGMENT
__real@3fa99999a0000000 DQ 03fa99999a0000000r	; 0.05
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-005
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?AnalisewParam@@YA_NI@Z
_TEXT	SEGMENT
?AnalisewParam@@YA_NI@Z PROC				; AnalisewParam, COMDAT
; _wParam$ = eax
; Line 731
	push	ebx
; Line 732
	add	eax, -48				; ffffffd0H
	push	esi
	push	edi
	cmp	eax, 71					; 00000047H
	ja	$LN1@AnalisewPa
	movzx	eax, BYTE PTR $LN81@AnalisewPa[eax]
	jmp	DWORD PTR $LN143@AnalisewPa[eax*4]
$LN76@AnalisewPa:
; Line 735
	cmp	BYTE PTR ?NumberTog@@3TshareCB@@A, 0	; NumberTog
; Line 939
	mov	al, 1
	sete	cl
	mov	BYTE PTR ?NumberTog@@3TshareCB@@A, cl	; NumberTog
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN75@AnalisewPa:
; Line 737
	cmp	BYTE PTR ?PauseTog@@3TshareCB@@A, 0	; PauseTog
; Line 939
	mov	al, 1
	sete	dl
	mov	BYTE PTR ?PauseTog@@3TshareCB@@A, dl	; PauseTog
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN74@AnalisewPa:
; Line 739
	cmp	BYTE PTR ?EnvTog@@3TshareCB@@A, 0	; EnvTog
	sete	al
	mov	BYTE PTR ?EnvTog@@3TshareCB@@A, al	; EnvTog
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN73@AnalisewPa:
; Line 741
	cmp	BYTE PTR ?HelpTog@@3TshareCB@@A, 0	; HelpTog
; Line 939
	mov	al, 1
	sete	cl
	mov	BYTE PTR ?HelpTog@@3TshareCB@@A, cl	; HelpTog
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN72@AnalisewPa:
; Line 743
	cmp	BYTE PTR ?FPSTog@@3TshareCB@@A, 0	; FPSTog
; Line 939
	mov	al, 1
	sete	dl
	mov	BYTE PTR ?FPSTog@@3TshareCB@@A, dl	; FPSTog
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN71@AnalisewPa:
; Line 745
	cmp	BYTE PTR ?EnvNumTog@@3TshareCB@@A, 0	; EnvNumTog
	sete	al
	mov	BYTE PTR ?EnvNumTog@@3TshareCB@@A, al	; EnvNumTog
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN70@AnalisewPa:
; Line 747
	cmp	BYTE PTR ?BeABirdTog@@3TshareCB@@A, 0	; BeABirdTog
; Line 939
	mov	al, 1
	sete	cl
	mov	BYTE PTR ?BeABirdTog@@3TshareCB@@A, cl	; BeABirdTog
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN69@AnalisewPa:
; Line 749
	cmp	BYTE PTR ?CameraCircleTog@@3TshareCB@@A, 0 ; CameraCircleTog
; Line 939
	mov	al, 1
	sete	dl
	mov	BYTE PTR ?CameraCircleTog@@3TshareCB@@A, dl ; CameraCircleTog
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN68@AnalisewPa:
; Line 751
	mov	BYTE PTR ?Snapshot@@3TshareCB@@A, 1	; Snapshot
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN67@AnalisewPa:
; Line 754
	mov	eax, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	cmp	eax, 2
	jg	SHORT $LN66@AnalisewPa
; Line 755
	mov	DWORD PTR ?BirdsCount@@3HA, 2		; BirdsCount
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN66@AnalisewPa:
; Line 758
	mov	edi, DWORD PTR ?BirdsLLTail@@3PAVMob@@A	; BirdsLLTail
	lea	esi, DWORD PTR [eax+eax*2]
	shl	esi, 6
	add	esi, OFFSET ?Bird@@3PAVMob@@A		; Bird
	mov	ecx, 48					; 00000030H
	rep movsd
; Line 759
	dec	DWORD PTR ?BirdsCount@@3HA		; BirdsCount
; Line 760
	call	?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z	; Mob::InitaliseLinked
	mov	DWORD PTR ?BirdsLLTail@@3PAVMob@@A, eax	; BirdsLLTail
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN64@AnalisewPa:
; Line 766
	mov	eax, DWORD PTR ?BirdsCount@@3HA		; BirdsCount
	cmp	eax, 2001				; 000007d1H
	jl	SHORT $LN63@AnalisewPa
; Line 767
	mov	DWORD PTR ?BirdsCount@@3HA, 2001	; BirdsCount, 000007d1H
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN63@AnalisewPa:
; Line 770
	inc	eax
; Line 771
	lea	ebx, DWORD PTR [eax+eax*2]
	shl	ebx, 6
	add	ebx, OFFSET ?Bird@@3PAVMob@@A		; Bird
	mov	DWORD PTR ?BirdsCount@@3HA, eax		; BirdsCount
	call	?InitBird@@YAXPAVMob@@@Z		; InitBird
; Line 772
	call	?InitaliseLinked@Mob@@SAPAV1@PAV1@H@Z	; Mob::InitaliseLinked
	mov	DWORD PTR ?BirdsLLTail@@3PAVMob@@A, eax	; BirdsLLTail
; Line 939
	mov	al, 1
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN61@AnalisewPa:
; Line 778
	fldz
	fld	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
	fcom	ST(1)
	fnstsw	ax
	fstp	ST(1)
	test	ah, 65					; 00000041H
	jp	SHORT $LN60@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR __real@3727c5ac
	fstp	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN60@AnalisewPa:
; Line 781
	fsub	QWORD PTR __real@3fa99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN58@AnalisewPa:
; Line 786
	fld	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
	fcom	QWORD PTR __real@400921fb60000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN57@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR __real@40490fdb
	fstp	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN57@AnalisewPa:
; Line 789
	fadd	QWORD PTR __real@3fa99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?VisualAngle@@3MA		; VisualAngle
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN55@AnalisewPa:
; Line 794
	fld1
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN89@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN89@AnalisewPa:
; Line 794
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN52@AnalisewPa:
; Line 802
	fld	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
	fcom	QWORD PTR __real@409f400000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN51@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR __real@44fa0000
	fstp	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN51@AnalisewPa:
; Line 805
	fadd	QWORD PTR __real@3ff0000000000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?RoostSphere@@3UBoundingSphere@d3d@@A+12
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN49@AnalisewPa:
; Line 810
	fld1
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN95@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?AttractDist@@3MA		; AttractDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN95@AnalisewPa:
; Line 810
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR ?AttractDist@@3MA		; AttractDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN46@AnalisewPa:
; Line 818
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fcom	QWORD PTR __real@4069000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN45@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR _AttractDistMax
	fstp	DWORD PTR ?AttractDist@@3MA		; AttractDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN45@AnalisewPa:
; Line 821
	fadd	QWORD PTR __real@3ff0000000000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?AttractDist@@3MA		; AttractDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN43@AnalisewPa:
; Line 826
	fld1
	fld	DWORD PTR ?CollDist@@3MA		; CollDist
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN101@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?CollDist@@3MA		; CollDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN101@AnalisewPa:
; Line 826
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR ?CollDist@@3MA		; CollDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN40@AnalisewPa:
; Line 834
	fld	DWORD PTR ?CollDist@@3MA		; CollDist
	fld	DWORD PTR ?AttractDist@@3MA		; AttractDist
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN104@AnalisewPa
	fstp	ST(1)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?CollDist@@3MA		; CollDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN104@AnalisewPa:
; Line 834
	fstp	ST(0)
; Line 939
	mov	al, 1
	fadd	QWORD PTR __real@3ff0000000000000
	fstp	DWORD PTR ?CollDist@@3MA		; CollDist
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN37@AnalisewPa:
; Line 842
	fldz
	fld	DWORD PTR ?RoostInf@@3MA		; RoostInf
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN107@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?RoostInf@@3MA		; RoostInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN107@AnalisewPa:
; Line 842
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3fb99999a0000000
	fstp	DWORD PTR ?RoostInf@@3MA		; RoostInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN34@AnalisewPa:
; Line 850
	fld	DWORD PTR ?RoostInf@@3MA		; RoostInf
	fcom	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN33@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR _BirdMaxVel
	fstp	DWORD PTR ?RoostInf@@3MA		; RoostInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN33@AnalisewPa:
; Line 853
	fadd	QWORD PTR __real@3fb99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?RoostInf@@3MA		; RoostInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN31@AnalisewPa:
; Line 858
	fldz
	fld	DWORD PTR ?AttractInf@@3MA		; AttractInf
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN113@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?AttractInf@@3MA		; AttractInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN113@AnalisewPa:
; Line 858
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3fb99999a0000000
	fstp	DWORD PTR ?AttractInf@@3MA		; AttractInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN28@AnalisewPa:
; Line 866
	fld	DWORD PTR ?AttractInf@@3MA		; AttractInf
	fcom	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN27@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR _BirdMaxVel
	fstp	DWORD PTR ?AttractInf@@3MA		; AttractInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN27@AnalisewPa:
; Line 869
	fadd	QWORD PTR __real@3fb99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?AttractInf@@3MA		; AttractInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN25@AnalisewPa:
; Line 874
	fldz
	fld	DWORD PTR ?CollInf@@3MA			; CollInf
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN119@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?CollInf@@3MA			; CollInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN119@AnalisewPa:
; Line 874
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3fb99999a0000000
	fstp	DWORD PTR ?CollInf@@3MA			; CollInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN22@AnalisewPa:
; Line 882
	fld	DWORD PTR ?CollInf@@3MA			; CollInf
	fcom	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN21@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR _BirdMaxVel
	fstp	DWORD PTR ?CollInf@@3MA			; CollInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN21@AnalisewPa:
; Line 885
	fadd	QWORD PTR __real@3fb99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?CollInf@@3MA			; CollInf
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN19@AnalisewPa:
; Line 890
	fld	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
	fld	QWORD PTR __real@3fb99999a0000000
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN18@AnalisewPa
	fstp	ST(1)
; Line 939
	mov	al, 1
	fstp	ST(0)
	fld	DWORD PTR __real@3dcccccd
	fstp	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN18@AnalisewPa:
; Line 893
	fsubp	ST(1), ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN16@AnalisewPa:
; Line 898
	fld	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
	fcom	QWORD PTR __real@3ff921fb60000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN15@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR __real@3fc90fdb
	fstp	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN15@AnalisewPa:
; Line 901
	fadd	QWORD PTR __real@3fb99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?HeadOnEvation@@3MA		; HeadOnEvation
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN13@AnalisewPa:
; Line 906
	fld	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
	fld	QWORD PTR __real@3fb99999a0000000
	fcom	ST(1)
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN12@AnalisewPa
	fstp	ST(1)
; Line 939
	mov	al, 1
	fstp	ST(0)
	fld	DWORD PTR __real@3dcccccd
	fstp	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN12@AnalisewPa:
; Line 909
	fsubp	ST(1), ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN10@AnalisewPa:
; Line 914
	fld	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
	fcom	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN9@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fld	DWORD PTR _BirdMaxVel
	fstp	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN9@AnalisewPa:
; Line 917
	fadd	QWORD PTR __real@3fb99999a0000000
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN7@AnalisewPa:
; Line 922
	fld	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
	fld	DWORD PTR ?BirdTopVel@@3MA		; BirdTopVel
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN137@AnalisewPa
	fstp	ST(1)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN137@AnalisewPa:
; Line 922
	fstp	ST(0)
; Line 939
	mov	al, 1
	fadd	QWORD PTR __real@3fb99999a0000000
	fstp	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN4@AnalisewPa:
; Line 930
	fld	DWORD PTR _BirdMinVel
	fld	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
	fcom	ST(1)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN140@AnalisewPa
	fstp	ST(0)
; Line 939
	mov	al, 1
	fstp	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN140@AnalisewPa:
; Line 930
	fstp	ST(1)
; Line 939
	mov	al, 1
	fsub	QWORD PTR __real@3fb99999a0000000
	fstp	DWORD PTR ?BirdBottomVel@@3MA		; BirdBottomVel
; Line 940
	pop	edi
	pop	esi
	pop	ebx
	ret	0
$LN1@AnalisewPa:
	pop	edi
	pop	esi
	xor	al, al
	pop	ebx
	ret	0
$LN143@AnalisewPa:
	DD	$LN40@AnalisewPa
	DD	$LN67@AnalisewPa
	DD	$LN64@AnalisewPa
	DD	$LN61@AnalisewPa
	DD	$LN58@AnalisewPa
	DD	$LN55@AnalisewPa
	DD	$LN52@AnalisewPa
	DD	$LN49@AnalisewPa
	DD	$LN46@AnalisewPa
	DD	$LN43@AnalisewPa
	DD	$LN70@AnalisewPa
	DD	$LN69@AnalisewPa
	DD	$LN74@AnalisewPa
	DD	$LN73@AnalisewPa
	DD	$LN13@AnalisewPa
	DD	$LN4@AnalisewPa
	DD	$LN7@AnalisewPa
	DD	$LN76@AnalisewPa
	DD	$LN10@AnalisewPa
	DD	$LN75@AnalisewPa
	DD	$LN68@AnalisewPa
	DD	$LN72@AnalisewPa
	DD	$LN71@AnalisewPa
	DD	$LN16@AnalisewPa
	DD	$LN19@AnalisewPa
	DD	$LN25@AnalisewPa
	DD	$LN22@AnalisewPa
	DD	$LN37@AnalisewPa
	DD	$LN34@AnalisewPa
	DD	$LN31@AnalisewPa
	DD	$LN28@AnalisewPa
	DD	$LN1@AnalisewPa
$LN81@AnalisewPa:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	31					; 0000001fH
	DB	12					; 0000000cH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	13					; 0000000dH
	DB	14					; 0000000eH
	DB	15					; 0000000fH
	DB	16					; 00000010H
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	17					; 00000011H
	DB	18					; 00000012H
	DB	19					; 00000013H
	DB	20					; 00000014H
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	21					; 00000015H
	DB	31					; 0000001fH
	DB	22					; 00000016H
	DB	31					; 0000001fH
	DB	23					; 00000017H
	DB	31					; 0000001fH
	DB	24					; 00000018H
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	31					; 0000001fH
	DB	25					; 00000019H
	DB	26					; 0000001aH
	DB	27					; 0000001bH
	DB	28					; 0000001cH
	DB	29					; 0000001dH
	DB	30					; 0000001eH
?AnalisewParam@@YA_NI@Z ENDP				; AnalisewParam
_TEXT	ENDS
PUBLIC	_ScreenSaverProc@16
; Function compile flags: /Ogtpy
;	COMDAT _ScreenSaverProc@16
_TEXT	SEGMENT
_hwnd$ = 8						; size = 4
_msg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
_ScreenSaverProc@16 PROC				; COMDAT
; Line 539
	push	ebp
	mov	ebp, esp
	and	esp, -8					; fffffff8H
	push	ecx
	push	ebx
	push	esi
	mov	esi, DWORD PTR _hwnd$[ebp]
	push	edi
; Line 542
	mov	edi, DWORD PTR _msg$[ebp]
	cmp	edi, 256				; 00000100H
	ja	$LN17@ScreenSave
	je	$LN12@ScreenSave
	mov	eax, edi
	sub	eax, 1
	je	SHORT $LN10@ScreenSave
	sub	eax, 1
	jne	$LN2@ScreenSave
; Line 603
	call	?WriteVars@@YA_NXZ			; WriteVars
; Line 604
	call	?Cleanup@@YAXXZ				; Cleanup
; Line 605
	mov	eax, DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A ; Device
	test	eax, eax
	je	SHORT $LN3@ScreenSave
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	eax
	call	edx
$LN3@ScreenSave:
; Line 606
	mov	eax, DWORD PTR ?uTimer@?1??ScreenSaverProc@@9@16@4IA
	push	eax
	push	esi
	call	DWORD PTR __imp__KillTimer@8
; Line 609
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
; Line 629
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	eax
	push	ecx
	push	edi
	push	esi
	call	_DefScreenSaverProc@16
; Line 633
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN10@ScreenSave:
; Line 556
	cmp	DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A, 0 ; Device
	jne	SHORT $LN7@ScreenSave
; Line 558
	push	esi
	call	?InitD3D@d3d@@YA_NPAUHWND__@@HH_NW4_D3DDEVTYPE@@PAPAUIDirect3DDevice9@@PAU_D3DDISPLAYMODE@@@Z ; d3d::InitD3D
	mov	ebx, DWORD PTR __imp__DestroyWindow@4
	add	esp, 4
	test	al, al
	jne	SHORT $LN8@ScreenSave
; Line 565
	push	esi
	call	ebx
$LN8@ScreenSave:
; Line 568
	call	?Setup@@YA_NXZ				; Setup
	test	al, al
	jne	SHORT $LN7@ScreenSave
; Line 575
	push	esi
	call	ebx
$LN7@ScreenSave:
; Line 578
	push	0
	push	1
	push	1
	push	esi
	call	DWORD PTR __imp__SetTimer@16
; Line 629
	mov	ecx, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?uTimer@?1??ScreenSaverProc@@9@16@4IA, eax
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	push	ecx
	push	edi
	push	esi
	call	_DefScreenSaverProc@16
; Line 633
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN12@ScreenSave:
; Line 547
	mov	eax, DWORD PTR _wParam$[ebp]
	call	?AnalisewParam@@YA_NI@Z			; AnalisewParam
	mov	bl, al
	mov	eax, DWORD PTR _wParam$[ebp]
	call	?ProcessKeyInput@Camera@@SA_NIPAV1@M@Z	; Camera::ProcessKeyInput
	or	bl, al
; Line 548
	cmp	DWORD PTR _wParam$[ebp], 27		; 0000001bH
	jne	SHORT $LN5@ScreenSave
; Line 549
	push	esi
	call	DWORD PTR __imp__DestroyWindow@4
$LN5@ScreenSave:
; Line 624
	test	bl, bl
	jne	SHORT $LN1@ScreenSave
$LN47@ScreenSave:
; Line 629
	mov	eax, DWORD PTR _lParam$[ebp]
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	eax
	push	ecx
	push	edi
	push	esi
	call	_DefScreenSaverProc@16
; Line 633
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN17@ScreenSave:
; Line 542
	cmp	edi, 275				; 00000113H
	je	SHORT $LN6@ScreenSave
$LN2@ScreenSave:
; Line 618
	mov	ecx, DWORD PTR _lParam$[ebp]
	mov	edx, DWORD PTR _wParam$[ebp]
	push	ecx
	push	edx
	push	edi
	push	esi
	call	_DefScreenSaverProc@16
; Line 633
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
$LN6@ScreenSave:
; Line 592
	cmp	DWORD PTR ?Device@@3PAUIDirect3DDevice9@@A, 0 ; Device
	je	SHORT $LN48@ScreenSave
	call	?Display@@YA_NM@Z			; Display
	test	al, al
	jne	SHORT $LN47@ScreenSave
$LN48@ScreenSave:
; Line 593
	push	esi
	call	DWORD PTR __imp__DestroyWindow@4
; Line 624
	jmp	SHORT $LN47@ScreenSave
$LN1@ScreenSave:
; Line 633
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_ScreenSaverProc@16 ENDP
_WHITE	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
_BLACK	DB	0cH DUP (?)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EBLACK@d3d@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EBLACK@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'BLACK'', COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\d3dutility.h
; Line 64
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _BLACK
	fst	DWORD PTR _BLACK+4
	fstp	DWORD PTR _BLACK+8
	pop	ecx
	ret	0
??__EBLACK@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'BLACK''
_RED	DD	03f800000r			; 1
	DB	8 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__ERED@d3d@@YAXXZ
text$yc	SEGMENT
tv176 = -4						; size = 4
??__ERED@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'RED'', COMDAT
; Line 65
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv176[esp+4]
	fld	DWORD PTR tv176[esp+4]
	fst	DWORD PTR _RED+4
	fstp	DWORD PTR _RED+8
	pop	ecx
	ret	0
??__ERED@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'RED''
_GREEN	DB	04H DUP (?)
	DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EGREEN@d3d@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EGREEN@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'GREEN'', COMDAT
; Line 66
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _GREEN
	fstp	DWORD PTR _GREEN+8
	pop	ecx
	ret	0
??__EGREEN@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'GREEN''
_BLUE	DB	08H DUP (?)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EBLUE@d3d@@YAXXZ
text$yc	SEGMENT
tv173 = -4						; size = 4
??__EBLUE@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'BLUE'', COMDAT
; Line 67
	push	ecx
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR tv173[esp+4]
	fld	DWORD PTR tv173[esp+4]
	fst	DWORD PTR _BLUE
	fstp	DWORD PTR _BLUE+4
	pop	ecx
	ret	0
??__EBLUE@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'BLUE''
_YELLOW	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EYELLOW@d3d@@YAXXZ
text$yc	SEGMENT
??__EYELLOW@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'YELLOW'', COMDAT
; Line 68
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _YELLOW+8
	ret	0
??__EYELLOW@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'YELLOW''
_CYAN	DB	04H DUP (?)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__ECYAN@d3d@@YAXXZ
text$yc	SEGMENT
??__ECYAN@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'CYAN'', COMDAT
; Line 69
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _CYAN
	ret	0
??__ECYAN@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'CYAN''
_MAGENTA DD	03f800000r			; 1
	DB	4 DUP(00H)
	DD	03f800000r			; 1
	DD	03f800000r			; 1
; Function compile flags: /Ogtpy
;	COMDAT ??__EMAGENTA@d3d@@YAXXZ
text$yc	SEGMENT
??__EMAGENTA@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'MAGENTA'', COMDAT
; Line 70
	fld	QWORD PTR __real@3f70101020000000
	fmul	QWORD PTR __real@0000000000000000
	fstp	DWORD PTR _MAGENTA+4
	ret	0
??__EMAGENTA@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'MAGENTA''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EWHITE_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96928 = -68						; size = 68
??__EWHITE_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'WHITE_MTRL'', COMDAT
; Line 87
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _WHITE+8
	push	edi
	mov	edi, DWORD PTR _WHITE+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _WHITE
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _WHITE+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96928[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _WHITE_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EWHITE_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'WHITE_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__ERED_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96933 = -68						; size = 68
??__ERED_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'RED_MTRL'', COMDAT
; Line 88
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _RED+8
	push	edi
	mov	edi, DWORD PTR _RED+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _RED
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _RED+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96933[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _RED_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__ERED_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'RED_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EGREEN_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96938 = -68						; size = 68
??__EGREEN_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'GREEN_MTRL'', COMDAT
; Line 89
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _GREEN+8
	push	edi
	mov	edi, DWORD PTR _GREEN+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _GREEN
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _GREEN+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96938[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _GREEN_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EGREEN_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'GREEN_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EBLUE_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96943 = -68						; size = 68
??__EBLUE_MTRL@d3d@@YAXXZ PROC				; d3d::`dynamic initializer for 'BLUE_MTRL'', COMDAT
; Line 90
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _BLUE+8
	push	edi
	mov	edi, DWORD PTR _BLUE+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _BLUE
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _BLUE+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96943[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _BLUE_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EBLUE_MTRL@d3d@@YAXXZ ENDP				; d3d::`dynamic initializer for 'BLUE_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EYELLOW_MTRL@d3d@@YAXXZ
text$yc	SEGMENT
$T96948 = -68						; size = 68
??__EYELLOW_MTRL@d3d@@YAXXZ PROC			; d3d::`dynamic initializer for 'YELLOW_MTRL'', COMDAT
; Line 91
	fld	DWORD PTR __real@40000000
	mov	ecx, DWORD PTR _BLACK
	mov	edx, DWORD PTR _BLACK+4
	sub	esp, 68					; 00000044H
	push	esi
	mov	esi, DWORD PTR _YELLOW+8
	push	edi
	mov	edi, DWORD PTR _YELLOW+12
	sub	esp, 20					; 00000014H
	fstp	DWORD PTR [esp+16]
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR _BLACK+8
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR _BLACK+12
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _YELLOW
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR _YELLOW+4
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	sub	esp, 16					; 00000010H
	mov	eax, esp
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], esi
	mov	DWORD PTR [eax+12], edi
	lea	eax, DWORD PTR $T96948[esp+144]
	call	?InitMtrl@d3d@@YA?AU_D3DMATERIAL9@@UD3DXCOLOR@@000M@Z ; d3d::InitMtrl
	add	esp, 68					; 00000044H
	mov	ecx, 17					; 00000011H
	mov	esi, eax
	mov	edi, OFFSET _YELLOW_MTRL
	rep movsd
	pop	edi
	pop	esi
	add	esp, 68					; 00000044H
	ret	0
??__EYELLOW_MTRL@d3d@@YAXXZ ENDP			; d3d::`dynamic initializer for 'YELLOW_MTRL''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__ETheCamera@@YAXXZ
text$yc	SEGMENT
??__ETheCamera@@YAXXZ PROC				; `dynamic initializer for 'TheCamera'', COMDAT
; File k:\progs to install\my documents\visual studio 2008\projects\intro 3d game\mine\pick\flockheaders.h
; Line 20
	call	??0Camera@@QAE@W4CameraType@0@@Z	; Camera::Camera
	push	OFFSET ??__FTheCamera@@YAXXZ		; `dynamic atexit destructor for 'TheCamera''
	call	_atexit
	pop	ecx
	ret	0
??__ETheCamera@@YAXXZ ENDP				; `dynamic initializer for 'TheCamera''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EBird@@YAXXZ
text$yc	SEGMENT
??__EBird@@YAXXZ PROC					; `dynamic initializer for 'Bird'', COMDAT
; Line 94
	push	OFFSET ??1Mob@@QAE@XZ			; Mob::~Mob
	push	OFFSET ??0Mob@@QAE@XZ			; Mob::Mob
	push	2002					; 000007d2H
	push	192					; 000000c0H
	push	OFFSET ?Bird@@3PAVMob@@A		; Bird
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	push	OFFSET ??__FBird@@YAXXZ			; `dynamic atexit destructor for 'Bird''
	call	_atexit
	pop	ecx
	ret	0
??__EBird@@YAXXZ ENDP					; `dynamic initializer for 'Bird''
; Function compile flags: /Ogtpy
text$yc	ENDS
;	COMDAT ??__EPred@@YAXXZ
text$yc	SEGMENT
??__EPred@@YAXXZ PROC					; `dynamic initializer for 'Pred'', COMDAT
; Line 98
	push	OFFSET ??1Mob@@QAE@XZ			; Mob::~Mob
	push	OFFSET ??0Mob@@QAE@XZ			; Mob::Mob
	push	5
	push	192					; 000000c0H
	push	OFFSET ?Pred@@3PAVMob@@A		; Pred
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	push	OFFSET ??__FPred@@YAXXZ			; `dynamic atexit destructor for 'Pred''
	call	_atexit
	pop	ecx
	ret	0
??__EPred@@YAXXZ ENDP					; `dynamic initializer for 'Pred''
text$yc	ENDS
PUBLIC	?RoostBox@@3UBoundingBox@d3d@@A			; RoostBox
?RoostBox@@3UBoundingBox@d3d@@A DD 0c3480000r	; -200	; RoostBox
	DD	0c3480000r			; -200
	DD	0c3160000r			; -150
	DD	043480000r			; 200
	DD	043480000r			; 200
	DD	0437a0000r			; 250
PUBLIC	?RoostSphere@@3UBoundingSphere@d3d@@A		; RoostSphere
?RoostSphere@@3UBoundingSphere@d3d@@A DB 010H DUP (?)	; RoostSphere
; Function compile flags: /Ogtpy
;	COMDAT ??__FPred@@YAXXZ
text$yd	SEGMENT
??__FPred@@YAXXZ PROC					; `dynamic atexit destructor for 'Pred'', COMDAT
	push	OFFSET ??1Mob@@QAE@XZ			; Mob::~Mob
	push	5
	push	192					; 000000c0H
	push	OFFSET ?Pred@@3PAVMob@@A		; Pred
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
??__FPred@@YAXXZ ENDP					; `dynamic atexit destructor for 'Pred''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FBird@@YAXXZ
text$yd	SEGMENT
??__FBird@@YAXXZ PROC					; `dynamic atexit destructor for 'Bird'', COMDAT
	push	OFFSET ??1Mob@@QAE@XZ			; Mob::~Mob
	push	2002					; 000007d2H
	push	192					; 000000c0H
	push	OFFSET ?Bird@@3PAVMob@@A		; Bird
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
??__FBird@@YAXXZ ENDP					; `dynamic atexit destructor for 'Bird''
; Function compile flags: /Ogtpy
text$yd	ENDS
;	COMDAT ??__FTheCamera@@YAXXZ
text$yd	SEGMENT
??__FTheCamera@@YAXXZ PROC				; `dynamic atexit destructor for 'TheCamera'', COMDAT
	ret	0
??__FTheCamera@@YAXXZ ENDP				; `dynamic atexit destructor for 'TheCamera''
PUBLIC	?proj@@3UD3DXMATRIX@@A				; proj
PUBLIC	?TheCamera@@3VCamera@@A				; TheCamera
PUBLIC	?Bird@@3PAVMob@@A				; Bird
PUBLIC	?Pred@@3PAVMob@@A				; Pred
PUBLIC	?View@@3UD3DXMATRIX@@A				; View
_WHITE_MTRL DB	044H DUP (?)
_YELLOW_MTRL DB	044H DUP (?)
?proj@@3UD3DXMATRIX@@A DB 040H DUP (?)			; proj
_RED_MTRL DB	044H DUP (?)
?TheCamera@@3VCamera@@A DB 034H DUP (?)			; TheCamera
?Bird@@3PAVMob@@A DB 05dd80H DUP (?)			; Bird
?Pred@@3PAVMob@@A DB 03c0H DUP (?)			; Pred
?View@@3UD3DXMATRIX@@A DB 040H DUP (?)			; View
_GREEN_MTRL DB	044H DUP (?)
_BLUE_MTRL DB	044H DUP (?)
_BLACK$initializer$ DD FLAT:??__EBLACK@d3d@@YAXXZ
_RED$initializer$ DD FLAT:??__ERED@d3d@@YAXXZ
_GREEN$initializer$ DD FLAT:??__EGREEN@d3d@@YAXXZ
_BLUE$initializer$ DD FLAT:??__EBLUE@d3d@@YAXXZ
_YELLOW$initializer$ DD FLAT:??__EYELLOW@d3d@@YAXXZ
_CYAN$initializer$ DD FLAT:??__ECYAN@d3d@@YAXXZ
_MAGENTA$initializer$ DD FLAT:??__EMAGENTA@d3d@@YAXXZ
_WHITE_MTRL$initializer$ DD FLAT:??__EWHITE_MTRL@d3d@@YAXXZ
_RED_MTRL$initializer$ DD FLAT:??__ERED_MTRL@d3d@@YAXXZ
_GREEN_MTRL$initializer$ DD FLAT:??__EGREEN_MTRL@d3d@@YAXXZ
_BLUE_MTRL$initializer$ DD FLAT:??__EBLUE_MTRL@d3d@@YAXXZ
_YELLOW_MTRL$initializer$ DD FLAT:??__EYELLOW_MTRL@d3d@@YAXXZ
_TheCamera$initializer$ DD FLAT:??__ETheCamera@@YAXXZ
_Bird$initializer$ DD FLAT:??__EBird@@YAXXZ
_Pred$initializer$ DD FLAT:??__EPred@@YAXXZ
END
